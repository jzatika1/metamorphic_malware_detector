; ---------------------------------------------------------------------------

RUNTIME_FUNCTION struc ; (sizeof=0xC, copyof_3) ; XREF: .rdata:0000000140006E8C/r
                                        ; .rdata:0000000140006E9C/r ...
FunctionStart   dd ?                    ; offset rva
FunctionEnd     dd ?                    ; offset rva pastend
UnwindInfo      dd ?                    ; offset rva
RUNTIME_FUNCTION ends

; ---------------------------------------------------------------------------

UNWIND_INFO_HDR struc ; (sizeof=0x4, copyof_4) ; XREF: .rdata:stru_140006E60/r
                                        ; .rdata:stru_140006E84/r ...
Ver3_Flags      db ?                    ; base 16
PrologSize      db ?                    ; base 16
CntUnwindCodes  db ?                    ; base 16
FrReg_FrRegOff  db ?                    ; base 16
UNWIND_INFO_HDR ends

; ---------------------------------------------------------------------------

UNWIND_CODE     struc ; (sizeof=0x2, copyof_5) ; XREF: .rdata:0000000140006E64/r
                                        ; .rdata:0000000140006E68/r ...
PrologOff       db ?
UnwindOp        db ?
UNWIND_CODE     ends

; ---------------------------------------------------------------------------

_FILETIME       struc ; (sizeof=0x8, copyof_9) ; XREF: __security_init_cookie/r
dwLowDateTime   dd ?                    ; XREF: __security_init_cookie+23/w
                                        ; __security_init_cookie+32/r
dwHighDateTime  dd ?
_FILETIME       ends

; ---------------------------------------------------------------------------

_LARGE_INTEGER  union ; (sizeof=0x8, copyof_12)
anonymous_0     _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E ?
u               _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E ?
QuadPart        dq ?
_LARGE_INTEGER  ends

; ---------------------------------------------------------------------------

_STARTUPINFOW   struc ; (sizeof=0x68, copyof_16)
                                        ; XREF: __scrt_get_show_window_mode/r
cb              dd ?
                db ? ; undefined
                db ? ; undefined
                db ? ; undefined
                db ? ; undefined
lpReserved      dq ?                    ; offset
lpDesktop       dq ?                    ; offset
lpTitle         dq ?                    ; offset
dwX             dd ?
dwY             dd ?
dwXSize         dd ?
dwYSize         dd ?
dwXCountChars   dd ?
dwYCountChars   dd ?
dwFillAttribute dd ?
dwFlags         dd ?                    ; XREF: __scrt_get_show_window_mode+22/r
wShowWindow     dw ?                    ; XREF: __scrt_get_show_window_mode+2C/r
cbReserved2     dw ?
                db ? ; undefined
                db ? ; undefined
                db ? ; undefined
                db ? ; undefined
lpReserved2     dq ?                    ; offset
hStdInput       dq ?                    ; offset
hStdOutput      dq ?                    ; offset
hStdError       dq ?                    ; offset
_STARTUPINFOW   ends

; ---------------------------------------------------------------------------

_CONTEXT        struc ; (sizeof=0x4D0, copyof_24) ; XREF: .data:ContextRecord/r
                                        ; __scrt_fastfail/r ...
P1Home          dq ?
P2Home          dq ?
P3Home          dq ?
P4Home          dq ?
P5Home          dq ?
P6Home          dq ?
ContextFlags    dd ?                    ; XREF: sub_1400037E0+55/w
MxCsr           dd ?
SegCs           dw ?
SegDs           dw ?
SegEs           dw ?
SegFs           dw ?
SegGs           dw ?
SegSs           dw ?
EFlags          dd ?
Dr0             dq ?
Dr1             dq ?
Dr2             dq ?
Dr3             dq ?
Dr6             dq ?
Dr7             dq ?
Rax             dq ?
Rcx             dq ?                    ; XREF: __report_gsfailure+5A/w
Rdx             dq ?
Rbx             dq ?
Rsp             dq ?                    ; XREF: __report_gsfailure+40/w
                                        ; __report_securityfailure+40/w ...
Rbp             dq ?
Rsi             dq ?
Rdi             dq ?
R8              dq ?
R9              dq ?
R10             dq ?
R11             dq ?
R12             dq ?
R13             dq ?
R14             dq ?
R15             dq ?
Rip             dq ?                    ; XREF: __report_gsfailure+30/w
                                        ; __report_gsfailure+47/r ...
anonymous_38    _CONTEXT::$D2ECA93702C646ACAFACD524BE9E8FEB ?
VectorRegister  M128A 26 dup(?)
VectorControl   dq ?
DebugControl    dq ?
LastBranchToRip dq ?
LastBranchFromRip dq ?
LastExceptionToRip dq ?
LastExceptionFromRip dq ?
_CONTEXT        ends

; ---------------------------------------------------------------------------

_EXCEPTION_POINTERS struc ; (sizeof=0x10, copyof_34)
                                        ; XREF: .rdata:ExceptionInfo/r
                                        ; __scrt_fastfail/r
ExceptionRecord dq ?                    ; XREF: __scrt_fastfail+107/w ; offset
ContextRecord   dq ?                    ; XREF: __scrt_fastfail+110/w ; offset
_EXCEPTION_POINTERS ends

; ---------------------------------------------------------------------------

_MEMORY_BASIC_INFORMATION struc ; (sizeof=0x30, align=0x8, copyof_41)
                                        ; XREF: sub_14000262C/r
BaseAddress     dq ?                    ; offset
AllocationBase  dq ?                    ; offset
AllocationProtect dd ?
                db ? ; undefined
                db ? ; undefined
                db ? ; undefined
                db ? ; undefined
RegionSize      dq ?
State           dd ?
Protect         dd ?                    ; XREF: sub_14000262C:loc_14000265A/r
Type            dd ?
                db ? ; undefined
                db ? ; undefined
                db ? ; undefined
                db ? ; undefined
_MEMORY_BASIC_INFORMATION ends

; ---------------------------------------------------------------------------

_SYSTEM_INFO    struc ; (sizeof=0x30, copyof_43) ; XREF: sub_14000262C/r
anonymous_0     _SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F ?
dwPageSize      dd ?                    ; XREF: sub_14000262C+40/r
lpMinimumApplicationAddress dq ?        ; offset
lpMaximumApplicationAddress dq ?        ; offset
dwActiveProcessorMask dq ?
dwNumberOfProcessors dd ?
dwProcessorType dd ?
dwAllocationGranularity dd ?
wProcessorLevel dw ?
wProcessorRevision dw ?
_SYSTEM_INFO    ends

; ---------------------------------------------------------------------------

_UNWIND_HISTORY_TABLE struc ; (sizeof=0xD8, copyof_48) ; XREF: sub_14000345C/r
Count           dd ?
LocalHint       db ?
GlobalHint      db ?
Search          db ?
Once            db ?
LowAddress      dq ?
HighAddress     dq ?
Entry           UNWIND_HISTORY_TABLE_ENTRY 12 dup(?)
_UNWIND_HISTORY_TABLE ends

; ---------------------------------------------------------------------------

xtime           struc ; (sizeof=0x10, align=0x8, copyof_58)
                                        ; XREF: sub_140003F28/r
sec             dq ?
nsec            dd ?
                db ? ; undefined
                db ? ; undefined
                db ? ; undefined
                db ? ; undefined
xtime           ends

; ---------------------------------------------------------------------------

C_SCOPE_TABLE   struc ; (sizeof=0x10, copyof_60) ; XREF: .rdata:0000000140006EE8/r
                                        ; .rdata:0000000140006EF8/r ...
Begin           dd ?                    ; offset rva
End             dd ?                    ; offset rva pastend
Handler         dd ?                    ; offset rva
Target          dd ?                    ; offset rva
C_SCOPE_TABLE   ends


;
; +-------------------------------------------------------------------------+
; |      This file was generated by The Interactive Disassembler (IDA)      |
; |           Copyright (c) 2024 Hex-Rays, <support@hex-rays.com>           |
; |                            Freeware version                             |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : ACA5303C31FAE34EF99530333F4366717ADA6F32B4115FDF4630E51D7D5773CE
; Input MD5    : E6DB5288E644EF6885016E5B4CD72819
; Input CRC32  : 8E11E610
; Compiler     : Visual C++

; PDB File Name : D:\dbs\el\omr\Target\x64\ship\postc2r\x-none\winword.pdb
; OS type         :  MS Windows
; Application type:  Executable

                .686p
                .mmx
                .model flat

; ===========================================================================

; Segment type: Group

; ===========================================================================

; [00001000 BYTES: COLLAPSED SEGMENT HEADER. PRESS CTRL-NUMPAD+ TO EXPAND]
; File Name   : C:\Program Files\Microsoft Office\root\Office16\WINWORD.EXE
; Format      : Portable executable for AMD64 (PE)
; Imagebase   : 140000000
; Timestamp   : 667BA6D9 (Wed Jun 26 05:27:53 2024)
; Section 1. (virtual address 00001000)
; Virtual size                  : 00003A98 (  15000.)
; Section size in file          : 00003C00 (  15360.)
; Offset to raw data for section: 00000400
; Flags 60000020: Text Executable Readable
; Alignment     : default
; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_text           segment para public 'CODE' use64
                assume cs:_text
                ;org 140001000h
                assume es:FLAT, ss:FLAT, ds:FLAT, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================


sub_140001000   proc near               ; DATA XREF: HEADER:0000000140000134↑o
                                        ; HEADER:000000014000021C↑o ...
                lea     rcx, sub_140002CC0 ; void (__cdecl *)()
                jmp     atexit
sub_140001000   endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140001010   proc near               ; DATA XREF: .rdata:0000000140005368↓o
                                        ; .rdata:0000000140005684↓o
                lea     rcx, qword_140008128
                jmp     sub_140001340
sub_140001010   endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=1A0h

; int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)
WinMain         proc near               ; CODE XREF: __scrt_common_main_seh(void)+101↓p
                                        ; DATA XREF: .rdata:0000000140006E8C↓o ...

phkResult       = qword ptr -280h
lpcbData        = qword ptr -278h
cbData          = dword ptr -270h
Data            = byte ptr -268h
Type            = dword ptr -260h
hKey            = qword ptr -258h
SubKey          = word ptr -250h
var_40          = qword ptr -40h
var_30          = qword ptr -30h

; FUNCTION CHUNK AT 0000000140001C08 SIZE 0000012C BYTES

; __unwind { // __GSHandlerCheck
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r14
                push    r15
                lea     rbp, [rsp-178h]
                sub     rsp, 278h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+1A0h+var_40], rax
                mov     r15d, r9d
; } // starts at 140001020

loc_14000104C:                          ; DATA XREF: .rdata:0000000140006E8C↓o
                                        ; .rdata:0000000140006E9C↓o ...
; __unwind { // __GSHandlerCheck
                mov     [rsp+2A0h+var_30], r12
                xor     r12d, r12d
                lea     r8, Format      ; "Software\\Microsoft\\Office\\%d.%d\\Wor"...
                mov     r14, rdx
                mov     [rsp+2A0h+cbData], r12d
                mov     rsi, rcx
                mov     [rsp+2A0h+hKey], r12
                lea     rcx, [rsp+2A0h+SubKey] ; Buffer
                mov     [rsp+2A0h+phkResult], r12
                lea     r9d, [r12+10h]
                lea     rdx, [r12-1]    ; MaxCount
                call    sub_1400012C0
                lea     rax, [rsp+2A0h+hKey]
                xor     r8d, r8d        ; ulOptions
                lea     r9d, [r12+3]    ; samDesired
                mov     [rsp+2A0h+phkResult], rax ; phkResult
                lea     rdx, [rsp+2A0h+SubKey] ; lpSubKey
                mov     rcx, 0FFFFFFFF80000001h ; hKey
                call    cs:RegOpenKeyExW
                test    eax, eax
                jnz     short loc_1400010F7
                mov     rcx, [rsp+2A0h+hKey] ; hKey
                test    rcx, rcx
                jz      short loc_1400010F7
                lea     rax, [rsp+2A0h+cbData]
                mov     [rsp+2A0h+Type], r12d
                mov     [rsp+2A0h+lpcbData], rax ; lpcbData
                lea     r9, [rsp+2A0h+Type] ; lpType
                xor     r8d, r8d        ; lpReserved
                mov     [rsp+2A0h+phkResult], r12 ; lpData
                lea     rdx, ValueName  ; "BootProfilerResiliency"
                call    cs:RegQueryValueExW
                mov     rcx, [rsp+2A0h+hKey] ; hKey
                mov     ebx, eax
                call    cs:RegCloseKey
                test    ebx, ebx
                jz      loc_1400011A2

loc_1400010F7:                          ; CODE XREF: WinMain+8D↑j WinMain+97↑j
                mov     r9d, 10h
                mov     dword ptr [rsp+2A0h+Data], r12d
                lea     r8, Format      ; "Software\\Microsoft\\Office\\%d.%d\\Wor"...
                mov     [rsp+2A0h+Type], 4
                mov     rdx, 0FFFFFFFFFFFFFFFFh ; MaxCount
                mov     [rsp+2A0h+hKey], r12
                lea     rcx, [rsp+2A0h+SubKey] ; Buffer
                mov     [rsp+2A0h+phkResult], r12
                call    sub_1400012C0
                lea     rax, [rsp+2A0h+hKey]
                mov     r9d, 3          ; samDesired
                xor     r8d, r8d        ; ulOptions
                mov     [rsp+2A0h+phkResult], rax ; phkResult
                lea     rdx, [rsp+2A0h+SubKey] ; lpSubKey
                mov     rcx, 0FFFFFFFF80000001h ; hKey
                call    cs:RegOpenKeyExW
                test    eax, eax
                jnz     short loc_1400011A2
                mov     rcx, [rsp+2A0h+hKey] ; hKey
                test    rcx, rcx
                jz      short loc_1400011A2
                lea     rax, [rsp+2A0h+Type]
                mov     [rsp+2A0h+cbData], r12d
                mov     [rsp+2A0h+lpcbData], rax ; lpcbData
                lea     r9, [rsp+2A0h+cbData] ; lpType
                lea     rax, [rsp+2A0h+Data]
                xor     r8d, r8d        ; lpReserved
                lea     rdx, aBootprofilerms ; "BootProfilerMsec"
                mov     [rsp+2A0h+phkResult], rax ; lpData
                call    cs:RegQueryValueExW
                mov     rcx, [rsp+2A0h+hKey] ; hKey
                mov     ebx, eax
                call    cs:RegCloseKey
                test    ebx, ebx
                jz      loc_140001C08

loc_1400011A2:                          ; CODE XREF: WinMain+D1↑j WinMain+133↑j ...
                mov     rdi, r12

loc_1400011A5:                          ; CODE XREF: WinMain+C47↓j
                mov     r9d, 10h
                mov     [rsp+2A0h+hKey], r12
                lea     r8, aSoftwareMicros_0 ; "Software\\Microsoft\\Office\\%d.%d\\Wor"...
                mov     [rsp+2A0h+cbData], r12d
                mov     rdx, 0FFFFFFFFFFFFFFFFh ; MaxCount
                mov     dword ptr [rsp+2A0h+Data], r12d
                lea     rcx, [rsp+2A0h+SubKey] ; Buffer
                mov     [rsp+2A0h+Type], 4
                mov     [rsp+2A0h+phkResult], r12
                call    sub_1400012C0
                lea     rax, [rsp+2A0h+hKey]
                mov     r9d, 1          ; samDesired
                xor     r8d, r8d        ; ulOptions
                mov     [rsp+2A0h+phkResult], rax ; phkResult
                lea     rdx, [rsp+2A0h+SubKey] ; lpSubKey
                mov     rcx, 0FFFFFFFF80000001h ; hKey
                call    cs:RegOpenKeyExW
                mov     r12, [rsp+2A0h+var_30]
                test    eax, eax
                jnz     short loc_140001258
; } // starts at 14000104C

loc_140001210:                          ; DATA XREF: .pdata:000000014000900C↓o
                                        ; .pdata:0000000140009018↓o
; __unwind { // __GSHandlerCheck        ; hKey
                mov     rcx, [rsp+2A0h+hKey]
                test    rcx, rcx
                jz      short loc_140001258
                lea     rax, [rsp+2A0h+Type]
                xor     r8d, r8d        ; lpReserved
                mov     [rsp+2A0h+lpcbData], rax ; lpcbData
                lea     r9, [rsp+2A0h+cbData] ; lpType
                lea     rax, [rsp+2A0h+Data]
                lea     rdx, aWwlibtdll ; "WwlibtDll"
                mov     [rsp+2A0h+phkResult], rax ; lpData
                call    cs:RegQueryValueExW
                mov     rcx, [rsp+2A0h+hKey] ; hKey
                mov     ebx, eax
                call    cs:RegCloseKey
                test    ebx, ebx
                jz      loc_140001C89

loc_140001258:                          ; CODE XREF: WinMain+1EE↑j WinMain+1F8↑j ...
                xor     edx, edx        ; hFile
                lea     rcx, LibFileName ; "wwlib.dll"
                mov     r8d, 1000h      ; dwFlags
                call    cs:LoadLibraryExW
                mov     rbx, rax
                test    rax, rax
                jz      loc_140001CB0

loc_140001279:                          ; CODE XREF: WinMain+C99↓j WinMain+CBF↓j ...
                test    rbx, rbx
                jz      loc_140001CFF

loc_140001282:                          ; CODE XREF: WinMain+CEA↓j
                lea     rdx, ProcName   ; "FMain"
                mov     rcx, rbx        ; hModule
                call    cs:GetProcAddress
                test    rax, rax
                jz      loc_140001D10
                mov     r9, cs:qword_140008128
                mov     r8d, r15d
                mov     rdx, r14
                mov     [rsp+2A0h+phkResult], rdi
                mov     rcx, rsi
                call    cs:__guard_dispatch_icall_fptr
                xor     eax, eax
                jmp     loc_140001D15
; ---------------------------------------------------------------------------
                align 2
; } // starts at 140001210
WinMain         endp

algn_1400012BE:                         ; DATA XREF: .pdata:0000000140009018↓o
                align 20h

; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_1400012C0(wchar_t *Buffer, size_t MaxCount, wchar_t *Format)
sub_1400012C0   proc near               ; CODE XREF: WinMain+62↑p WinMain+107↑p ...

Format          = qword ptr -58h
Locale          = qword ptr -50h
ArgList         = qword ptr -48h
arg_10          = qword ptr  18h
arg_18          = byte ptr  20h

                mov     [rsp+arg_10], r8
                mov     qword ptr [rsp+arg_18], r9
                push    rbx
                push    rbp
                push    rsi
                push    rdi
                push    r14
                sub     rsp, 50h
                mov     rdi, r8
                lea     rbp, [rsp+78h+arg_18]
                mov     rbx, rdx
                mov     rsi, rcx
                xor     r14d, r14d
                call    sub_140001330
                mov     [rsp+78h+ArgList], rbp ; ArgList
                mov     r9, rbx         ; MaxCount
                mov     [rsp+78h+Locale], r14 ; Locale
                mov     r8d, 104h       ; BufferCount
                mov     rdx, rsi        ; Buffer
                mov     [rsp+78h+Format], rdi ; Format
                mov     rcx, [rax]      ; Options
                call    cs:__stdio_common_vsnwprintf_s
                test    eax, eax
                mov     ecx, 0FFFFFFFFh
                cmovs   eax, ecx
                add     rsp, 50h
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbp
                pop     rbx
                retn
sub_1400012C0   endp

; ---------------------------------------------------------------------------
algn_140001326:                         ; DATA XREF: .pdata:0000000140009024↓o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140001330   proc near               ; CODE XREF: sub_1400012C0+28↑p
                                        ; __scrt_initialize_default_local_stdio_options+4↓p ...
                lea     rax, unk_140008120
                retn
sub_140001330   endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140001340   proc near               ; CODE XREF: sub_140001010+7↑j
                                        ; sub_140003DF4+15↓p ...

arg_0           = qword ptr  8

; FUNCTION CHUNK AT 0000000140002CCC SIZE 00000089 BYTES

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rbx, rcx
                call    cs:_Query_perf_frequency
                mov     rdi, rax
                call    cs:_Query_perf_counter
                mov     r9, rax
                cmp     rdi, 989680h
                jnz     loc_140002CCC
                imul    rax, r9, 64h ; 'd'

loc_140001370:                          ; CODE XREF: sub_140001340+1A0F↓j
                mov     [rbx], rax

loc_140001373:                          ; CODE XREF: sub_140001340+19EC↓j
                mov     rax, rbx
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
sub_140001340   endp

; ---------------------------------------------------------------------------
algn_140001381:                         ; DATA XREF: .rdata:0000000140007030↓o
                                        ; .pdata:0000000140009030↓o
                align 10h

; =============== S U B R O U T I N E =======================================


; int __cdecl UserMathErrorFunction(struct _exception *)
UserMathErrorFunction proc near         ; CODE XREF: pre_c_initialization(void)+1C↓p
                                        ; pre_c_initialization(void)+7D↓p ...
                xor     eax, eax
                retn
UserMathErrorFunction endp

; ---------------------------------------------------------------------------
                align 20h
; [000000B6 BYTES: COLLAPSED FUNCTION pre_c_initialization(void). PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140001456:                         ; DATA XREF: .pdata:000000014000903C↓o
                align 20h
; [00000010 BYTES: COLLAPSED FUNCTION post_pgo_initialization(void). PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000019 BYTES: COLLAPSED FUNCTION pre_cpp_initialization(void). PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140001489:                         ; DATA XREF: .pdata:0000000140009054↓o
                align 4
; [00000175 BYTES: COLLAPSED FUNCTION __scrt_common_main_seh(void). PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140001601:                         ; DATA XREF: .pdata:0000000140009060↓o
                align 10h
; [00000012 BYTES: COLLAPSED FUNCTION start. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140001622:                         ; DATA XREF: .pdata:000000014000906C↓o
                align 10h
; [0000003A BYTES: COLLAPSED FUNCTION __scrt_acquire_startup_lock. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_14000166A:                         ; DATA XREF: .pdata:0000000140009078↓o
                align 4
; [0000003A BYTES: COLLAPSED FUNCTION __scrt_initialize_crt. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_1400016A6:                         ; DATA XREF: .pdata:0000000140009084↓o
                align 8
; [0000008B BYTES: COLLAPSED FUNCTION __scrt_initialize_onexit_tables. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140001733:                         ; DATA XREF: .pdata:0000000140009090↓o
                align 4
; [00000024 BYTES: COLLAPSED FUNCTION __scrt_release_startup_lock. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140001758:                         ; DATA XREF: .pdata:000000014000909C↓o
                align 20h
; [0000003A BYTES: COLLAPSED FUNCTION _onexit. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_14000179A:                         ; DATA XREF: .pdata:00000001400090A8↓o
                align 20h
; [00000017 BYTES: COLLAPSED FUNCTION atexit. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_1400017B7:                         ; DATA XREF: .pdata:00000001400090B4↓o
                align 8
; [000000AC BYTES: COLLAPSED FUNCTION __security_init_cookie. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION charNode::raw_length(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 4
; [00000006 BYTES: COLLAPSED FUNCTION _get_startup_file_mode. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 4

; =============== S U B R O U T I N E =======================================


sub_140001874   proc near               ; CODE XREF: pre_c_initialization(void)+59↑p
                lea     rcx, unk_1400080F0
                jmp     cs:InitializeSListHead
sub_140001874   endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140001890   proc near               ; CODE XREF: pre_c_initialization(void)+89↑p
                                        ; __scrt_initialize_crt+14↑p ...
                mov     al, 1
                retn
sub_140001890   endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


_guard_check_icall_nop proc near        ; CODE XREF: pre_c_initialization(void):loc_140001413↑p
                                        ; pre_c_initialization(void)+78↑p
                                        ; DATA XREF: ...
                retn    0
_guard_check_icall_nop endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1400018B0   proc near               ; CODE XREF: __scrt_initialize_default_local_stdio_options+D↓p
                                        ; sub_140001B50+D↓p
                lea     rax, unk_140008100
                retn
sub_1400018B0   endp

; [0000001B BYTES: COLLAPSED FUNCTION __scrt_initialize_default_local_stdio_options. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_1400018D3:                         ; DATA XREF: .pdata:00000001400090CC↓o
                align 4
; [0000000C BYTES: COLLAPSED FUNCTION __scrt_is_user_matherr_present. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================


sub_1400018E0   proc near               ; CODE XREF: __scrt_common_main_seh(void)+97↑p
                lea     rax, unk_140008118
                retn
sub_1400018E0   endp


; =============== S U B R O U T I N E =======================================


sub_1400018E8   proc near               ; CODE XREF: __scrt_common_main_seh(void):loc_14000154F↑p
                lea     rax, unk_140008110
                retn
sub_1400018E8   endp

; [0000003A BYTES: COLLAPSED FUNCTION __scrt_get_show_window_mode. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_14000192A:                         ; DATA XREF: .pdata:00000001400090D8↓o
                align 10h
; [00000005 BYTES: COLLAPSED FUNCTION j_UserMathErrorFunction. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 8
; [0000000E BYTES: COLLAPSED FUNCTION __scrt_set_unhandled_exception_filter. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 8

; =============== S U B R O U T I N E =======================================


sub_140001948   proc near               ; CODE XREF: pre_c_initialization(void)+38↑p
                                        ; DATA XREF: .pdata:00000001400090E4↓o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                lea     rbx, unk_140005740
                lea     rdi, unk_140005740
                jmp     short loc_140001974
; ---------------------------------------------------------------------------

loc_140001962:                          ; CODE XREF: sub_140001948+2F↓j
                mov     rax, [rbx]
                test    rax, rax
                jz      short loc_140001970
                call    cs:__guard_dispatch_icall_fptr

loc_140001970:                          ; CODE XREF: sub_140001948+20↑j
                add     rbx, 8

loc_140001974:                          ; CODE XREF: sub_140001948+18↑j
                cmp     rbx, rdi
                jb      short loc_140001962
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
sub_140001948   endp

; [000001AC BYTES: COLLAPSED FUNCTION __isa_available_init. PRESS CTRL-NUMPAD+ TO EXPAND]
; [0000000C BYTES: COLLAPSED FUNCTION __scrt_is_ucrt_dll_in_use. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION memset. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140001B50   proc near               ; DATA XREF: .rdata:0000000140005398↓o
                                        ; .rdata:00000001400056A0↓o ...
                sub     rsp, 28h
                call    sub_140001330
                or      qword ptr [rax], 4
                call    sub_1400018B0
                or      qword ptr [rax], 2
                xor     eax, eax
                add     rsp, 28h
                retn
sub_140001B50   endp

; [00000006 BYTES: COLLAPSED FUNCTION _set_app_type. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _configure_narrow_argv. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _initialize_narrow_environment. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _get_narrow_winmain_command_line. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _initterm. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _initterm_e. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _set_fmode. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _configthreadlocale. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _set_new_mode. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __p__commode. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __initialize_lconv_for_unsigned_char. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [00000006 BYTES: COLLAPSED FUNCTION _crt_atexit. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h

; =============== S U B R O U T I N E =======================================


_guard_dispatch_icall_nop proc near     ; CODE XREF: WinMain+290↑p
                                        ; __scrt_common_main_seh(void)+BD↑p ...
                jmp     rax
_guard_dispatch_icall_nop endp

; ---------------------------------------------------------------------------
                db 0CCh
algn_140001BD3:                         ; DATA XREF: .pdata:0000000140009108↓o
                align 20h
; [0000001E BYTES: COLLAPSED FUNCTION __security_check_cookie. PRESS CTRL-NUMPAD+ TO EXPAND]
                db 0CCh
algn_140001BFF:                         ; DATA XREF: .pdata:0000000140009114↓o
                align 20h

; =============== S U B R O U T I N E =======================================


_guard_xfg_dispatch_icall_nop proc near ; DATA XREF: .rdata:__guard_xfg_dispatch_icall_fptr↓o
                                        ; .rdata:__guard_xfg_table_dispatch_icall_fptr↓o ...
                jmp     cs:__guard_dispatch_icall_fptr
_guard_xfg_dispatch_icall_nop endp

; ---------------------------------------------------------------------------
                db 0CCh
algn_140001C07:                         ; DATA XREF: .pdata:0000000140009120↓o
                align 8
; START OF FUNCTION CHUNK FOR WinMain

loc_140001C08:                          ; CODE XREF: WinMain+17C↑j
                                        ; DATA XREF: .pdata:000000014000912C↓o
; __unwind { // __GSHandlerCheck
                cmp     [rsp+2A0h+cbData], 4
                jnz     loc_1400011A2
                cmp     dword ptr [rsp+2A0h+Data], r12d
                jbe     loc_1400011A2
                lea     rdi, hMutex
                mov     rcx, rdi
                call    sub_1400035D0
                test    al, al
                jz      loc_1400011A2
                mov     eax, dword ptr [rsp+2A0h+Data]
                xor     r9d, r9d        ; lpName
                xor     r8d, r8d        ; bInitialState
                mov     cs:dword_140008958, eax
                xor     ecx, ecx        ; lpEventAttributes
                lea     edx, [r9+1]     ; bManualReset
                call    cs:CreateEventW
                mov     cs:hHandle, rax
                test    rax, rax
                jz      short loc_140001C6D
                mov     rcx, rdi
                call    sub_140003640
                test    al, al
                jnz     loc_1400011A5

loc_140001C6D:                          ; CODE XREF: WinMain+C3B↑j
                mov     rcx, cs:hMutex  ; hMutex
                test    rcx, rcx
                jz      loc_1400011A2
                call    cs:ReleaseMutex
                jmp     loc_1400011A2
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 140001C08
; ---------------------------------------------------------------------------

loc_140001C89:                          ; CODE XREF: WinMain+232↑j
                                        ; DATA XREF: .pdata:000000014000912C↓o ...
; __unwind { // __GSHandlerCheck
                cmp     [rsp+2A0h+cbData], 4
                jnz     loc_140001258
                cmp     dword ptr [rsp+2A0h+Data], 0
                jz      loc_140001258
                xor     r8d, r8d
                lea     rcx, aWwlibtDll ; "wwlibt.dll"
                call    sub_140003D50
                jmp     short loc_140001D04
; ---------------------------------------------------------------------------

loc_140001CB0:                          ; CODE XREF: WinMain+253↑j
                call    cs:GetLastError
                cmp     eax, 57h ; 'W'
                jnz     loc_140001279
                lea     rcx, ModuleName ; "kernel32.dll"
                call    cs:GetModuleHandleW
                mov     rcx, rax        ; hModule
                lea     rdx, aAdddlldirector ; "AddDllDirectory"
                call    cs:GetProcAddress
                test    rax, rax
                jnz     loc_140001279
                xor     r8d, r8d        ; dwFlags
                lea     rcx, LibFileName ; "wwlib.dll"
                xor     edx, edx        ; hFile
                call    cs:LoadLibraryExW
                mov     rbx, rax
                jmp     loc_140001279
; ---------------------------------------------------------------------------

loc_140001CFF:                          ; CODE XREF: WinMain+25C↑j
                call    sub_140003B24

loc_140001D04:                          ; CODE XREF: WinMain+C8E↑j
                mov     rbx, rax
                test    rax, rax
                jnz     loc_140001282

loc_140001D10:                          ; CODE XREF: WinMain+275↑j
                mov     eax, 1

loc_140001D15:                          ; CODE XREF: WinMain+298↑j
                mov     rcx, [rbp+1A0h+var_40]
                xor     rcx, rsp        ; StackCookie
                call    __security_check_cookie
                add     rsp, 278h
                pop     r15
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; } // starts at 140001C89
; END OF FUNCTION CHUNK FOR WinMain
; ---------------------------------------------------------------------------
algn_140001D34:                         ; DATA XREF: .pdata:0000000140009138↓o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140001D40   proc near               ; DATA XREF: .rdata:00000001400056A8↓o
                                        ; .rdata:0000000140005BE0↓o
                movzx   eax, word ptr [rcx+14h]
                retn
sub_140001D40   endp

; ---------------------------------------------------------------------------
                align 10h
; [00000005 BYTES: COLLAPSED FUNCTION __crt_stdio_input::format_string_parser<wchar_t>::literal_character_lead(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [00000005 BYTES: COLLAPSED FUNCTION __crt_win32_buffer_debug_info::file_name(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [00000005 BYTES: COLLAPSED FUNCTION get_srw_lock. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140001D80   proc near               ; CODE XREF: sub_140002CC0+7↓j
                                        ; DATA XREF: .pdata:0000000140009144↓o
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                mov     rcx, [rcx+20h]
                test    rcx, rcx
                jz      short loc_140001DD3
                mov     rdx, [rbx+28h]
                call    sub_140002E90
                mov     rcx, [rbx+20h]
                mov     rdx, 0AAAAAAAAAAAAAAABh
                mov     rax, [rbx+30h]
                sub     rax, rcx
                sar     rax, 3
                imul    rax, rdx
                lea     rdx, [rax+rax*2]
                shl     rdx, 3
                call    sub_140002E5C
                xor     eax, eax
                mov     [rbx+20h], rax
                mov     [rbx+28h], rax
                mov     [rbx+30h], rax

loc_140001DD3:                          ; CODE XREF: sub_140001D80+10↑j
                add     rsp, 20h
                pop     rbx
                retn
sub_140001D80   endp


; =============== S U B R O U T I N E =======================================


sub_140001DD9   proc near               ; CODE XREF: sub_140001E53+7↓j
                                        ; sub_140001E5F+7↓j ...

var_48          = xmmword ptr -48h
var_38          = xmmword ptr -38h
var_28          = xmmword ptr -28h
var_18          = xmmword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     [rsp+arg_0], rcx
                mov     [rsp+arg_8], rdx
                mov     [rsp+arg_10], r8
                mov     [rsp+arg_18], r9
                sub     rsp, 68h
                movdqa  [rsp+68h+var_48], xmm0
                movdqa  [rsp+68h+var_38], xmm1
                movdqa  [rsp+68h+var_28], xmm2
                movdqa  [rsp+68h+var_18], xmm3
                mov     rdx, rax
                lea     rcx, Mso20Win32Client_dll_import_table
                call    sub_140002890
                movdqa  xmm0, [rsp+68h+var_48]
                movdqa  xmm1, [rsp+68h+var_38]
                movdqa  xmm2, [rsp+68h+var_28]
                movdqa  xmm3, [rsp+68h+var_18]
                mov     rcx, [rsp+68h+arg_0]
                mov     rdx, [rsp+68h+arg_8]
                mov     r8, [rsp+68h+arg_10]
                mov     r9, [rsp+68h+arg_18]
                add     rsp, 68h
                jmp     short loc_140001E51
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_140001E51:                          ; CODE XREF: sub_140001DD9+75↑j
                                        ; DATA XREF: .pdata:0000000140009150↓o
                jmp     rax
sub_140001DD9   endp


; =============== S U B R O U T I N E =======================================


sub_140001E53   proc near
                lea     rax, Mso20Win32Client_53248
                jmp     sub_140001DD9
sub_140001E53   endp


; =============== S U B R O U T I N E =======================================


sub_140001E5F   proc near
                lea     rax, Mso20Win32Client_46386
                jmp     sub_140001DD9
sub_140001E5F   endp


; =============== S U B R O U T I N E =======================================


sub_140001E6B   proc near
                lea     rax, Mso20Win32Client_16175
                jmp     sub_140001DD9
sub_140001E6B   endp

; ---------------------------------------------------------------------------
                align 8
; [00000098 BYTES: COLLAPSED FUNCTION __scrt_is_nonwritable_in_current_image. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000029 BYTES: COLLAPSED FUNCTION __scrt_uninitialize_crt. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140001F39:                         ; DATA XREF: .pdata:0000000140009168↓o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140001F40   proc near               ; DATA XREF: .rdata:00000001400056B8↓o
                                        ; .rdata:off_140005770↓o ...
                push    rbx
                sub     rsp, 20h
                lea     rax, off_140005770
                mov     rbx, rcx
                mov     [rcx], rax
                test    dl, 1
                jz      short loc_140001F62
                mov     edx, 18h
                call    sub_14000246C

loc_140001F62:                          ; CODE XREF: sub_140001F40+16↑j
                mov     rax, rbx
                add     rsp, 20h
                pop     rbx
                retn
sub_140001F40   endp

; ---------------------------------------------------------------------------
algn_140001F6B:                         ; DATA XREF: .pdata:0000000140009174↓o
                align 4
; [00000034 BYTES: COLLAPSED FUNCTION __raise_securityfailure. PRESS CTRL-NUMPAD+ TO EXPAND]
byte_140001FA0  db 0CCh                 ; DATA XREF: .pdata:0000000140009180↓o
                align 10h
; [000000D5 BYTES: COLLAPSED FUNCTION __report_gsfailure. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140002085:                         ; DATA XREF: .pdata:000000014000918C↓o
                align 8

; =============== S U B R O U T I N E =======================================


sub_140002088   proc near               ; CODE XREF: sub_140003B24:loc_140003D14↓p
                                        ; DATA XREF: .pdata:0000000140009198↓o
                sub     rsp, 28h
                mov     ecx, 8
                call    __report_securityfailure
                nop
                jmp     short loc_14000209A
; ---------------------------------------------------------------------------
                align 2

loc_14000209A:                          ; CODE XREF: sub_140002088+F↑j
                add     rsp, 28h
                retn
sub_140002088   endp

; ---------------------------------------------------------------------------
algn_14000209F:                         ; DATA XREF: .pdata:0000000140009198↓o
                align 20h
; [0000009F BYTES: COLLAPSED FUNCTION __report_securityfailure. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_14000213F:                         ; DATA XREF: .pdata:00000001400091A4↓o
                align 20h
; [0000006D BYTES: COLLAPSED FUNCTION capture_current_context. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_1400021AD:                         ; DATA XREF: .pdata:00000001400091B0↓o
                align 10h
; [00000071 BYTES: COLLAPSED FUNCTION capture_previous_context. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140002221:                         ; DATA XREF: .pdata:00000001400091BC↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_140002224   proc near               ; CODE XREF: __scrt_fastfail+2F↓p
                                        ; __scrt_fastfail+132↓p
                and     cs:dword_1400088E0, 0
                retn
sub_140002224   endp

; [00000148 BYTES: COLLAPSED FUNCTION __scrt_fastfail. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000051 BYTES: COLLAPSED FUNCTION __scrt_is_managed_app. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_1400023C5:                         ; DATA XREF: .pdata:00000001400091D4↓o
                align 10h
; [0000005B BYTES: COLLAPSED FUNCTION __scrt_unhandled_exception_filter. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_14000242B:                         ; DATA XREF: .pdata:00000001400091E0↓o
                align 10h

; =============== S U B R O U T I N E =======================================


; void __cdecl sub_140002430()
sub_140002430   proc near               ; DATA XREF: pre_c_initialization(void)+3D↑o
                                        ; .rdata:00000001400056C4↓o ...

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                lea     rbx, unk_140005EA0
                lea     rdi, unk_140005EA0
                jmp     short loc_14000245C
; ---------------------------------------------------------------------------

loc_14000244A:                          ; CODE XREF: sub_140002430+2F↓j
                mov     rax, [rbx]
                test    rax, rax
                jz      short loc_140002458
                call    cs:__guard_dispatch_icall_fptr

loc_140002458:                          ; CODE XREF: sub_140002430+20↑j
                add     rbx, 8

loc_14000245C:                          ; CODE XREF: sub_140002430+18↑j
                cmp     rbx, rdi
                jb      short loc_14000244A
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
sub_140002430   endp


; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_14000246C   proc near               ; CODE XREF: sub_140001F40+1D↑p
                                        ; DATA XREF: .pdata:00000001400091EC↓o
                jmp     sub_140003DE4
sub_14000246C   endp

; ---------------------------------------------------------------------------
                align 20h
; [00000006 BYTES: COLLAPSED FUNCTION __CxxFrameHandler4. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __C_specific_handler. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __current_exception. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __current_exception_context. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _seh_filter_exe. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION __setusermatherr. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION exit. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _exit. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _cexit. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _c_exit. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _register_thread_local_exe_atexit_callback. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _initialize_onexit_table. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _register_onexit_function. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [00000006 BYTES: COLLAPSED FUNCTION terminate. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1400024E0   proc near               ; CODE XREF: sub_140002890+25↓p
                                        ; sub_140002890+27E↓p
                                        ; DATA XREF: ...
                push    rbx
                sub     rsp, 20h
                test    cs:dword_140005590, 1000h
                jz      loc_140002584
                call    sub_14000258C
                mov     ebx, 1
                test    al, al
                jz      short loc_14000251C
                mov     rax, cs:qword_1400088F0
                lea     rcx, qword_140008900
                call    cs:__guard_dispatch_icall_fptr
                jmp     short loc_140002533
; ---------------------------------------------------------------------------

loc_14000251A:                          ; CODE XREF: sub_1400024E0+46↓j
                pause

loc_14000251C:                          ; CODE XREF: sub_1400024E0+22↑j
                                        ; sub_1400024E0+51↓j
                mov     rax, cs:qword_140008900
                test    rax, rax
                jnz     short loc_14000251A
                lock cmpxchg cs:qword_140008900, rbx
                jnz     short loc_14000251C

loc_140002533:                          ; CODE XREF: sub_1400024E0+38↑j
                mov     eax, cs:dword_140008908
                add     eax, ebx
                mov     cs:dword_140008908, eax
                cmp     eax, ebx
                jnz     short loc_140002556
                lea     rdx, flNewProtect ; lpflOldProtect
                mov     ecx, 4          ; flNewProtect
                call    sub_140002760

loc_140002556:                          ; CODE XREF: sub_1400024E0+63↑j
                call    sub_14000258C
                test    al, al
                jz      short loc_140002579
                mov     rax, cs:qword_1400088F8
                lea     rcx, qword_140008900
                add     rsp, 20h
                pop     rbx
                jmp     cs:__guard_dispatch_icall_fptr
; ---------------------------------------------------------------------------

loc_140002579:                          ; CODE XREF: sub_1400024E0+7D↑j
                mov     cs:qword_140008900, 0

loc_140002584:                          ; CODE XREF: sub_1400024E0+10↑j
                add     rsp, 20h
                pop     rbx
                retn
sub_1400024E0   endp

; ---------------------------------------------------------------------------
algn_14000258A:                         ; DATA XREF: .pdata:00000001400091F8↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_14000258C   proc near               ; CODE XREF: sub_1400024E0+16↑p
                                        ; sub_1400024E0:loc_140002556↑p ...

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rax, cs:qword_1400088E8
                mov     edi, 1
                cmp     rax, rdi
                jz      short loc_14000261D
                test    rax, rax
                jnz     short loc_140002618
                lea     rcx, aKernel32Dll_1 ; "KERNEL32.DLL"
                call    cs:GetModuleHandleW
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_1400025C6

loc_1400025C1:                          ; CODE XREF: sub_14000258C+4D↓j
                                        ; sub_14000258C+69↓j
                mov     rbx, rdi
                jmp     short loc_1400025FE
; ---------------------------------------------------------------------------

loc_1400025C6:                          ; CODE XREF: sub_14000258C+33↑j
                lea     rdx, aAcquiresrwlock ; "AcquireSRWLockExclusive"
                mov     rcx, rbx        ; hModule
                call    cs:GetProcAddress
                test    rax, rax
                jz      short loc_1400025C1
                lea     rdx, aReleasesrwlock ; "ReleaseSRWLockExclusive"
                mov     cs:qword_1400088F0, rax
                mov     rcx, rbx        ; hModule
                call    cs:GetProcAddress
                test    rax, rax
                jz      short loc_1400025C1
                mov     cs:qword_1400088F8, rax

loc_1400025FE:                          ; CODE XREF: sub_14000258C+38↑j
                xor     eax, eax
                lock cmpxchg cs:qword_1400088E8, rbx
                jnz     short loc_140002610
                cmp     rbx, rdi
                jz      short loc_14000261D

loc_140002610:                          ; CODE XREF: sub_14000258C+7D↑j
                cmp     rax, rdi
                setnz   al
                jmp     short loc_14000261F
; ---------------------------------------------------------------------------

loc_140002618:                          ; CODE XREF: sub_14000258C+1E↑j
                mov     al, dil
                jmp     short loc_14000261F
; ---------------------------------------------------------------------------

loc_14000261D:                          ; CODE XREF: sub_14000258C+19↑j
                                        ; sub_14000258C+82↑j
                xor     al, al

loc_14000261F:                          ; CODE XREF: sub_14000258C+8A↑j
                                        ; sub_14000258C+8F↑j
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
sub_14000258C   endp

; ---------------------------------------------------------------------------
algn_14000262A:                         ; DATA XREF: .pdata:0000000140009204↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_14000262C   proc near               ; CODE XREF: sub_140002760+5D↓p
                                        ; DATA XREF: .pdata:0000000140009210↓o

Buffer          = _MEMORY_BASIC_INFORMATION ptr -68h
SystemInfo      = _SYSTEM_INFO ptr -38h
arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 80h
                mov     rdi, rdx
                mov     r8d, 30h ; '0'  ; dwLength
                lea     rdx, [rsp+88h+Buffer] ; lpBuffer
                mov     rbx, rcx
                call    cs:VirtualQuery
                test    rax, rax
                jnz     short loc_14000265A
                lea     ecx, [rax+19h]
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_14000265A:                          ; CODE XREF: sub_14000262C+27↑j
                test    byte ptr [rsp+88h+Buffer.Protect], 44h
                jz      short loc_1400026B3
                lea     rcx, [rsp+88h+SystemInfo] ; lpSystemInfo
                call    cs:GetSystemInfo
                mov     r9d, [rsp+88h+SystemInfo.dwPageSize]
                xor     edx, edx
                mov     r8d, r9d
                neg     r8
                and     r8, rbx
                lea     ecx, [r9-1]
                mov     eax, ecx
                and     ecx, ebx
                and     eax, edi
                add     eax, ecx
                dec     rax
                add     rax, r9
                div     r9
                xor     edx, edx
                mov     rcx, rax
                mov     rax, rdi
                div     r9
                add     rcx, rax
                mov     eax, ecx
                test    ecx, ecx
                jz      short loc_1400026B3

loc_1400026A5:                          ; CODE XREF: sub_14000262C+85↓j
                lock or dword ptr [r8], 0
                add     r8, r9
                sub     rax, 1
                jnz     short loc_1400026A5

loc_1400026B3:                          ; CODE XREF: sub_14000262C+33↑j
                                        ; sub_14000262C+77↑j
                mov     rbx, [rsp+88h+arg_0]
                add     rsp, 80h
                pop     rdi
                retn
sub_14000262C   endp


; =============== S U B R O U T I N E =======================================


sub_1400026C4   proc near               ; CODE XREF: sub_140002760+1D↓p
                                        ; DATA XREF: .pdata:0000000140009210↓o ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                mov     [rsp+arg_10], rdi
                movsxd  r8, cs:off_14000003C
                lea     rsi, __ImageBase
                add     r8, rsi
                mov     rbx, rdx
                mov     rdi, rcx
                cmp     dword ptr [r8+84h], 0Dh
                jbe     short loc_14000273C
                mov     r10d, [r8+0F0h]
                xor     r9d, r9d
                test    r10d, r10d
                jz      short loc_14000273C
                movzx   ecx, word ptr [r8+14h]
                movzx   r11d, word ptr [r8+6]
                add     rcx, 18h
                mov     r10d, [r10+rsi+0Ch]
                add     rcx, r8
                test    r11d, r11d
                jz      short loc_14000273C

loc_14000271E:                          ; CODE XREF: sub_1400026C4+76↓j
                mov     eax, [rcx+0Ch]
                cmp     r10d, eax
                jb      short loc_140002730
                mov     edx, [rcx+8]
                add     eax, edx
                cmp     r10d, eax
                jb      short loc_14000274E

loc_140002730:                          ; CODE XREF: sub_1400026C4+60↑j
                inc     r9d
                add     rcx, 28h ; '('
                cmp     r9d, r11d
                jb      short loc_14000271E

loc_14000273C:                          ; CODE XREF: sub_1400026C4+2E↑j
                                        ; sub_1400026C4+3D↑j ...
                xor     eax, eax

loc_14000273E:                          ; CODE XREF: sub_1400026C4+97↓j
                mov     rbx, [rsp+arg_0]
                mov     rsi, [rsp+arg_8]
                mov     rdi, [rsp+arg_10]
                retn
; ---------------------------------------------------------------------------

loc_14000274E:                          ; CODE XREF: sub_1400026C4+6A↑j
                mov     [rdi], edx
                mov     eax, [rcx+24h]
                mov     [rbx], eax
                mov     eax, [rcx+0Ch]
                add     rax, rsi
                jmp     short loc_14000273E
; ---------------------------------------------------------------------------
                align 2
sub_1400026C4   endp

algn_14000275E:                         ; DATA XREF: .pdata:000000014000921C↓o
                align 20h

; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_140002760(DWORD flNewProtect, PDWORD lpflOldProtect)
sub_140002760   proc near               ; CODE XREF: sub_1400024E0+71↑p
                                        ; sub_1400027F0+5F↓p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
dwSize          = qword ptr  18h
arg_18          = dword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                push    rdi
                sub     rsp, 20h
                mov     rdi, rdx
                mov     esi, ecx
                lea     rdx, [rax+20h]
                lea     rcx, [rax+18h]
                call    sub_1400026C4
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_140002792
                mov     dword ptr [rdi], 4
                jmp     short loc_1400027DE
; ---------------------------------------------------------------------------

loc_140002792:                          ; CODE XREF: sub_140002760+28↑j
                cmp     cs:dword_140008910, 0
                jnz     short loc_1400027C2
                test    [rsp+28h+arg_18], 80000000h
                mov     cs:dword_140008910, 1
                jnz     short loc_1400027B6
                mov     ecx, 19h
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1400027B6:                          ; CODE XREF: sub_140002760+4D↑j
                mov     edx, dword ptr [rsp+28h+dwSize]
                mov     rcx, rbx
                call    sub_14000262C

loc_1400027C2:                          ; CODE XREF: sub_140002760+39↑j
                mov     edx, dword ptr [rsp+28h+dwSize] ; dwSize
                mov     r9, rdi         ; lpflOldProtect
                mov     r8d, esi        ; flNewProtect
                mov     rcx, rbx        ; lpAddress
                call    cs:VirtualProtect
                test    eax, eax
                jnz     short loc_1400027DE
                lea     ecx, [rax+19h]
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1400027DE:                          ; CODE XREF: sub_140002760+30↑j
                                        ; sub_140002760+77↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
sub_140002760   endp

; ---------------------------------------------------------------------------
algn_1400027EE:                         ; DATA XREF: .pdata:0000000140009228↓o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1400027F0   proc near               ; CODE XREF: sub_140002890+93↓p
                                        ; sub_140002890+186↓p ...

flOldProtect    = dword ptr  8

                sub     rsp, 28h
                test    cs:dword_140005590, 1000h
                jz      short loc_14000287E
                call    sub_14000258C
                test    al, al
                jz      short loc_140002821
                mov     rax, cs:qword_1400088F0
                lea     rcx, qword_140008900
                call    cs:__guard_dispatch_icall_fptr
                jmp     short loc_14000283B
; ---------------------------------------------------------------------------

loc_14000281F:                          ; CODE XREF: sub_1400027F0+3B↓j
                pause

loc_140002821:                          ; CODE XREF: sub_1400027F0+17↑j
                                        ; sub_1400027F0+49↓j
                mov     rax, cs:qword_140008900
                test    rax, rax
                jnz     short loc_14000281F
                lea     ecx, [rax+1]
                lock cmpxchg cs:qword_140008900, rcx
                jnz     short loc_140002821

loc_14000283B:                          ; CODE XREF: sub_1400027F0+2D↑j
                add     cs:dword_140008908, 0FFFFFFFFh
                jnz     short loc_140002854
                mov     ecx, cs:flNewProtect ; flNewProtect
                lea     rdx, [rsp+28h+flOldProtect] ; lpflOldProtect
                call    sub_140002760

loc_140002854:                          ; CODE XREF: sub_1400027F0+52↑j
                call    sub_14000258C
                test    al, al
                jz      short loc_140002873
                mov     rax, cs:qword_1400088F8
                lea     rcx, qword_140008900
                call    cs:__guard_dispatch_icall_fptr
                jmp     short loc_14000287E
; ---------------------------------------------------------------------------

loc_140002873:                          ; CODE XREF: sub_1400027F0+6B↑j
                mov     cs:qword_140008900, 0

loc_14000287E:                          ; CODE XREF: sub_1400027F0+E↑j
                                        ; sub_1400027F0+81↑j
                add     rsp, 28h
                retn
sub_1400027F0   endp

; ---------------------------------------------------------------------------
algn_140002883:                         ; DATA XREF: .pdata:0000000140009234↓o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_140002890   proc near               ; CODE XREF: sub_140001DD9+3A↑p
                                        ; DATA XREF: .rdata:00000001400056C8↓o ...

var_50          = dword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
lpLibFileName   = qword ptr -38h
lpProcName      = qword ptr -30h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_s0          = byte ptr  0
Arguments       = qword ptr  30h
arg_8           = qword ptr  38h
arg_10          = qword ptr  40h
arg_18          = qword ptr  48h

                mov     [rsp-28h+arg_8], rbx
                mov     [rsp-28h+arg_10], rsi
                mov     [rsp-28h+arg_18], rdi
                push    rbp
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 70h
                mov     r12, rdx
                mov     r14, rcx
                call    sub_1400024E0
                mov     eax, [r14+4]
                lea     r8, __ImageBase
                mov     r15d, [r14+8]
                add     rax, r8
                mov     ecx, [r14+0Ch]
                add     r15, r8
                mov     edx, [r14+10h]
                add     rcx, r8
                mov     r13d, [r14+14h]
                add     rdx, r8
                and     [rbp+var_20], 0
                add     r13, r8
                and     [rbp+var_18], 0
                xorps   xmm0, xmm0
                and     [rbp+var_10], 0
                mov     r8d, [r14+1Ch]
                mov     [rbp+lpLibFileName], rax
                mov     eax, [r14]
                mov     dword ptr [rbp+Arguments], r8d
                mov     [rbp+var_50], 48h ; 'H'
                mov     [rbp+var_48], r14
                mov     [rbp+var_40], r12
                movups  xmmword ptr [rbp+lpProcName], xmm0
                test    al, 1
                jnz     short loc_140002944
                lea     rax, [rbp+var_50]
                mov     [rbp+Arguments], rax
                call    sub_1400027F0
                xor     edx, edx        ; dwExceptionFlags
                lea     r9, [rbp+Arguments] ; lpArguments
                mov     ecx, 0C06D0057h ; dwExceptionCode
                lea     r8d, [rdx+1]    ; nNumberOfArguments
                call    cs:RaiseException
                xor     eax, eax
                jmp     loc_140002B4A
; ---------------------------------------------------------------------------

loc_140002944:                          ; CODE XREF: sub_140002890+89↑j
                mov     rdi, [r15]
                mov     rsi, r12
                sub     rsi, rcx
                sar     rsi, 3
                mov     ecx, esi
                mov     rax, [rdx+rcx*8]
                shr     rax, 3Fh
                xor     eax, 1
                mov     dword ptr [rbp+lpProcName], eax
                jz      short loc_140002976
                mov     eax, [rdx+rcx*8]
                lea     rdx, __ImageBase.unused+2
                add     rax, rdx
                mov     [rbp+lpProcName+8], rax
                jmp     short loc_14000297D
; ---------------------------------------------------------------------------

loc_140002976:                          ; CODE XREF: sub_140002890+D1↑j
                movzx   eax, word ptr [rdx+rcx*8]
                mov     dword ptr [rbp+lpProcName+8], eax

loc_14000297D:                          ; CODE XREF: sub_140002890+E4↑j
                mov     rax, cs:off_140008350
                xor     ebx, ebx
                test    rax, rax
                jz      short loc_1400029AA
                lea     rdx, [rbp+var_50]
                xor     ecx, ecx
                call    cs:__guard_dispatch_icall_fptr
                mov     rbx, rax
                test    rax, rax
                jnz     loc_140002B1B
                mov     rax, cs:off_140008350

loc_1400029AA:                          ; CODE XREF: sub_140002890+F9↑j
                test    rdi, rdi
                jnz     loc_140002A54
                test    rax, rax
                jz      short loc_1400029CD
                lea     rdx, [rbp+var_50]
                lea     ecx, [rdi+1]
                call    cs:__guard_dispatch_icall_fptr
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_140002A39

loc_1400029CD:                          ; CODE XREF: sub_140002890+126↑j
                mov     rcx, [rbp+lpLibFileName] ; lpLibFileName
                xor     r8d, r8d        ; dwFlags
                xor     edx, edx        ; hFile
                call    cs:LoadLibraryExA
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_140002A39
                call    cs:GetLastError
                mov     [rbp+var_10], eax
                mov     rax, cs:off_140008358
                test    rax, rax
                jz      short loc_140002A0E
                lea     rdx, [rbp+var_50]
                lea     ecx, [rdi+3]
                call    cs:__guard_dispatch_icall_fptr
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_140002A39

loc_140002A0E:                          ; CODE XREF: sub_140002890+167↑j
                lea     rax, [rbp+var_50]
                mov     [rbp+Arguments], rax
                call    sub_1400027F0
                xor     edx, edx        ; dwExceptionFlags
                lea     r9, [rbp+Arguments] ; lpArguments
                mov     ecx, 0C06D007Eh ; dwExceptionCode
                lea     r8d, [rdx+1]    ; nNumberOfArguments
                call    cs:RaiseException
                mov     rax, [rbp+var_18]
                jmp     loc_140002B4A
; ---------------------------------------------------------------------------

loc_140002A39:                          ; CODE XREF: sub_140002890+13B↑j
                                        ; sub_140002890+152↑j ...
                mov     rax, rdi
                xchg    rax, [r15]
                cmp     rax, rdi
                jnz     short loc_140002A4D
                mov     rcx, rdi        ; hLibModule
                call    cs:FreeLibrary

loc_140002A4D:                          ; CODE XREF: sub_140002890+1B2↑j
                mov     rax, cs:off_140008350

loc_140002A54:                          ; CODE XREF: sub_140002890+11D↑j
                mov     [rbp+var_20], rdi
                test    rax, rax
                jz      short loc_140002A6F
                lea     rdx, [rbp+var_50]
                mov     ecx, 2
                call    cs:__guard_dispatch_icall_fptr
                mov     rbx, rax

loc_140002A6F:                          ; CODE XREF: sub_140002890+1CB↑j
                test    rbx, rbx
                jnz     loc_140002B17
                cmp     [r14+14h], ebx
                jz      short loc_140002AAD
                cmp     [r14+1Ch], ebx
                jz      short loc_140002AAD
                movsxd  rax, dword ptr [rdi+3Ch]
                cmp     dword ptr [rax+rdi], 4550h
                jnz     short loc_140002AAD
                mov     ecx, dword ptr [rbp+Arguments]
                cmp     [rax+rdi+8], ecx
                jnz     short loc_140002AAD
                cmp     rdi, [rax+rdi+30h]
                jnz     short loc_140002AAD
                mov     eax, esi
                mov     rbx, [r13+rax*8+0]
                test    rbx, rbx
                jnz     short loc_140002B17

loc_140002AAD:                          ; CODE XREF: sub_140002890+1EC↑j
                                        ; sub_140002890+1F2↑j ...
                mov     rdx, [rbp+lpProcName+8] ; lpProcName
                mov     rcx, rdi        ; hModule
                call    cs:GetProcAddress
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_140002B17
                call    cs:GetLastError
                mov     [rbp+var_10], eax
                mov     rax, cs:off_140008358
                test    rax, rax
                jz      short loc_140002AEC
                lea     rdx, [rbp+var_50]
                lea     ecx, [rbx+4]
                call    cs:__guard_dispatch_icall_fptr
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_140002B17

loc_140002AEC:                          ; CODE XREF: sub_140002890+245↑j
                lea     rax, [rbp+var_50]
                mov     [rbp+Arguments], rax
                call    sub_1400027F0
                xor     edx, edx        ; dwExceptionFlags
                lea     r9, [rbp+Arguments] ; lpArguments
                mov     ecx, 0C06D007Fh ; dwExceptionCode
                lea     r8d, [rdx+1]    ; nNumberOfArguments
                call    cs:RaiseException
                call    sub_1400024E0
                mov     rbx, [rbp+var_18]

loc_140002B17:                          ; CODE XREF: sub_140002890+1E2↑j
                                        ; sub_140002890+21B↑j ...
                mov     [r12], rbx

loc_140002B1B:                          ; CODE XREF: sub_140002890+10D↑j
                mov     rax, cs:off_140008350
                test    rax, rax
                jz      short loc_140002B42
                and     [rbp+var_10], 0
                lea     rdx, [rbp+var_50]
                mov     ecx, 5
                mov     [rbp+var_20], rdi
                mov     [rbp+var_18], rbx
                call    cs:__guard_dispatch_icall_fptr

loc_140002B42:                          ; CODE XREF: sub_140002890+295↑j
                call    sub_1400027F0
                mov     rax, rbx

loc_140002B4A:                          ; CODE XREF: sub_140002890+AF↑j
                                        ; sub_140002890+1A4↑j
                lea     r11, [rsp+70h+var_s0]
                mov     rbx, [r11+38h]
                mov     rsi, [r11+40h]
                mov     rdi, [r11+48h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rbp
                retn
sub_140002890   endp

; ---------------------------------------------------------------------------
algn_140002B68:                         ; DATA XREF: .pdata:0000000140009240↓o
                align 10h
; [00000006 BYTES: COLLAPSED FUNCTION memcpy. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: library function

__GSHandlerCheck proc near              ; DATA XREF: .rdata:0000000140006E74↓o
                                        ; .rdata:00000001400070F4↓o ...
                sub     rsp, 28h
                mov     r8, [r9+38h]
                mov     rcx, rdx
                mov     rdx, r9
                call    __GSHandlerCheckCommon
                mov     eax, 1
                add     rsp, 28h
                retn
__GSHandlerCheck endp

; ---------------------------------------------------------------------------
algn_140002B95:                         ; DATA XREF: .pdata:000000014000924C↓o
                align 8
; [0000005B BYTES: COLLAPSED FUNCTION __GSHandlerCheckCommon. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140002BF3:                         ; DATA XREF: .pdata:0000000140009258↓o
                align 4
; [0000007F BYTES: COLLAPSED FUNCTION __GSHandlerCheck_EH4. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _CxxThrowException. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION memmove. PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
; [0000001D BYTES: COLLAPSED CHUNK OF FUNCTION __scrt_common_main_seh(void). PRESS CTRL-NUMPAD+ TO EXPAND]
; ---------------------------------------------------------------------------
; [00000017 BYTES: COLLAPSED CHUNK OF FUNCTION __scrt_is_nonwritable_in_current_image. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140002CB3:                         ; DATA XREF: .pdata:000000014000927C↓o
                align 20h

; =============== S U B R O U T I N E =======================================


; void __cdecl sub_140002CC0()
sub_140002CC0   proc near               ; DATA XREF: sub_140001000↑o
                                        ; sub_140004A8C↓o ...
                lea     rcx, hMutex
                jmp     sub_140001D80
sub_140002CC0   endp

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_140001340

loc_140002CCC:                          ; CODE XREF: sub_140001340+26↑j
                                        ; DATA XREF: .pdata:0000000140009288↓o
                cmp     rdi, 16E3600h
                jnz     short loc_140002D31
                mov     r10, 0B2F4FC0794908CF3h
                mov     rax, r10
                imul    r9
                mov     rax, r10
                lea     r8, [r9+rdx]
                sar     r8, 18h
                mov     rcx, r8
                shr     rcx, 3Fh
                add     r8, rcx
                imul    rcx, r8, 16E3600h
                sub     r9, rcx
                imul    rcx, r9, 3B9ACA00h
                imul    rcx
                add     rdx, rcx
                sar     rdx, 18h
                mov     rax, rdx
                shr     rax, 3Fh
                add     rdx, rax
                imul    rax, r8, 3B9ACA00h
                add     rdx, rax
                mov     [rbx], rdx
                jmp     loc_140001373
; ---------------------------------------------------------------------------

loc_140002D31:                          ; CODE XREF: sub_140001340+1993↑j
                cqo
                idiv    rdi
                mov     rcx, rax
                imul    rax, rdx, 3B9ACA00h
                imul    rcx, 3B9ACA00h
                cqo
                idiv    rdi
                add     rax, rcx
                jmp     loc_140001370
; ---------------------------------------------------------------------------
                db 0CCh
; END OF FUNCTION CHUNK FOR sub_140001340
algn_140002D55:                         ; DATA XREF: .pdata:0000000140009288↓o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140002D60   proc near               ; CODE XREF: sub_140002DB4+53↓p
                                        ; sub_140002EC4+C2↓p ...
                sub     rsp, 28h
                cmp     rcx, 1000h
                jb      short loc_140002DA1
                lea     rax, [rcx+27h]
                cmp     rax, rcx
                ja      short loc_140002D7C
                call    sub_140003A8C
; ---------------------------------------------------------------------------
                align 4

loc_140002D7C:                          ; CODE XREF: sub_140002D60+14↑j
                mov     rcx, rax
                call    sub_14000397C
                mov     rcx, rax
                test    rax, rax
                jz      short loc_140002D9A
                add     rax, 27h ; '''
                and     rax, 0FFFFFFFFFFFFFFE0h
                mov     [rax-8], rcx
                jmp     short loc_140002DAF
; ---------------------------------------------------------------------------

loc_140002D9A:                          ; CODE XREF: sub_140002D60+2A↑j
                call    cs:_invalid_parameter_noinfo_noreturn
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140002DA1:                          ; CODE XREF: sub_140002D60+B↑j
                test    rcx, rcx
                jz      short loc_140002DAD
                call    sub_14000397C
                jmp     short loc_140002DAF
; ---------------------------------------------------------------------------

loc_140002DAD:                          ; CODE XREF: sub_140002D60+44↑j
                xor     eax, eax

loc_140002DAF:                          ; CODE XREF: sub_140002D60+38↑j
                                        ; sub_140002D60+4B↑j
                add     rsp, 28h
                retn
sub_140002D60   endp


; =============== S U B R O U T I N E =======================================


sub_140002DB4   proc near               ; CODE XREF: sub_140002EC4+111↓p
                                        ; StartAddress+A6↓p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                test    rdx, rdx
                jz      locret_140002E58
                mov     [rsp+arg_8], rbx
                mov     [rsp+arg_10], rsi
                mov     [rsp+arg_18], r14
                push    r15
                sub     rsp, 20h
                mov     rax, 0FFFFFFFFFFFFFFFh
                mov     r14, r9
                mov     r15, r8
                mov     rbx, rdx
                mov     rsi, rcx
                cmp     rdx, rax
                jbe     short loc_140002DFB
                lea     rcx, aVectorTooLong ; "vector too long"
                call    cs:?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error(char const *)
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140002DFB:                          ; CODE XREF: sub_140002DB4+37↑j
                shl     rbx, 4
                mov     rcx, rbx

loc_140002E02:                          ; DATA XREF: .rdata:0000000140007058↓o
                                        ; .rdata:0000000140007068↓o ...
                mov     [rsp+28h+arg_0], rdi
                call    sub_140002D60
                mov     [rsi], rax
                mov     rdi, rax
                mov     [rsi+8], rax
                lea     rcx, [rbx+rax]
                mov     [rsi+10h], rcx
                mov     rcx, rax        ; void *
                mov     rdx, [r15]      ; Src
                mov     rbx, [r14]
                sub     rbx, rdx
                mov     r8, rbx         ; Size
                call    memmove
                mov     r14, [rsp+28h+arg_18]
                and     rbx, 0FFFFFFFFFFFFFFF0h
                lea     rax, [rbx+rdi]
                mov     rdi, [rsp+28h+arg_0]
                mov     rbx, [rsp+28h+arg_8]
                mov     [rsi+8], rax
                mov     rsi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     r15

locret_140002E58:                       ; CODE XREF: sub_140002DB4+3↑j
                                        ; DATA XREF: .pdata:00000001400092AC↓o ...
                retn
sub_140002DB4   endp

; ---------------------------------------------------------------------------
algn_140002E59:                         ; DATA XREF: .pdata:00000001400092B8↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_140002E5C   proc near               ; CODE XREF: sub_140001D80+40↑p
                                        ; sub_140002EC4+198↓p ...
                sub     rsp, 28h
                cmp     rdx, 1000h
                jb      short loc_140002E7D
                mov     rdx, [rcx-8]
                sub     rcx, rdx
                lea     rax, [rcx-8]
                cmp     rax, 1Fh
                ja      short loc_140002E88
                mov     rcx, rdx

loc_140002E7D:                          ; CODE XREF: sub_140002E5C+B↑j
                add     rsp, 28h
                jmp     cs:free
; ---------------------------------------------------------------------------

loc_140002E88:                          ; CODE XREF: sub_140002E5C+1C↑j
                call    cs:_invalid_parameter_noinfo_noreturn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140002E5C   endp

algn_140002E8F:                         ; DATA XREF: .pdata:00000001400092C4↓o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140002E90   proc near               ; CODE XREF: sub_140001D80+16↑p
                                        ; sub_140002EC4+183↓p ...

arg_0           = qword ptr  8

                cmp     rcx, rdx
                jz      short locret_140002EC0
                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rdi, rdx
                mov     rbx, rcx

loc_140002EA5:                          ; CODE XREF: sub_140002E90+24↓j
                mov     rcx, rbx
                call    sub_140003AD0
                add     rbx, 18h
                cmp     rbx, rdi
                jnz     short loc_140002EA5
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi

locret_140002EC0:                       ; CODE XREF: sub_140002E90+3↑j
                retn
sub_140002E90   endp

; ---------------------------------------------------------------------------
algn_140002EC1:                         ; DATA XREF: .pdata:00000001400092D0↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_140002EC4   proc near               ; CODE XREF: StartAddress+BF↓p
                                        ; DATA XREF: .pdata:00000001400092DC↓o

var_58          = qword ptr -58h
var_48          = qword ptr -48h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

; __unwind { // __CxxFrameHandler4
                mov     [rsp+arg_10], r8
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 30h
                mov     r12, rdx
                mov     rsi, rcx
                mov     r10, [rcx]
                mov     r9, rdx
                sub     r9, r10
                mov     rax, 2AAAAAAAAAAAAAABh
                imul    r9
                mov     r14, rdx
                sar     r14, 2
                mov     rax, r14
                shr     rax, 3Fh
                add     r14, rax
                mov     r15, [rcx+8]
                sub     r15, r10
                sar     r15, 3
                mov     rax, 0AAAAAAAAAAAAAAABh
                imul    r15, rax
                mov     r8, 0AAAAAAAAAAAAAAAh
                cmp     r15, r8
                jnz     short loc_140002F3B
                lea     rcx, aVectorTooLong ; "vector too long"
                call    cs:?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error(char const *)
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140002F3B:                          ; CODE XREF: sub_140002EC4+67↑j
                inc     r15
                mov     rcx, [rcx+10h]
                sub     rcx, r10
                sar     rcx, 3
                imul    rcx, rax
                mov     rdx, rcx
                shr     rdx, 1
                mov     rax, r8
                sub     rax, rdx
                cmp     rcx, rax
                jbe     short loc_140002F63
                mov     rbx, r8
                jmp     short loc_140002F6E
; ---------------------------------------------------------------------------

loc_140002F63:                          ; CODE XREF: sub_140002EC4+98↑j
                lea     rbx, [rdx+rcx]
                cmp     rbx, r15
                cmovb   rbx, r15

loc_140002F6E:                          ; CODE XREF: sub_140002EC4+9D↑j
                mov     [rsp+68h+arg_8], rbx
                cmp     rbx, r8
                jbe     short loc_140002F7E
                call    sub_140003A8C
; ---------------------------------------------------------------------------
                align 2

loc_140002F7E:                          ; CODE XREF: sub_140002EC4+B2↑j
                lea     rcx, [rbx+rbx*2]
                shl     rcx, 3
                call    sub_140002D60
                mov     rdi, rax
                mov     [rsp+68h+var_48], rax
                lea     rcx, [r14+r14*2]
                lea     r14, [rax+rcx*8]
                lea     r13, [r14+18h]
                mov     [rsp+68h+arg_18], r13
                mov     [rsp+68h+arg_0], r13
;   try {
                xor     eax, eax
                mov     [r14], rax
                mov     [r14+8], rax
                mov     [r14+10h], rax
                mov     rax, [rsp+68h+arg_10]
                lea     r9, [rax+8]
                mov     rdx, [r9]
                sub     rdx, [rax]
                sar     rdx, 4
                mov     r8, rax
                mov     rcx, r14
                call    sub_140002DB4
                mov     [rsp+68h+arg_0], r14
                mov     rdx, [rsi+8]
                mov     rcx, [rsi]
                mov     r8, rdi
                cmp     r12, rdx
                jz      short loc_140003005
                mov     rdx, r12
                call    sub_14000317C
                mov     [rsp+68h+arg_0], rdi
                mov     r8, r13
                mov     rdx, [rsi+8]
                mov     rcx, r12

loc_140003005:                          ; CODE XREF: sub_140002EC4+128↑j
                call    sub_14000317C
                nop
;   } // starts at 140002FAC
                mov     r9, rbx
                mov     r8, r15
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140003A00
                mov     rax, r14
                add     rsp, 30h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                retn
; } // starts at 140002EC4
; ---------------------------------------------------------------------------

loc_14000302F:                          ; DATA XREF: .rdata:00000001400072D3↓o
                                        ; .pdata:00000001400092DC↓o ...
;   catch(...) // owned by 140002FAC
                mov     [rsp+68h+var_58], rdx
                push    rbp
                sub     rsp, 20h
                mov     rbp, rdx
                mov     rdx, [rbp+88h]
                mov     rcx, [rbp+70h]
                call    sub_140002E90
                mov     rax, [rbp+78h]
                lea     rdx, [rax+rax*2]
                shl     rdx, 3
                mov     rcx, [rbp+20h]
                call    sub_140002E5C
                xor     edx, edx        ; pThrowInfo
                xor     ecx, ecx        ; pExceptionObject
                call    _CxxThrowException
sub_140002EC4   endp

; ---------------------------------------------------------------------------
                db 90h
algn_14000306B:                         ; DATA XREF: .pdata:00000001400092E8↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_14000306C   proc near               ; CODE XREF: sub_1400037E0+97↓p
                                        ; sub_1400037E0+16F↓p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

; FUNCTION CHUNK AT 000000014000314F SIZE 00000027 BYTES

; __unwind { // __CxxFrameHandler4
                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_18], rsi
                mov     [rsp+arg_10], r8
                push    rdi
                push    r14
                push    r15
                sub     rsp, 20h
                mov     rdi, rdx
                mov     rsi, rcx
                mov     r8, 0FFFFFFFFFFFFFFFh
                cmp     rdx, r8
                jbe     short loc_1400030A7
                lea     rcx, aVectorTooLong ; "vector too long"
                call    cs:?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error(char const *)
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_1400030A7:                          ; CODE XREF: sub_14000306C+2B↑j
                mov     r14, [rcx+8]
                sub     r14, [rcx]
                sar     r14, 4
                mov     rcx, [rcx+10h]
                sub     rcx, [rsi]
                sar     rcx, 4
                mov     rdx, rcx
                shr     rdx, 1
                mov     rax, r8
                sub     rax, rdx
                cmp     rcx, rax
                jbe     short loc_1400030D3
                mov     rbx, r8
                jmp     short loc_1400030DE
; ---------------------------------------------------------------------------

loc_1400030D3:                          ; CODE XREF: sub_14000306C+60↑j
                lea     rbx, [rdx+rcx]
                cmp     rbx, rdi
                cmovb   rbx, rdi

loc_1400030DE:                          ; CODE XREF: sub_14000306C+65↑j
                mov     [rsp+38h+arg_10], rbx
                cmp     rbx, r8
                jbe     short loc_1400030EE
                call    sub_140003A8C
; ---------------------------------------------------------------------------
                align 2

loc_1400030EE:                          ; CODE XREF: sub_14000306C+7A↑j
                mov     rcx, rbx
                shl     rcx, 4
                call    sub_140002D60
                mov     r15, rax
                mov     [rsp+38h+arg_8], rax
                mov     rcx, r14
                shl     rcx, 4
                add     rcx, rax
                mov     rdx, rdi
                sub     rdx, r14
                call    sub_1400031F0
                mov     r8, [rsi+8]
                mov     rdx, [rsi]      ; Src
                sub     r8, rdx         ; Size
                mov     rcx, r15        ; void *
                call    memmove
                mov     r9, rbx
                mov     r8, rdi
                mov     rdx, r15
                mov     rcx, rsi
                mov     rbx, [rsp+38h+arg_0]
                mov     rsi, [rsp+38h+arg_18]
                nop
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     rdi
                jmp     sub_140003998
; } // starts at 14000306C
sub_14000306C   endp

; ---------------------------------------------------------------------------
byte_14000314E  db 0CCh                 ; DATA XREF: .pdata:00000001400092F4↓o
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_14000306C

loc_14000314F:                          ; DATA XREF: .rdata:00000001400072FF↓o
                                        ; .pdata:0000000140009300↓o
                mov     [rsp+arg_8], rdx
                push    rbp
                sub     rsp, 20h
                mov     rbp, rdx
                mov     rdx, [rbp+50h]
                shl     rdx, 4
                mov     rcx, [rbp+48h]
                call    sub_140002E5C
                xor     edx, edx        ; pThrowInfo
                xor     ecx, ecx        ; pExceptionObject
                call    _CxxThrowException
; END OF FUNCTION CHUNK FOR sub_14000306C
; ---------------------------------------------------------------------------
                db 90h
byte_140003177  db 2 dup(0CCh)          ; DATA XREF: .pdata:0000000140009300↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_14000317C   proc near               ; CODE XREF: sub_140002EC4+12D↑p
                                        ; sub_140002EC4:loc_140003005↑p
                                        ; DATA XREF: ...
                push    rbx
                sub     rsp, 20h
                mov     rbx, r8
                mov     r10, rdx
                cmp     rcx, rdx
                jz      short loc_1400031CD
                mov     r9, rbx
                lea     rax, [rcx+8]
                sub     r9, rcx
                xor     r11d, r11d

loc_14000319A:                          ; CODE XREF: sub_14000317C+4F↓j
                mov     rcx, [rax-8]
                mov     r8, [rax+8]
                mov     rdx, [rax]
                mov     [rax+8], r11
                mov     [rax], r11
                mov     [rax-8], r11
                mov     [rbx], rcx
                add     rbx, 18h
                mov     [rax+r9], rdx
                mov     [r9+rax+8], r8
                lea     rax, [rax+18h]
                lea     rcx, [rax-8]
                cmp     rcx, r10
                jnz     short loc_14000319A

loc_1400031CD:                          ; CODE XREF: sub_14000317C+F↑j
                mov     rdx, rbx
                mov     rcx, rbx
                call    sub_140002E90
                mov     rax, rbx
                add     rsp, 20h
                pop     rbx
                retn
sub_14000317C   endp

; ---------------------------------------------------------------------------
algn_1400031E1:                         ; DATA XREF: .pdata:000000014000930C↓o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1400031F0   proc near               ; CODE XREF: sub_14000306C+A6↑p
                                        ; sub_1400037E0+A4↓p ...

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rbx, rdx
                mov     rdi, rcx
                test    rdx, rdx
                jz      short loc_140003219
                shl     rbx, 4
                xor     edx, edx        ; Val
                mov     r8, rbx         ; Size
                call    memset
                lea     rax, [rbx+rdi]
                jmp     short loc_14000321C
; ---------------------------------------------------------------------------

loc_140003219:                          ; CODE XREF: sub_1400031F0+13↑j
                mov     rax, rdi

loc_14000321C:                          ; CODE XREF: sub_1400031F0+27↑j
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
sub_1400031F0   endp

; ---------------------------------------------------------------------------
algn_140003227:                         ; DATA XREF: .pdata:0000000140009318↓o
                align 8

; =============== S U B R O U T I N E =======================================


sub_140003228   proc near               ; CODE XREF: sub_140003268+9↓p
                                        ; DATA XREF: .pdata:0000000140009324↓o
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                mov     rax, rdx
                lea     rcx, off_140005850
                xorps   xmm0, xmm0
                lea     rdx, [rbx+8]
                mov     [rbx], rcx
                lea     rcx, [rax+8]
                movups  xmmword ptr [rdx], xmm0
                call    cs:__std_exception_copy
                lea     rax, off_140005B90
                mov     [rbx], rax
                mov     rax, rbx
                add     rsp, 20h
                pop     rbx
                retn
sub_140003228   endp

; ---------------------------------------------------------------------------
algn_140003265:                         ; DATA XREF: .pdata:0000000140009324↓o
                align 8

; =============== S U B R O U T I N E =======================================


sub_140003268   proc near               ; DATA XREF: .pdata:0000000140009330↓o
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                call    sub_140003228
                lea     rax, off_140005B90
                mov     [rbx], rax
                mov     rax, rbx
                add     rsp, 20h
                pop     rbx
                retn
sub_140003268   endp

; ---------------------------------------------------------------------------
algn_140003289:                         ; DATA XREF: .pdata:0000000140009330↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_14000328C   proc near               ; DATA XREF: .pdata:000000014000933C↓o
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                mov     rax, rdx
                lea     rcx, off_140005850
                xorps   xmm0, xmm0
                lea     rdx, [rbx+8]
                mov     [rbx], rcx
                lea     rcx, [rax+8]
                movups  xmmword ptr [rdx], xmm0
                call    cs:__std_exception_copy
                mov     rax, rbx
                add     rsp, 20h
                pop     rbx
                retn
sub_14000328C   endp

; ---------------------------------------------------------------------------
algn_1400032BF:                         ; DATA XREF: .pdata:000000014000933C↓o
                align 20h
                lea     rax, off_140005850
                mov     [rcx], rax
                add     rcx, 8
                jmp     cs:__std_exception_destroy
; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1400032E0   proc near               ; DATA XREF: .rdata:00000001400056D4↓o
                                        ; .rdata:off_140005850↓o ...

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                lea     rax, off_140005850
                mov     rdi, rcx
                mov     [rcx], rax
                mov     ebx, edx
                add     rcx, 8
                call    cs:__std_exception_destroy
                test    bl, 1
                jz      short loc_140003311
                mov     rcx, rdi
                call    cs:Mso20Win32Client_53248

loc_140003311:                          ; CODE XREF: sub_1400032E0+26↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rax, rdi
                add     rsp, 20h
                pop     rdi
                retn
sub_1400032E0   endp

; ---------------------------------------------------------------------------
algn_14000331F:                         ; DATA XREF: .pdata:0000000140009348↓o
                align 20h

; =============== S U B R O U T I N E =======================================


; DWORD __stdcall StartAddress(LPVOID lpThreadParameter)
StartAddress    proc near               ; DATA XREF: sub_140003640+7D↓o
                                        ; .rdata:00000001400056D8↓o ...

var_28          = xmmword ptr -28h
var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

; __unwind { // __CxxFrameHandler4
                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 40h
                mov     rsi, rcx
                mov     edx, [rcx+4]    ; dwMilliseconds
                mov     rcx, cs:hHandle ; hHandle
                call    cs:WaitForSingleObject
                cmp     eax, 102h
                jnz     loc_140003445
                xorps   xmm0, xmm0
                movdqu  [rsp+48h+var_28], xmm0
                xor     ebp, ebp
                mov     [rsp+48h+var_18], rbp
                mov     edi, ebp

loc_140003364:                          ; CODE XREF: StartAddress+F2↓j
                mov     edx, [rsi]
                lea     rcx, [rsp+48h+var_28]
                call    sub_1400037E0
                mov     cs:dword_140008938, eax
                xor     edx, edx        ; dwMilliseconds
                mov     rcx, cs:qword_140008930 ; hHandle
                call    cs:WaitForSingleObject
                test    eax, eax
                jnz     loc_14000342A
                mov     rax, cs:qword_140008948
                lea     r8, [rsp+48h+var_28]
                cmp     rax, cs:qword_140008950
                jz      short loc_1400033D5
                mov     [rax], rbp
                mov     [rax+8], rbp
                mov     [rax+10h], rbp
                mov     rdx, qword ptr [rsp+48h+var_28+8]
                mov     rbx, qword ptr [rsp+48h+var_28]
                sub     rdx, rbx
                sar     rdx, 4
                lea     r9, [rsp+48h+var_28+8]
                mov     rcx, rax
                call    sub_140002DB4
                add     cs:qword_140008948, 18h
                jmp     short loc_1400033E9
; ---------------------------------------------------------------------------

loc_1400033D5:                          ; CODE XREF: StartAddress+80↑j
                mov     rdx, rax
                lea     rcx, unk_140008940
                call    sub_140002EC4
                mov     rbx, qword ptr [rsp+48h+var_28]

loc_1400033E9:                          ; CODE XREF: StartAddress+B3↑j
                mov     rcx, cs:qword_140008930 ; hMutex
                call    cs:ReleaseMutex
                mov     edx, [rsi+8]    ; dwMilliseconds
                mov     rcx, cs:hHandle ; hHandle
                call    cs:WaitForSingleObject
                cmp     eax, 102h
                jnz     short loc_140003418
                inc     edi
                cmp     edi, 64h ; 'd'
                jl      loc_140003364

loc_140003418:                          ; CODE XREF: StartAddress+EB↑j
                test    rbx, rbx
                jz      short loc_140003445
                mov     rdx, [rsp+48h+var_18]
                sub     rdx, rbx
                mov     rcx, rbx
                jmp     short loc_14000343C
; ---------------------------------------------------------------------------

loc_14000342A:                          ; CODE XREF: StartAddress+67↑j
                mov     rcx, qword ptr [rsp+48h+var_28]
                test    rcx, rcx
                jz      short loc_140003445
                mov     rdx, [rsp+48h+var_18]
                sub     rdx, rcx

loc_14000343C:                          ; CODE XREF: StartAddress+108↑j
                and     rdx, 0FFFFFFFFFFFFFFF0h
                call    sub_140002E5C

loc_140003445:                          ; CODE XREF: StartAddress+2C↑j
                                        ; StartAddress+FB↑j ...
                xor     eax, eax
                mov     rbx, [rsp+48h+arg_0]
                mov     rbp, [rsp+48h+arg_8]
                mov     rsi, [rsp+48h+arg_10]
                add     rsp, 40h
                pop     rdi
                retn
; } // starts at 140003320
StartAddress    endp


; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_14000345C(PCONTEXT ContextRecord)
sub_14000345C   proc near               ; CODE XREF: sub_1400037E0+118↓p
                                        ; DATA XREF: .pdata:0000000140009354↓o ...

ContextRecord   = qword ptr -158h
HandlerData     = qword ptr -150h
EstablisherFrame= qword ptr -148h
ContextPointers = qword ptr -140h
ImageBase       = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
HistoryTable    = _UNWIND_HISTORY_TABLE ptr -118h
var_38          = qword ptr -38h
arg_18          = qword ptr  20h

; __unwind { // __GSHandlerCheck
                mov     [rsp+arg_18], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 150h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+178h+var_38], rax
                mov     rbp, [r8]
                mov     r15, r8
                mov     r14, rdx
                mov     rbx, rcx
                xor     esi, esi
                lea     rcx, [rsp+178h+HistoryTable] ; void *
                mov     [r8], rsi
                xor     edx, edx        ; Val
                mov     r8d, 0D8h       ; Size
                call    memset
                mov     edi, esi
                test    rbp, rbp
                jz      loc_140003597

loc_1400034AF:                          ; CODE XREF: sub_14000345C+120↓j
                mov     rcx, [rbx+0F8h] ; ControlPc
                lea     r8, [rsp+178h+HistoryTable] ; HistoryTable
                lea     rdx, [rsp+178h+ImageBase] ; ImageBase
                mov     [rsp+178h+ImageBase], rsi
                call    cs:RtlLookupFunctionEntry
                mov     r9, rax         ; FunctionEntry
                test    rax, rax
                jnz     short loc_1400034FD
                test    rdi, rdi
                jnz     loc_1400035C5
                mov     rax, [rbx+98h]
                mov     rcx, [rax]
                mov     [rbx+0F8h], rcx
                mov     rax, [r14]
                mov     [rax], rcx
                add     qword ptr [rbx+98h], 8
                jmp     short loc_140003576
; ---------------------------------------------------------------------------

loc_1400034FD:                          ; CODE XREF: sub_14000345C+75↑j
                mov     rcx, [r14]
                mov     rdx, rdi
                mov     rax, [rbx+0F8h]
                add     rdx, rdx
                mov     [rsp+178h+ContextPointers], rsi ; ContextPointers
                mov     [rcx+rdx*8], rax
                mov     rcx, [r14]
                mov     rax, [rsp+178h+ImageBase]
                mov     [rcx+rdx*8+8], rax
                lea     rax, [rsp+178h+var_130]
                inc     qword ptr [r15]
                xor     ecx, ecx        ; HandlerType
                mov     r8, [rbx+0F8h]  ; ControlPc
                mov     rdx, [rsp+178h+ImageBase] ; ImageBase
                mov     [rsp+178h+EstablisherFrame], rax ; EstablisherFrame
                lea     rax, [rsp+178h+var_128]
                mov     [rsp+178h+HandlerData], rax ; HandlerData
                mov     [rsp+178h+ContextRecord], rbx ; ContextRecord
                mov     [rsp+178h+var_128], rsi
                mov     [rsp+178h+var_130], rsi
                call    cs:RtlVirtualUnwind
                cmp     [rbx+0F8h], rsi
                jz      short loc_140003582
                mov     rax, [rbx+0A0h]
                cmp     [rbx+98h], rax
                jz      short loc_140003582

loc_140003576:                          ; CODE XREF: sub_14000345C+9F↑j
                inc     rdi
                cmp     rdi, rbp
                jb      loc_1400034AF

loc_140003582:                          ; CODE XREF: sub_14000345C+108↑j
                                        ; sub_14000345C+118↑j
                test    rdi, rdi
                jz      short loc_140003597
                mov     rax, [r14+8]
                sub     rax, [r14]
                sar     rax, 4
                cmp     rdi, rax
                jb      short loc_14000359C

loc_140003597:                          ; CODE XREF: sub_14000345C+4D↑j
                                        ; sub_14000345C+129↑j
                mov     esi, 1

loc_14000359C:                          ; CODE XREF: sub_14000345C+139↑j
                mov     eax, esi

loc_14000359E:                          ; CODE XREF: sub_14000345C+16E↓j
                mov     rcx, [rsp+178h+var_38]
                xor     rcx, rsp        ; StackCookie
                call    __security_check_cookie
                mov     rbx, [rsp+178h+arg_18]
                add     rsp, 150h
                pop     r15
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1400035C5:                          ; CODE XREF: sub_14000345C+7A↑j
                mov     eax, 2
                jmp     short loc_14000359E
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 14000345C
sub_14000345C   endp

algn_1400035CD:                         ; DATA XREF: .pdata:0000000140009360↓o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1400035D0   proc near               ; CODE XREF: WinMain+C08↑p
                                        ; DATA XREF: .pdata:000000014000936C↓o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rbx, rcx
                lea     r8, Name        ; "Local\\BootProfiler"
                xor     ecx, ecx        ; lpMutexAttributes
                xor     edx, edx        ; bInitialOwner
                call    cs:CreateMutexW
                mov     rdi, rax
                test    rax, rax
                jz      short loc_140003627
                xor     edx, edx        ; dwMilliseconds
                mov     rcx, rax        ; hHandle
                call    cs:WaitForSingleObject
                test    eax, eax
                jnz     short loc_140003627
                lea     r8, aLocalBootprofi_0 ; "Local\\BootProfilerCapture"
                mov     [rbx], rdi
                xor     edx, edx        ; bInitialOwner
                xor     ecx, ecx        ; lpMutexAttributes
                call    cs:CreateMutexW
                test    rax, rax
                jnz     short loc_140003634
                mov     rcx, [rbx]      ; hMutex
                call    cs:ReleaseMutex

loc_140003627:                          ; CODE XREF: sub_1400035D0+24↑j
                                        ; sub_1400035D0+33↑j
                xor     al, al

loc_140003629:                          ; CODE XREF: sub_1400035D0+6A↓j
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------

loc_140003634:                          ; CODE XREF: sub_1400035D0+4C↑j
                mov     [rbx+10h], rax
                mov     al, 1
                jmp     short loc_140003629
; ---------------------------------------------------------------------------
                db 0CCh
sub_1400035D0   endp

algn_14000363D:                         ; DATA XREF: .pdata:000000014000936C↓o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140003640   proc near               ; CODE XREF: WinMain+C40↑p
                                        ; DATA XREF: .pdata:0000000140009378↓o

dwCreationFlags = dword ptr -18h
lpThreadId      = qword ptr -10h
arg_8           = qword ptr  10h

                mov     [rsp+arg_8], rdx
                push    rbx
                sub     rsp, 30h
                mov     rbx, rcx
                xor     ecx, ecx        ; Time
                call    cs:_time64
                mov     rcx, rax        ; Seed
                call    cs:srand
                call    cs:rand
                xorps   xmm0, xmm0
                lea     r8, [rsp+38h+arg_8]
                movd    xmm1, eax
                mov     eax, [rbx+38h]
                cvtdq2pd xmm1, xmm1
                cvtsi2sd xmm0, rax
                divsd   xmm1, cs:qword_140005E88
                mulsd   xmm0, xmm1
                cvttsd2si rax, xmm0
                mov     cs:dword_140008964, eax
                mov     eax, [rbx+38h]
                xor     ebx, ebx
                mov     dword ptr [rsp+38h+arg_8], ebx
                mov     cs:dword_140008968, eax
                call    sub_140003774
                test    al, al
                jz      short loc_1400036DE
                call    cs:GetCurrentThreadId
                lea     r9, dword_140008960 ; lpParameter
                mov     [rsp+38h+lpThreadId], rbx ; lpThreadId
                lea     r8, StartAddress ; lpStartAddress
                mov     cs:dword_140008960, eax
                xor     edx, edx        ; dwStackSize
                mov     [rsp+38h+dwCreationFlags], ebx ; dwCreationFlags
                xor     ecx, ecx        ; lpThreadAttributes
                call    cs:CreateThread
                test    rax, rax
                setnz   al

loc_1400036DE:                          ; CODE XREF: sub_140003640+69↑j
                add     rsp, 30h
                pop     rbx
                retn
sub_140003640   endp


; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_1400036E4(PHKEY phkResult)
sub_1400036E4   proc near               ; CODE XREF: sub_140003774+1B↓p
                                        ; DATA XREF: .pdata:0000000140009378↓o ...

phkResult       = qword ptr -238h
SubKey          = word ptr -228h
var_18          = qword ptr -18h

; __unwind { // __GSHandlerCheck
                push    rbx
                sub     rsp, 250h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+258h+var_18], rax
                mov     rbx, rcx
                mov     [rsp+258h+phkResult], 0
                lea     rcx, [rsp+258h+SubKey] ; Buffer
                mov     r9d, 10h
                lea     r8, Format      ; "Software\\Microsoft\\Office\\%d.%d\\Wor"...
                mov     rdx, 0FFFFFFFFFFFFFFFFh ; MaxCount
                call    sub_1400012C0
                mov     r9d, 3          ; samDesired
                mov     [rsp+258h+phkResult], rbx ; phkResult
                xor     r8d, r8d        ; ulOptions
                lea     rdx, [rsp+258h+SubKey] ; lpSubKey
                mov     rcx, 0FFFFFFFF80000001h ; hKey
                call    cs:RegOpenKeyExW
                test    eax, eax
                jnz     short loc_140003757
                cmp     qword ptr [rbx], 0
                jz      short loc_140003757
                mov     al, 1
                jmp     short loc_140003759
; ---------------------------------------------------------------------------

loc_140003757:                          ; CODE XREF: sub_1400036E4+67↑j
                                        ; sub_1400036E4+6D↑j
                xor     al, al

loc_140003759:                          ; CODE XREF: sub_1400036E4+71↑j
                mov     rcx, [rsp+258h+var_18]
                xor     rcx, rsp        ; StackCookie
                call    __security_check_cookie
                add     rsp, 250h
                pop     rbx
                retn
; } // starts at 1400036E4
sub_1400036E4   endp

; ---------------------------------------------------------------------------
algn_140003772:                         ; DATA XREF: .pdata:0000000140009384↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_140003774   proc near               ; CODE XREF: sub_140003640+62↑p
                                        ; DATA XREF: .pdata:0000000140009390↓o

lpData          = qword ptr -18h
cbData          = dword ptr -10h
hKey            = qword ptr  8

                mov     [rsp+hKey], rcx
                push    rbx
                sub     rsp, 30h
                lea     rcx, [rsp+38h+hKey] ; phkResult
                mov     [rsp+38h+hKey], 0
                mov     rbx, r8
                call    sub_1400036E4
                test    al, al
                jz      short loc_1400037D2
                mov     rcx, [rsp+38h+hKey] ; hKey
                lea     rdx, ValueName  ; "BootProfilerResiliency"
                mov     [rsp+38h+cbData], 4 ; cbData
                mov     r9d, 4          ; dwType
                xor     r8d, r8d        ; Reserved
                mov     [rsp+38h+lpData], rbx ; lpData
                call    cs:RegSetValueExW
                mov     rcx, [rsp+38h+hKey] ; hKey
                mov     ebx, eax
                call    cs:RegCloseKey
                test    ebx, ebx
                setz    al

loc_1400037D2:                          ; CODE XREF: sub_140003774+22↑j
                add     rsp, 30h
                pop     rbx
                retn
sub_140003774   endp

; ---------------------------------------------------------------------------
algn_1400037D8:                         ; DATA XREF: .pdata:0000000140009390↓o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1400037E0   proc near               ; CODE XREF: StartAddress+4B↑p
                                        ; DATA XREF: .pdata:000000014000939C↓o

var_508         = qword ptr -508h
Context         = _CONTEXT ptr -4F8h
var_28          = qword ptr -28h
arg_10          = qword ptr  18h

; __unwind { // __GSHandlerCheck_EH4
                mov     [rsp+arg_10], rbx
                push    rbp
                push    rsi
                push    rdi
                sub     rsp, 510h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+528h+var_28], rax
                mov     rdi, rcx
                mov     r8d, edx        ; dwThreadId
                xor     edx, edx        ; bInheritHandle
                lea     ecx, [rdx+1Ah]  ; dwDesiredAccess
                call    cs:OpenThread
                mov     rsi, rax
                lea     rcx, [rax-1]
                cmp     rcx, 0FFFFFFFFFFFFFFFDh
                ja      loc_1400038B4
                xor     edx, edx        ; Val
                mov     r8d, 4D0h       ; Size
                lea     rcx, [rsp+528h+Context] ; void *
                call    memset
                mov     [rsp+528h+Context.ContextFlags], 10001Fh
                mov     r8, [rdi+8]
                mov     rdx, [rdi]
                mov     rcx, r8
                sub     rcx, rdx
                sar     rcx, 4
                cmp     rcx, 64h ; 'd'
                jbe     short loc_14000385D
                lea     rax, [rdx+640h]
                jmp     short loc_140003889
; ---------------------------------------------------------------------------

loc_14000385D:                          ; CODE XREF: sub_1400037E0+72↑j
                jnb     short loc_14000388D
                mov     rax, [rdi+10h]
                sub     rax, rdx
                sar     rax, 4
                mov     edx, 64h ; 'd'
                cmp     rax, rdx
                jnb     short loc_14000387E
                mov     rcx, rdi
                call    sub_14000306C
                jmp     short loc_14000388D
; ---------------------------------------------------------------------------

loc_14000387E:                          ; CODE XREF: sub_1400037E0+92↑j
                sub     rdx, rcx
                mov     rcx, r8
                call    sub_1400031F0

loc_140003889:                          ; CODE XREF: sub_1400037E0+7B↑j
                mov     [rdi+8], rax

loc_14000388D:                          ; CODE XREF: sub_1400037E0:loc_14000385D↑j
                                        ; sub_1400037E0+9C↑j
                mov     rbx, [rdi+8]
                sub     rbx, [rdi]
                sar     rbx, 4
                mov     [rsp+528h+var_508], rbx
                mov     rcx, rsi        ; hThread
                call    cs:SuspendThread
                mov     rcx, rsi        ; hThread
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_1400038DC
                call    cs:CloseHandle

loc_1400038B4:                          ; CODE XREF: sub_1400037E0+3D↑j
                mov     eax, 5

loc_1400038B9:                          ; CODE XREF: sub_1400037E0+193↓j
                mov     rcx, [rsp+528h+var_28]
                xor     rcx, rsp        ; StackCookie
                call    __security_check_cookie
                mov     rbx, [rsp+528h+arg_10]
                add     rsp, 510h
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_1400038DC:                          ; CODE XREF: sub_1400037E0+CC↑j
                lea     rdx, [rsp+528h+Context] ; lpContext
                call    cs:GetThreadContext
                test    eax, eax
                jz      short loc_140003906
                lea     r8, [rsp+528h+var_508]
                mov     rdx, rdi
                lea     rcx, [rsp+528h+Context] ; ContextRecord
                call    sub_14000345C
                mov     ebp, eax
                mov     rbx, [rsp+528h+var_508]
                jmp     short loc_14000390B
; ---------------------------------------------------------------------------

loc_140003906:                          ; CODE XREF: sub_1400037E0+109↑j
                mov     ebp, 8

loc_14000390B:                          ; CODE XREF: sub_1400037E0+124↑j
                mov     rcx, rsi        ; hThread
                call    cs:ResumeThread
                mov     r8, [rdi+8]
                mov     rdx, [rdi]
                mov     rcx, r8
                sub     rcx, rdx
                sar     rcx, 4
                cmp     rbx, rcx
                jnb     short loc_140003937
                shl     rbx, 4
                add     rbx, rdx
                mov     [rdi+8], rbx
                jmp     short loc_140003968
; ---------------------------------------------------------------------------

loc_140003937:                          ; CODE XREF: sub_1400037E0+148↑j
                jbe     short loc_140003968
                mov     rax, [rdi+10h]
                sub     rax, rdx
                sar     rax, 4
                cmp     rbx, rax
                jbe     short loc_140003956
                mov     rdx, rbx
                mov     rcx, rdi
                call    sub_14000306C
                jmp     short loc_140003968
; ---------------------------------------------------------------------------

loc_140003956:                          ; CODE XREF: sub_1400037E0+167↑j
                sub     rbx, rcx
                mov     rdx, rbx
                mov     rcx, r8
                call    sub_1400031F0
                mov     [rdi+8], rax

loc_140003968:                          ; CODE XREF: sub_1400037E0+155↑j
                                        ; sub_1400037E0:loc_140003937↑j ...
                mov     rcx, rsi        ; hObject
                call    cs:CloseHandle
                mov     eax, ebp
                jmp     loc_1400038B9
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1400037E0
sub_1400037E0   endp

algn_140003979:                         ; DATA XREF: .pdata:000000014000939C↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_14000397C   proc near               ; CODE XREF: sub_140002D60+1F↑p
                                        ; sub_140002D60+46↑p
                                        ; DATA XREF: ...
                sub     rsp, 28h
                call    cs:malloc
                test    rax, rax
                jnz     short loc_140003992
                call    cs:?_Xbad_alloc@std@@YAXXZ ; std::_Xbad_alloc(void)
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140003992:                          ; CODE XREF: sub_14000397C+D↑j
                add     rsp, 28h
                retn
sub_14000397C   endp

; ---------------------------------------------------------------------------
algn_140003997:                         ; DATA XREF: .pdata:00000001400093A8↓o
                align 8

; =============== S U B R O U T I N E =======================================


sub_140003998   proc near               ; CODE XREF: sub_14000306C+DD↑j
                                        ; DATA XREF: .pdata:00000001400093B4↓o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 20h
                mov     rsi, rcx
                mov     rbx, r9
                mov     rcx, [rcx]
                mov     rdi, r8
                mov     rbp, rdx
                test    rcx, rcx
                jz      short loc_1400039D0
                mov     rdx, [rsi+10h]
                sub     rdx, rcx
                and     rdx, 0FFFFFFFFFFFFFFF0h
                call    sub_140002E5C

loc_1400039D0:                          ; CODE XREF: sub_140003998+26↑j
                mov     [rsi], rbp
                shl     rdi, 4
                add     rdi, rbp
                shl     rbx, 4
                add     rbx, rbp
                mov     [rsi+8], rdi
                mov     rbp, [rsp+28h+arg_8]
                mov     [rsi+10h], rbx
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     rdi
                retn
sub_140003998   endp

; ---------------------------------------------------------------------------
algn_1400039FE:                         ; DATA XREF: .pdata:00000001400093B4↓o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140003A00   proc near               ; CODE XREF: sub_140002EC4+153↑p
                                        ; DATA XREF: .pdata:00000001400093C0↓o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                mov     [rsp+arg_10], rdi
                push    r14
                sub     rsp, 20h
                mov     rbx, rcx
                mov     rsi, r9
                mov     rcx, [rcx]
                mov     r14, r8
                mov     rdi, rdx
                test    rcx, rcx
                jz      short loc_140003A5B
                mov     rdx, [rbx+8]
                call    sub_140002E90
                mov     rcx, [rbx]
                mov     rdx, 0AAAAAAAAAAAAAAABh
                mov     rax, [rbx+10h]
                sub     rax, rcx
                sar     rax, 3
                imul    rax, rdx
                lea     rdx, [rax+rax*2]
                shl     rdx, 3
                call    sub_140002E5C

loc_140003A5B:                          ; CODE XREF: sub_140003A00+27↑j
                mov     [rbx], rdi
                lea     rax, [r14+r14*2]
                lea     rcx, [rdi+rax*8]
                mov     [rbx+8], rcx
                lea     rax, [rsi+rsi*2]
                mov     rsi, [rsp+28h+arg_8]
                lea     rcx, [rdi+rax*8]
                mov     rdi, [rsp+28h+arg_10]
                mov     [rbx+10h], rcx
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     r14
                retn
sub_140003A00   endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_140003A8C   proc near               ; CODE XREF: sub_140002D60+16↑p
                                        ; sub_140002EC4+B4↑p ...

pExceptionObject= qword ptr -28h
var_20          = xmmword ptr -20h

                sub     rsp, 48h
                xorps   xmm0, xmm0
                lea     rax, aBadArrayNewLen ; "bad array new length"
                movups  [rsp+48h+var_20], xmm0
                mov     qword ptr [rsp+48h+var_20], rax
                lea     rdx, pThrowInfo ; pThrowInfo
                lea     rax, off_140005B90
                lea     rcx, [rsp+48h+pExceptionObject] ; pExceptionObject
                mov     [rsp+48h+pExceptionObject], rax
                call    _CxxThrowException
; ---------------------------------------------------------------------------
                align 2
sub_140003A8C   endp

algn_140003AC2:                         ; DATA XREF: .pdata:00000001400093CC↓o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140003AD0   proc near               ; CODE XREF: sub_140002E90+18↑p
                                        ; DATA XREF: .pdata:00000001400093D8↓o
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                mov     rcx, [rcx]
                test    rcx, rcx
                jz      short loc_140003AFE
                mov     rdx, [rbx+10h]
                sub     rdx, rcx
                and     rdx, 0FFFFFFFFFFFFFFF0h
                call    sub_140002E5C
                xor     eax, eax
                mov     [rbx], rax
                mov     [rbx+8], rax
                mov     [rbx+10h], rax

loc_140003AFE:                          ; CODE XREF: sub_140003AD0+F↑j
                add     rsp, 20h
                pop     rbx
                retn
sub_140003AD0   endp

; ---------------------------------------------------------------------------
algn_140003B04:                         ; DATA XREF: .pdata:00000001400093D8↓o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140003B10   proc near               ; DATA XREF: .rdata:00000001400056DC↓o
                                        ; .rdata:0000000140005858↓o ...
                mov     rdx, [rcx+8]
                lea     rax, aUnknownExcepti ; "Unknown exception"
                test    rdx, rdx
                cmovnz  rax, rdx
                retn
sub_140003B10   endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_140003B24   proc near               ; CODE XREF: WinMain:loc_140001CFF↑p
                                        ; DATA XREF: .pdata:00000001400093E4↓o

var_4C8         = dword ptr -4C8h
var_4C0         = dword ptr -4C0h
var_4B8         = qword ptr -4B8h
var_4B0         = qword ptr -4B0h
var_498         = dword ptr -498h
var_488         = byte ptr -488h
Buffer          = word ptr -438h
LibFileName     = word ptr -228h
var_18          = qword ptr -18h
var_8           = byte ptr -8
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

; __unwind { // __GSHandlerCheck_EH4
                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 4E0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+4E8h+var_18], rax
                xor     ebp, ebp
                mov     [rsp+4E8h+var_498], ebp
                mov     [rsp+4E8h+LibFileName], bp
                mov     edx, 105h       ; uSize
                lea     rcx, [rsp+4E8h+Buffer] ; lpBuffer
                call    cs:GetSystemDirectoryW
                lea     ecx, [rax-1]
                cmp     ecx, 103h
                ja      loc_140003D23
                mov     ecx, eax
                cmp     [rsp+rcx*2+4E8h+Buffer], 5Ch ; '\'
                jz      short loc_140003BB2
                mov     edx, 5Ch ; '\'
                mov     [rsp+rcx*2+4E8h+Buffer], dx
                lea     ecx, [rax+1]
                add     rcx, rcx
                cmp     rcx, 20Ch
                jnb     loc_140003D14
                mov     [rsp+rcx+4E8h+Buffer], bp

loc_140003BB2:                          ; CODE XREF: sub_140003B24+64↑j
                mov     r9, 0FFFFFFFFFFFFFFFFh ; MaxCount
                lea     r8, Source      ; "msi.dll"
                mov     edx, 106h       ; SizeInWords
                lea     rcx, [rsp+4E8h+Buffer] ; Destination
                call    cs:wcsncat_s
                mov     r8d, 8
                lea     rcx, [rsp+4E8h+Buffer] ; lpLibFileName
                call    sub_140003D50
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_140003C09
                xor     r8d, r8d
                lea     rcx, Source     ; "msi.dll"
                call    sub_140003D50
                mov     rdi, rax
                test    rax, rax
                jz      loc_140003D23

loc_140003C09:                          ; CODE XREF: sub_140003B24+C8↑j
                lea     rdx, aMsigetproductc ; "MsiGetProductCodeW"
                mov     rcx, rdi        ; hModule
                call    cs:GetProcAddress
                mov     rbx, rax
                lea     rdx, aMsiprovidequal ; "MsiProvideQualifiedComponentExW"
                mov     rcx, rdi        ; hModule
                call    cs:GetProcAddress
                mov     rsi, rax
                test    rax, rax
                jz      loc_140003D1A
                test    rbx, rbx
                jz      loc_140003D1A
                lea     rdx, [rsp+4E8h+var_488]
                lea     rcx, aDc5ccacdA7ac4f ; "{DC5CCACD-A7AC-4FD3-9F70-9454B5DE5161}"
                mov     rax, rbx
                call    cs:__guard_dispatch_icall_fptr
                test    eax, eax
                jnz     short loc_140003CA4
                mov     [rsp+4E8h+var_498], 104h
                lea     rax, [rsp+4E8h+var_498]
                mov     [rsp+4E8h+var_4B0], rax
                lea     rax, [rsp+4E8h+LibFileName]
                mov     [rsp+4E8h+var_4B8], rax
                mov     [rsp+4E8h+var_4C0], ebp
                mov     [rsp+4E8h+var_4C8], ebp
                lea     r9, [rsp+4E8h+var_488]
                xor     r8d, r8d
                lea     rdx, LibFileName ; "wwlib.dll"
                lea     rcx, a5812c57153f044 ; "{5812C571-53F0-4467-BEFA-0A4F47A9437C}"
                mov     rax, rsi
                call    cs:__guard_dispatch_icall_fptr
                test    eax, eax
                jz      short loc_140003CF3

loc_140003CA4:                          ; CODE XREF: sub_140003B24+134↑j
                cmp     eax, 642h
                jz      short loc_140003CF3
                mov     [rsp+4E8h+var_498], 104h
                lea     rax, [rsp+4E8h+var_498]
                mov     [rsp+4E8h+var_4B0], rax
                lea     rax, [rsp+4E8h+LibFileName]
                mov     [rsp+4E8h+var_4B8], rax
                mov     [rsp+4E8h+var_4C0], ebp
                mov     [rsp+4E8h+var_4C8], ebp
                xor     r9d, r9d
                xor     r8d, r8d
                lea     rdx, LibFileName ; "wwlib.dll"
                lea     rcx, a5812c57153f044 ; "{5812C571-53F0-4467-BEFA-0A4F47A9437C}"
                mov     rax, rsi
                call    cs:__guard_dispatch_icall_fptr
                test    eax, eax
                jnz     short loc_140003D1A

loc_140003CF3:                          ; CODE XREF: sub_140003B24+17E↑j
                                        ; sub_140003B24+185↑j
                xor     r8d, r8d
                lea     rcx, [rsp+4E8h+LibFileName] ; lpLibFileName
                call    sub_140003D50
                mov     rbx, rax
                mov     rcx, rdi        ; hLibModule
                call    cs:FreeLibrary
                mov     rax, rbx
                jmp     short loc_140003D25
; ---------------------------------------------------------------------------

loc_140003D14:                          ; CODE XREF: sub_140003B24+80↑j
                call    sub_140002088
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140003D1A:                          ; CODE XREF: sub_140003B24+10E↑j
                                        ; sub_140003B24+117↑j ...
                mov     rcx, rdi        ; hLibModule
                call    cs:FreeLibrary

loc_140003D23:                          ; CODE XREF: sub_140003B24+53↑j
                                        ; sub_140003B24+DF↑j
                xor     eax, eax

loc_140003D25:                          ; CODE XREF: sub_140003B24+1EE↑j
                mov     rcx, [rsp+4E8h+var_18]
                xor     rcx, rsp        ; StackCookie
                call    __security_check_cookie
                lea     r11, [rsp+4E8h+var_8]
                mov     rbx, [r11+10h]
                mov     rbp, [r11+18h]
                mov     rsi, [r11+20h]
                mov     rsp, r11
                pop     rdi
                retn
; } // starts at 140003B24
sub_140003B24   endp

; ---------------------------------------------------------------------------
algn_140003D4E:                         ; DATA XREF: .pdata:00000001400093E4↓o
                align 10h

; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_140003D50(LPCWSTR lpLibFileName)
sub_140003D50   proc near               ; CODE XREF: WinMain+C89↑p
                                        ; sub_140003B24+BD↑p ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                cmp     word ptr [rcx], 0
                mov     edi, r8d
                mov     rsi, rcx
                jnz     short loc_140003D72
                mov     ecx, 5
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_140003D72:                          ; CODE XREF: sub_140003D50+19↑j
                and     r8d, 0FFFFFFF7h
                xor     edx, edx        ; hFile
                bts     r8d, 0Ch        ; dwFlags
                mov     rcx, rsi        ; lpLibFileName
                call    cs:LoadLibraryExW
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_140003DD4
                call    cs:GetLastError
                cmp     eax, 57h ; 'W'
                jnz     short loc_140003DD1
                lea     rcx, ModuleName ; "kernel32.dll"
                call    cs:GetModuleHandleW
                mov     rcx, rax        ; hModule
                lea     rdx, aAdddlldirector ; "AddDllDirectory"
                call    cs:GetProcAddress
                test    rax, rax
                jnz     short loc_140003DD1
                and     edi, 0FFFFE0FFh
                xor     edx, edx        ; hFile
                mov     r8d, edi        ; dwFlags
                mov     rcx, rsi        ; lpLibFileName
                call    cs:LoadLibraryExW
                jmp     short loc_140003DD4
; ---------------------------------------------------------------------------

loc_140003DD1:                          ; CODE XREF: sub_140003D50+47↑j
                                        ; sub_140003D50+69↑j
                mov     rax, rbx

loc_140003DD4:                          ; CODE XREF: sub_140003D50+3C↑j
                                        ; sub_140003D50+7F↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
sub_140003D50   endp


; =============== S U B R O U T I N E =======================================


sub_140003DE4   proc near               ; CODE XREF: sub_14000246C↑j
                                        ; DATA XREF: .pdata:00000001400093F0↓o
                test    rcx, rcx
                jz      short locret_140003DF0
                jmp     cs:Mso20Win32Client_53248
; ---------------------------------------------------------------------------

locret_140003DF0:                       ; CODE XREF: sub_140003DE4+3↑j
                retn
sub_140003DE4   endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_140003DF4   proc near               ; CODE XREF: sub_140003FB0+F2↓p
                                        ; DATA XREF: .pdata:00000001400093FC↓o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_8], rbx
                push    rdi
                sub     rsp, 20h
                mov     rdi, rcx
                mov     rbx, rdx
                lea     rcx, [rsp+28h+arg_0]
                call    sub_140001340
                mov     r8, [rsp+28h+arg_0]
                mov     ecx, 1
                mov     [rdi], r8
                mov     r10d, 0FFh
                mov     rdx, [rbx]
                test    rdx, rdx
                jnz     short loc_140003E2D
                xor     al, al
                jmp     short loc_140003E36
; ---------------------------------------------------------------------------

loc_140003E2D:                          ; CODE XREF: sub_140003DF4+33↑j
                test    rdx, rdx
                mov     eax, r10d
                cmovns  eax, ecx

loc_140003E36:                          ; CODE XREF: sub_140003DF4+37↑j
                test    al, al
                jle     short loc_140003E6E
                imul    rdx, 0F4240h
                mov     r9, 7FFFFFFFFFFFFFFFh
                mov     rax, r9
                sub     rax, rdx
                cmp     r8, rax
                jnz     short loc_140003E5A
                xor     cl, cl
                jmp     short loc_140003E5E
; ---------------------------------------------------------------------------

loc_140003E5A:                          ; CODE XREF: sub_140003DF4+60↑j
                cmovl   ecx, r10d

loc_140003E5E:                          ; CODE XREF: sub_140003DF4+64↑j
                test    cl, cl
                jns     short loc_140003E6B
                lea     rax, [rdx+r8]
                mov     [rdi], rax
                jmp     short loc_140003E6E
; ---------------------------------------------------------------------------

loc_140003E6B:                          ; CODE XREF: sub_140003DF4+6C↑j
                mov     [rdi], r9

loc_140003E6E:                          ; CODE XREF: sub_140003DF4+44↑j
                                        ; sub_140003DF4+75↑j
                mov     rbx, [rsp+28h+arg_8]
                mov     rax, rdi
                add     rsp, 20h
                pop     rdi
                retn
sub_140003DF4   endp


; =============== S U B R O U T I N E =======================================


sub_140003E7C   proc near               ; CODE XREF: sub_140003F28+5E↓p
                                        ; DATA XREF: .pdata:00000001400093FC↓o ...

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rbx, rdx
                mov     rdi, rcx
                call    cs:_Xtime_get_ticks
                mov     rdx, [rbx]
                xorps   xmm0, xmm0
                movsd   xmm1, cs:qword_140005E90
                imul    r9, rax, 64h ; 'd'
                cvtsi2sd xmm0, rdx
                comisd  xmm0, xmm1
                jbe     short loc_140003EB3
                mov     al, 0FFh
                jmp     short loc_140003ECB
; ---------------------------------------------------------------------------

loc_140003EB3:                          ; CODE XREF: sub_140003E7C+31↑j
                comisd  xmm1, xmm0
                jbe     short loc_140003EBD
                mov     al, 1
                jmp     short loc_140003ECB
; ---------------------------------------------------------------------------

loc_140003EBD:                          ; CODE XREF: sub_140003E7C+3B↑j
                ucomisd xmm1, xmm0
                jp      short loc_140003EC9
                jnz     short loc_140003EC9
                xor     al, al
                jmp     short loc_140003ECB
; ---------------------------------------------------------------------------

loc_140003EC9:                          ; CODE XREF: sub_140003E7C+45↑j
                                        ; sub_140003E7C+47↑j
                mov     al, 80h

loc_140003ECB:                          ; CODE XREF: sub_140003E7C+35↑j
                                        ; sub_140003E7C+3F↑j ...
                cmp     al, 0FFh
                jnz     short loc_140003EE2
                mov     rdx, 311CDAD160000h
                mov     r10b, 1
                lea     r8, [r9+rdx]
                jmp     short loc_140003EE9
; ---------------------------------------------------------------------------

loc_140003EE2:                          ; CODE XREF: sub_140003E7C+51↑j
                xor     r10b, r10b
                lea     r8, [r9+rdx]

loc_140003EE9:                          ; CODE XREF: sub_140003E7C+64↑j
                mov     rbx, [rsp+28h+arg_0]
                lea     rcx, [r9+rdx]
                mov     rax, 112E0BE826D694B3h
                imul    rcx
                movzx   eax, r10b
                sar     rdx, 1Ah
                mov     rcx, rdx
                shr     rcx, 3Fh
                add     rdx, rcx
                imul    ecx, edx, 3B9ACA00h
                mov     [rdi], rdx
                sub     r8d, ecx
                mov     [rdi+8], r8d
                add     rsp, 20h
                pop     rdi
                retn
sub_140003E7C   endp

; ---------------------------------------------------------------------------
algn_140003F27:                         ; DATA XREF: .pdata:0000000140009408↓o
                align 8

; =============== S U B R O U T I N E =======================================


sub_140003F28   proc near               ; CODE XREF: sub_140003FB0+FA↓p
                                        ; DATA XREF: .pdata:0000000140009414↓o

var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = xtime ptr -28h
var_18          = qword ptr -18h
arg_0           = qword ptr  8

; __unwind { // __GSHandlerCheck
                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 50h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+58h+var_18], rax
                mov     rbx, rcx
                mov     edi, 0FFh

loc_140003F49:                          ; CODE XREF: sub_140003F28+6E↓j
                lea     rcx, [rsp+58h+var_38]
                call    sub_140001340
                mov     rdx, [rbx]
                mov     rax, [rsp+58h+var_38]
                cmp     rdx, rax
                jnz     short loc_140003F65
                xor     r8b, r8b
                jmp     short loc_140003F6F
; ---------------------------------------------------------------------------

loc_140003F65:                          ; CODE XREF: sub_140003F28+36↑j
                mov     r8d, 1
                cmovl   r8d, edi

loc_140003F6F:                          ; CODE XREF: sub_140003F28+3B↑j
                test    r8b, r8b
                jle     short loc_140003F98
                sub     rdx, rax
                lea     rcx, [rsp+58h+var_28]
                mov     [rsp+58h+var_30], rdx
                lea     rdx, [rsp+58h+var_30]
                call    sub_140003E7C
                lea     rcx, [rsp+58h+var_28] ; xtime *
                call    cs:_Thrd_sleep
                jmp     short loc_140003F49
; ---------------------------------------------------------------------------

loc_140003F98:                          ; CODE XREF: sub_140003F28+4A↑j
                mov     rcx, [rsp+58h+var_18]
                xor     rcx, rsp        ; StackCookie
                call    __security_check_cookie
                mov     rbx, [rsp+58h+arg_0]
                add     rsp, 50h
                pop     rdi
                retn
; } // starts at 140003F28
sub_140003F28   endp


; =============== S U B R O U T I N E =======================================


sub_140003FB0   proc near               ; DATA XREF: .rdata:00000001400056E0↓o
                                        ; .data:off_140008358↓o ...

arg_0           = qword ptr  8
arg_10          = qword ptr  18h
arg_18          = byte ptr  20h

; __unwind { // __CxxFrameHandler4
                mov     [rsp+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 20h
                mov     r14, rdx
                cmp     ecx, 3
                jnz     loc_1400040ED
                inc     cs:dword_140008980
                lea     esi, [rcx-2]

loc_140003FD5:                          ; CODE XREF: sub_140003FB0+104↓j
                mov     rax, cs:qword_140008978
                test    rax, rax
                jz      short loc_140003FF0
                xor     r8d, r8d
                lea     edx, [r8+32h]
                mov     ecx, esi
                call    cs:__guard_dispatch_icall_fptr

loc_140003FF0:                          ; CODE XREF: sub_140003FB0+2F↑j
                mov     rax, cs:off_140008350
                test    rax, rax
                jz      short loc_14000401A
                mov     rdx, r14
                mov     ecx, 1
                call    cs:__guard_dispatch_icall_fptr
                mov     rdi, rax
                lea     rbx, [r14+18h]
                test    rax, rax
                jnz     loc_140004100

loc_14000401A:                          ; CODE XREF: sub_140003FB0+4A↑j
                lea     rbx, [r14+18h]
                mov     rbp, [rbx]
                cmp     byte ptr [rbp+0], 0
                jnz     short loc_14000402E
                mov     ecx, 5
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_14000402E:                          ; CODE XREF: sub_140003FB0+75↑j
                xor     edx, edx        ; hFile
                mov     r8d, 1000h      ; dwFlags
                mov     rcx, rbp        ; lpLibFileName
                call    cs:LoadLibraryExA
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_140004085
                call    cs:GetLastError
                cmp     eax, 57h ; 'W'
                jnz     short loc_140004085
                lea     rcx, ModuleName ; "kernel32.dll"
                call    cs:GetModuleHandleW
                mov     rcx, rax        ; hModule
                lea     rdx, aAdddlldirector ; "AddDllDirectory"
                call    cs:GetProcAddress
                test    rax, rax
                jnz     short loc_140004085
                xor     r8d, r8d        ; dwFlags
                xor     edx, edx        ; hFile
                mov     rcx, rbp        ; lpLibFileName
                call    cs:LoadLibraryExA
                mov     rdi, rax

loc_140004085:                          ; CODE XREF: sub_140003FB0+95↑j
                                        ; sub_140003FB0+A0↑j ...
                test    rdi, rdi
                jnz     short loc_140004100
                mov     eax, esi
                lea     rcx, [rax+rax*4]
                add     rcx, rcx
                mov     [rsp+48h+arg_10], rcx
                lea     rdx, [rsp+48h+arg_10]
                lea     rcx, [rsp+48h+arg_18]
                call    sub_140003DF4
                mov     rcx, rax
                call    sub_140003F28
                inc     esi
                cmp     esi, 32h ; '2'
                jbe     loc_140003FD5
                mov     rcx, [rbx]
                call    sub_14000455C
                inc     cs:dword_140008988
                mov     rax, [rbx]
                lea     r8, unk_140005CFE
                test    rax, rax
                cmovnz  r8, rax         ; Source
                lea     edx, [rdi+64h]  ; SizeInBytes
                lea     r9, [rdi-1]     ; MaxCount
                lea     rcx, Destination ; Destination
                call    cs:strncpy_s

loc_1400040ED:                          ; CODE XREF: sub_140003FB0+16↑j
                xor     eax, eax

loc_1400040EF:                          ; CODE XREF: sub_140003FB0+18A↓j
                mov     rbx, [rsp+48h+arg_0]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_140004100:                          ; CODE XREF: sub_140003FB0+64↑j
                                        ; sub_140003FB0+D8↑j
                mov     rdx, [rbx]
                mov     ecx, esi
                call    sub_14000441C
                inc     cs:dword_140008984
                mov     rax, [rbx]
                lea     r8, unk_140005CFE
                test    rax, rax
                cmovnz  r8, rax         ; Source
                mov     edx, 64h ; 'd'  ; SizeInBytes
                lea     r9, [rdx-65h]   ; MaxCount
                lea     rcx, byte_14000898C ; Destination
                call    cs:strncpy_s
                mov     rax, rdi
                jmp     short loc_1400040EF
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 140003FB0
sub_140003FB0   endp

algn_14000413D:                         ; DATA XREF: .pdata:0000000140009420↓o
                align 20h

; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_140004140(void *Src)
sub_140004140   proc near               ; CODE XREF: sub_14000435C+70↓p
                                        ; DATA XREF: .pdata:000000014000942C↓o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     [rsp+arg_18], rbx
                push    rdi
                push    r14
                push    r15
                sub     rsp, 20h
                mov     r14, [rcx+10h]
                mov     rbx, 7FFFFFFFFFFFFFFEh
                mov     rax, rbx
                movzx   r15d, r9w
                sub     rax, r14
                mov     rdi, rcx
                cmp     rax, 1
                jnb     short loc_14000417D
                lea     rcx, aStringTooLong ; "string too long"
                call    cs:?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error(char const *)
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_14000417D:                          ; CODE XREF: sub_140004140+2D↑j
                mov     [rsp+38h+arg_0], rbp
                mov     rbp, [rcx+18h]
                mov     [rsp+38h+arg_10], r12
                lea     r12, [r14+1]
                mov     rdx, r12
                or      rdx, 7
                cmp     rdx, rbx
                ja      short loc_1400041B7
                mov     rcx, rbp
                mov     rax, rbx
                shr     rcx, 1
                sub     rax, rcx
                cmp     rbp, rax
                ja      short loc_1400041B7
                lea     rbx, [rcx+rbp]
                cmp     rdx, rbx
                cmovnb  rbx, rdx

loc_1400041B7:                          ; CODE XREF: sub_140004140+59↑j
                                        ; sub_140004140+6A↑j
                lea     rcx, [rbx+1]
                mov     rax, 7FFFFFFFFFFFFFFFh
                cmp     rcx, rax
                jbe     short loc_1400041D0
                call    sub_140003A8C
; ---------------------------------------------------------------------------
                align 10h

loc_1400041D0:                          ; CODE XREF: sub_140004140+88↑j
                add     rcx, rcx
                mov     [rsp+38h+arg_8], rsi
                call    sub_140002D60
                add     r14, r14
                mov     [rdi+10h], r12
                mov     [rdi+18h], rbx
                mov     rsi, rax
                mov     r8, r14         ; Size
                mov     rcx, rax        ; void *
                cmp     rbp, 7
                jbe     short loc_140004221
                mov     rbx, [rdi]
                mov     rdx, rbx        ; Src
                call    memcpy
                xor     eax, eax
                mov     [r14+rsi], r15w
                lea     rdx, ds:2[rbp*2]
                mov     [r14+rsi+2], ax
                mov     rcx, rbx
                call    sub_140002E5C
                jmp     short loc_140004236
; ---------------------------------------------------------------------------

loc_140004221:                          ; CODE XREF: sub_140004140+B5↑j
                mov     rdx, rdi        ; Src
                call    memcpy
                xor     eax, eax
                mov     [r14+rsi], r15w
                mov     [r14+rsi+2], ax

loc_140004236:                          ; CODE XREF: sub_140004140+DF↑j
                mov     [rdi], rsi
                mov     rax, rdi
                mov     rsi, [rsp+38h+arg_8]
                mov     rbp, [rsp+38h+arg_0]
                mov     r12, [rsp+38h+arg_10]
                mov     rbx, [rsp+38h+arg_18]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     rdi
                retn
sub_140004140   endp

; ---------------------------------------------------------------------------
algn_14000425A:                         ; DATA XREF: .pdata:000000014000942C↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_14000425C   proc near               ; CODE XREF: sub_14000441C+117↓p
                                        ; sub_14000455C+DA↓p
                                        ; DATA XREF: ...
                push    rbx
                sub     rsp, 20h
                mov     rdx, [rcx+18h]
                mov     rbx, rcx
                cmp     rdx, 7
                jbe     short loc_14000427F
                mov     rcx, [rcx]
                lea     rdx, ds:2[rdx*2]
                call    sub_140002E5C

loc_14000427F:                          ; CODE XREF: sub_14000425C+11↑j
                xor     eax, eax
                mov     qword ptr [rbx+18h], 7
                mov     [rbx+10h], rax
                mov     [rbx], ax
                add     rsp, 20h
                pop     rbx
                retn
sub_14000425C   endp

; ---------------------------------------------------------------------------
algn_140004296:                         ; DATA XREF: .pdata:0000000140009438↓o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1400042A0   proc near               ; DATA XREF: .rdata:00000001400056E4↓o
                                        ; .rdata:0000000140005720↓o ...
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                test    dl, 1
                jz      short loc_1400042B9
                test    rcx, rcx
                jz      short loc_1400042B9
                call    cs:Mso20Win32Client_53248

loc_1400042B9:                          ; CODE XREF: sub_1400042A0+C↑j
                                        ; sub_1400042A0+11↑j
                mov     rax, rbx
                add     rsp, 20h
                pop     rbx
                retn
sub_1400042A0   endp

; ---------------------------------------------------------------------------
algn_1400042C2:                         ; DATA XREF: .pdata:0000000140009444↓o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1400042D0   proc near               ; DATA XREF: .rdata:00000001400056E8↓o
                                        ; .rdata:off_140005BC8↓o
                mov     rax, [rdx]
                mov     r8, rdx
                mov     rdx, rcx
                mov     rcx, r8
                mov     rax, [rax+0F8h]
                jmp     cs:__guard_dispatch_icall_fptr
sub_1400042D0   endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1400042F0   proc near               ; DATA XREF: .rdata:00000001400056EC↓o
                                        ; .rdata:off_140005BA0↓o
                mov     rax, [rdx]
                mov     r8, rdx
                mov     rdx, rcx
                mov     rcx, r8
                mov     rax, [rax+0A0h]
                jmp     cs:__guard_dispatch_icall_fptr
sub_1400042F0   endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140004310   proc near               ; DATA XREF: .rdata:00000001400056F0↓o
                                        ; .rdata:off_140005718↓o ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     rbx, [rcx+8]
                mov     rsi, rdx
                mov     rdi, rcx
                cmp     rbx, [rcx+10h]
                jz      short loc_14000434B

loc_14000432F:                          ; CODE XREF: sub_140004310+39↓j
                mov     rcx, [rbx]
                mov     rdx, rsi
                mov     rax, [rcx]
                mov     rax, [rax]
                call    cs:__guard_dispatch_icall_fptr
                add     rbx, 8
                cmp     rbx, [rdi+10h]
                jnz     short loc_14000432F

loc_14000434B:                          ; CODE XREF: sub_140004310+1D↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
sub_140004310   endp

; ---------------------------------------------------------------------------
algn_14000435B:                         ; DATA XREF: .pdata:0000000140009450↓o
                align 4

; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_14000435C(void *Src)
sub_14000435C   proc near               ; CODE XREF: sub_14000441C+3C↓p
                                        ; sub_14000455C+33↓p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

; __unwind { // __CxxFrameHandler4
                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     rdi, rdx
                mov     rbx, rcx
                xorps   xmm0, xmm0
                movups  xmmword ptr [rcx], xmm0
                xor     esi, esi
                mov     [rcx+10h], rsi
                mov     qword ptr [rcx+18h], 7
                mov     [rcx], si
                test    rdx, rdx
                jz      short loc_1400043D8
                movzx   eax, byte ptr [rdx]
                test    al, al
                jz      short loc_1400043D8

loc_140004394:                          ; CODE XREF: sub_14000435C+7A↓j
                movzx   r9d, al
                lea     rdi, [rdi+1]
                mov     rcx, [rbx+10h]
                mov     rdx, [rbx+18h]
                cmp     rcx, rdx
                jnb     short loc_1400043C9
                lea     rax, [rcx+1]
                mov     [rbx+10h], rax
                mov     rax, rbx
                cmp     rdx, 7
                jbe     short loc_1400043BD
                mov     rax, [rbx]

loc_1400043BD:                          ; CODE XREF: sub_14000435C+5C↑j
                mov     [rax+rcx*2], r9w
                mov     [rax+rcx*2+2], si
                jmp     short loc_1400043D1
; ---------------------------------------------------------------------------

loc_1400043C9:                          ; CODE XREF: sub_14000435C+4B↑j
                mov     rcx, rbx        ; Src
                call    sub_140004140

loc_1400043D1:                          ; CODE XREF: sub_14000435C+6B↑j
                movzx   eax, byte ptr [rdi]
                test    al, al
                jnz     short loc_140004394

loc_1400043D8:                          ; CODE XREF: sub_14000435C+2F↑j
                                        ; sub_14000435C+36↑j
                mov     rax, rbx
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; } // starts at 14000435C
sub_14000435C   endp

; ---------------------------------------------------------------------------
algn_1400043EB:                         ; DATA XREF: .pdata:000000014000945C↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_1400043EC   proc near               ; CODE XREF: sub_14000441C+24↓p
                                        ; sub_14000455C+1E↓p
                                        ; DATA XREF: ...
                sub     rsp, 28h
                lea     rcx, aMso20win32clie_0 ; "mso20win32client.dll"
                call    cs:GetModuleHandleW
                test    rax, rax
                jnz     short loc_140004414
                lea     rcx, aMso20win32serv ; "mso20win32server.dll"
                call    cs:GetModuleHandleW
                test    rax, rax
                jz      short loc_140004416

loc_140004414:                          ; CODE XREF: sub_1400043EC+14↑j
                mov     al, 1

loc_140004416:                          ; CODE XREF: sub_1400043EC+26↑j
                add     rsp, 28h
                retn
sub_1400043EC   endp

; ---------------------------------------------------------------------------
algn_14000441B:                         ; DATA XREF: .pdata:0000000140009468↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_14000441C   proc near               ; CODE XREF: sub_140003FB0+155↑p
                                        ; DATA XREF: .pdata:0000000140009474↓o

var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = dword ptr -78h
var_74          = word ptr -74h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = word ptr -40h
Src             = byte ptr -38h
var_18          = qword ptr -18h
arg_0           = qword ptr  8

; __unwind { // __GSHandlerCheck
                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 0C0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+0C8h+var_18], rax
                mov     rbx, rdx
                mov     edi, ecx
                call    sub_1400043EC
                test    al, al
                jz      loc_140004538
                mov     rdx, rbx
                lea     rcx, [rsp+0C8h+Src] ; Src
                call    sub_14000435C
                cmp     qword ptr [rax+18h], 7
                jbe     short loc_140004467
                mov     rax, [rax]

loc_140004467:                          ; CODE XREF: sub_14000441C+46↑j
                mov     [rsp+0C8h+var_48], rax
                lea     rcx, off_140005BA0
                mov     [rsp+0C8h+var_58], rcx
                lea     rax, off_140005BC8
                lea     rcx, aDllname   ; "DllName"
                mov     [rsp+0C8h+var_88], rax
                mov     [rsp+0C8h+var_50], rcx
                lea     rax, aNumretries ; "NumRetries"
                xor     ecx, ecx
                mov     [rsp+0C8h+var_80], rax
                mov     [rsp+0C8h+var_40], cx
                xor     r9d, r9d
                mov     [rsp+0C8h+var_74], cx
                mov     [rsp+0C8h+var_78], edi
                lea     edx, [rcx+33h]
                lea     r8d, [rcx+32h]
                mov     ecx, 30566D8h
                call    cs:Mso20Win32Client_16175
                test    al, al
                jz      short loc_14000452B
                xor     r9d, r9d
                lea     rax, [rsp+0C8h+var_88]
                mov     [rsp+0C8h+var_98], rax
                mov     ecx, 30566D8h
                lea     rax, [rsp+0C8h+var_58]
                mov     [rsp+0C8h+var_90], rax
                lea     rax, off_140005718
                mov     [rsp+0C8h+var_70], rax
                lea     edx, [r9+33h]
                lea     rax, [rsp+0C8h+var_98]
                mov     [rsp+0C8h+var_68], rax
                lea     r8d, [r9+32h]
                lea     rax, [rsp+0C8h+var_88]
                mov     [rsp+0C8h+var_60], rax
                lea     rax, [rsp+0C8h+var_70]
                mov     [rsp+0C8h+var_A0], rax
                lea     rax, aDelayloadretry ; "DelayloadRetry"
                mov     [rsp+0C8h+var_A8], rax
                call    cs:Mso20Win32Client_46386

loc_14000452B:                          ; CODE XREF: sub_14000441C+AD↑j
                lea     rcx, [rsp+0C8h+Src]
                call    sub_14000425C

loc_140004538:                          ; CODE XREF: sub_14000441C+2B↑j
                mov     rcx, [rsp+0C8h+var_18]
                xor     rcx, rsp        ; StackCookie
                call    __security_check_cookie
                mov     rbx, [rsp+0C8h+arg_0]
                add     rsp, 0C0h
                pop     rdi
                retn
; } // starts at 14000441C
sub_14000441C   endp

; ---------------------------------------------------------------------------
algn_140004559:                         ; DATA XREF: .pdata:0000000140009474↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_14000455C   proc near               ; CODE XREF: sub_140003FB0+10D↑p
                                        ; DATA XREF: .pdata:0000000140009480↓o

var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = word ptr -40h
Src             = byte ptr -38h
var_18          = qword ptr -18h

; __unwind { // __GSHandlerCheck
                push    rbx
                sub     rsp, 0A0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+0A8h+var_18], rax
                mov     rbx, rcx
                call    sub_1400043EC
                test    al, al
                jz      loc_14000463B
                mov     rdx, rbx
                lea     rcx, [rsp+0A8h+Src] ; Src
                call    sub_14000435C
                cmp     qword ptr [rax+18h], 7
                jbe     short loc_14000459E
                mov     rax, [rax]

loc_14000459E:                          ; CODE XREF: sub_14000455C+3D↑j
                lea     rcx, off_140005BA0
                mov     [rsp+0A8h+var_48], rax
                xor     eax, eax
                mov     [rsp+0A8h+var_58], rcx
                lea     rcx, aDllname   ; "DllName"
                mov     [rsp+0A8h+var_40], ax
                mov     [rsp+0A8h+var_50], rcx
                xor     r9d, r9d
                mov     ecx, 30566D9h
                lea     edx, [rax+33h]
                lea     r8d, [rax+0Ah]
                call    cs:Mso20Win32Client_16175
                test    al, al
                jz      short loc_140004631
                xor     r9d, r9d
                lea     rax, [rsp+0A8h+var_58]
                mov     [rsp+0A8h+var_78], rax
                mov     ecx, 30566D9h
                lea     rax, off_140005718
                mov     [rsp+0A8h+var_70], rax
                lea     rax, [rsp+0A8h+var_78]
                mov     [rsp+0A8h+var_68], rax
                lea     edx, [r9+33h]
                lea     rax, [rsp+0A8h+var_70]
                mov     [rsp+0A8h+var_60], rax
                lea     r8d, [r9+0Ah]
                lea     rax, [rsp+0A8h+var_70]
                mov     [rsp+0A8h+var_80], rax
                lea     rax, aDelayloadretry_0 ; "DelayloadRetryError"
                mov     [rsp+0A8h+var_88], rax
                call    cs:Mso20Win32Client_46386

loc_140004631:                          ; CODE XREF: sub_14000455C+7D↑j
                lea     rcx, [rsp+0A8h+Src]
                call    sub_14000425C

loc_14000463B:                          ; CODE XREF: sub_14000455C+25↑j
                mov     rcx, [rsp+0A8h+var_18]
                xor     rcx, rsp        ; StackCookie
                call    __security_check_cookie
                add     rsp, 0A0h
                pop     rbx
                retn
; } // starts at 14000455C
sub_14000455C   endp


; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_140004654(char *String2)
sub_140004654   proc near               ; CODE XREF: sub_140004A50+12↓p
                                        ; DATA XREF: .pdata:0000000140009480↓o ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     rdi, rcx
                lea     rbx, unk_140008130
                lea     rsi, off_1400082B0

loc_140004674:                          ; CODE XREF: sub_140004654+38↓j
                mov     rcx, [rbx+10h]  ; String1
                mov     rdx, rdi        ; String2
                call    cs:_stricmp
                test    eax, eax
                jz      short loc_14000468E
                add     rbx, 40h ; '@'
                cmp     rbx, rsi
                jnz     short loc_140004674

loc_14000468E:                          ; CODE XREF: sub_140004654+2F↑j
                cmp     rbx, rsi
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                setnz   al
                add     rsp, 20h
                pop     rdi
                retn
sub_140004654   endp


; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_1400046A4(char *String2)
sub_1400046A4   proc near               ; CODE XREF: sub_140004A50+1F↓p
                                        ; DATA XREF: .pdata:000000014000948C↓o ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 20h
                lea     rbp, unk_140008130
                mov     rdi, rcx
                mov     rbx, rbp
                lea     rsi, off_1400082B0

loc_1400046CC:                          ; CODE XREF: sub_1400046A4+40↓j
                mov     rcx, [rbx+10h]  ; String1
                mov     rdx, rdi        ; String2
                call    cs:_stricmp
                test    eax, eax
                jz      short loc_1400046EA
                add     rbx, 40h ; '@'
                cmp     rbx, rsi
                jnz     short loc_1400046CC
                xor     eax, eax
                jmp     short loc_14000472B
; ---------------------------------------------------------------------------

loc_1400046EA:                          ; CODE XREF: sub_1400046A4+37↑j
                mov     esi, [rbx]
                xor     edi, edi

loc_1400046EE:                          ; CODE XREF: sub_1400046A4+5C↓j
                mov     ecx, edi
                shl     rcx, 6
                add     rcx, rbp
                call    sub_14000499C
                inc     edi
                cmp     edi, esi
                jbe     short loc_1400046EE
                cmp     qword ptr [rbx+18h], 0
                jnz     short loc_140004727
                mov     rcx, [rbx+8]    ; lpLibFileName
                xor     r8d, r8d
                call    sub_140003D50
                mov     [rbx+18h], rax
                test    rax, rax
                jnz     short loc_140004727
                call    cs:GetLastError
                mov     [rbx+20h], eax

loc_140004727:                          ; CODE XREF: sub_1400046A4+63↑j
                                        ; sub_1400046A4+78↑j
                mov     rax, [rbx+18h]

loc_14000472B:                          ; CODE XREF: sub_1400046A4+44↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rbp, [rsp+28h+arg_8]
                mov     rsi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     rdi
                retn
sub_1400046A4   endp


; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_140004740(wchar_t *)
sub_140004740   proc near               ; CODE XREF: sub_14000499C+7A↓p
                                        ; DATA XREF: .pdata:0000000140009498↓o ...

pdwType         = qword ptr -258h
pvData          = qword ptr -250h
pcbData         = qword ptr -248h
var_238         = dword ptr -238h
Source          = word ptr -228h
var_18          = qword ptr -18h

; __unwind { // __GSHandlerCheck
                push    rbx
                sub     rsp, 270h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+278h+var_18], rax
                lea     rax, [rsp+278h+var_238]
                mov     [rsp+278h+var_238], 208h
                mov     [rsp+278h+pcbData], rax ; pcbData
                lea     rdx, SubKey     ; "Software\\Microsoft\\Office\\16.0\\Comm"...
                lea     rax, [rsp+278h+Source]
                mov     rbx, rcx
                mov     r8, rcx         ; lpValue
                mov     [rsp+278h+pvData], rax ; pvData
                mov     r9d, 2          ; dwFlags
                mov     [rsp+278h+pdwType], 0 ; pdwType
                mov     rcx, 0FFFFFFFF80000002h ; hkey
                call    cs:RegGetValueW
                test    eax, eax
                jnz     short loc_1400047BA
                cmp     [rsp+278h+var_238], 4
                jb      short loc_1400047BA
                mov     rdx, rbx        ; wchar_t *
                lea     rcx, [rsp+278h+Source] ; Source
                call    sub_1400048B4
                jmp     short loc_1400047BC
; ---------------------------------------------------------------------------

loc_1400047BA:                          ; CODE XREF: sub_140004740+62↑j
                                        ; sub_140004740+69↑j
                xor     eax, eax

loc_1400047BC:                          ; CODE XREF: sub_140004740+78↑j
                mov     rcx, [rsp+278h+var_18]
                xor     rcx, rsp        ; StackCookie
                call    __security_check_cookie
                add     rsp, 270h
                pop     rbx
                retn
; } // starts at 140004740
sub_140004740   endp

; ---------------------------------------------------------------------------
algn_1400047D5:                         ; DATA XREF: .pdata:00000001400094A4↓o
                align 8

; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_1400047D8(wchar_t *)
sub_1400047D8   proc near               ; CODE XREF: sub_14000499C+49↓p
                                        ; DATA XREF: .pdata:00000001400094B0↓o

pdwType         = qword ptr -258h
pvData          = qword ptr -250h
pcbData         = qword ptr -248h
var_238         = dword ptr -238h
var_22C         = word ptr -22Ch
Destination     = word ptr -228h
var_18          = qword ptr -18h
var_8           = byte ptr -8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

; __unwind { // __GSHandlerCheck
                mov     [rsp+arg_8], rbx
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 270h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+278h+var_18], rax
                lea     rax, [rsp+278h+var_238]
                mov     [rsp+278h+var_238], 208h
                mov     [rsp+278h+pcbData], rax ; pcbData
                lea     r8, Value       ; "CommonFilesDir"
                lea     rax, [rsp+278h+Destination]
                mov     rdi, rcx
                mov     [rsp+278h+pvData], rax ; pvData
                lea     rdx, aSoftwareMicros_2 ; "Software\\Microsoft\\Windows\\CurrentVe"...
                mov     esi, 2
                xor     ebx, ebx
                mov     r9d, esi        ; dwFlags
                mov     [rsp+278h+pdwType], rbx ; pdwType
                mov     rcx, 0FFFFFFFF80000002h ; hkey
                call    cs:RegGetValueW
                test    eax, eax
                jnz     short loc_14000488B
                mov     eax, [rsp+278h+var_238]
                cmp     eax, 4
                jb      short loc_14000488B
                shr     rax, 1
                lea     r8, aMicrosoftShare ; "\\Microsoft Shared\\Office16\\"
                mov     edx, 104h       ; SizeInWords
                lea     r9, [rsi-3]     ; MaxCount
                lea     rcx, [rsp+278h+Destination] ; Destination
                cmp     [rsp+rax*2+278h+var_22C], 5Ch ; '\'
                cmovz   ebx, esi
                add     r8, rbx         ; Source
                call    cs:wcsncat_s
                mov     rdx, rdi        ; wchar_t *
                lea     rcx, [rsp+278h+Destination] ; Source
                call    sub_1400048B4
                jmp     short loc_14000488D
; ---------------------------------------------------------------------------

loc_14000488B:                          ; CODE XREF: sub_1400047D8+6F↑j
                                        ; sub_1400047D8+78↑j
                xor     eax, eax

loc_14000488D:                          ; CODE XREF: sub_1400047D8+B1↑j
                mov     rcx, [rsp+278h+var_18]
                xor     rcx, rsp        ; StackCookie
                call    __security_check_cookie
                lea     r11, [rsp+278h+var_8]
                mov     rbx, [r11+18h]
                mov     rsi, [r11+20h]
                mov     rsp, r11
                pop     rdi
                retn
; } // starts at 1400047D8
sub_1400047D8   endp

; ---------------------------------------------------------------------------
algn_1400048B2:                         ; DATA XREF: .pdata:00000001400094B0↓o
                align 4

; =============== S U B R O U T I N E =======================================


; __int64 __fastcall sub_1400048B4(wchar_t *Source, wchar_t *)
sub_1400048B4   proc near               ; CODE XREF: sub_140004740+73↑p
                                        ; sub_1400047D8+AC↑p
                                        ; DATA XREF: ...

Destination     = word ptr -228h
var_20          = byte ptr -20h
var_18          = qword ptr -18h

; __unwind { // __GSHandlerCheck
                push    rbx
                sub     rsp, 240h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+248h+var_18], rax
                mov     rbx, rdx
                mov     r8, rcx         ; Source
                mov     edx, 104h       ; SizeInWords
                lea     rcx, [rsp+248h+Destination] ; Destination
                mov     r9, 0FFFFFFFFFFFFFFFFh ; MaxCount
                call    cs:wcsncpy_s
                mov     edx, 5Ch ; '\'  ; Ch
                lea     rcx, [rsp+248h+Destination] ; Str
                call    cs:wcsrchr
                lea     rdx, [rsp+248h+var_20]
                mov     r9, 0FFFFFFFFFFFFFFFFh ; MaxCount
                add     rax, 2
                mov     r8, rbx         ; Source
                sub     rdx, rax
                mov     rcx, rax        ; Destination
                sar     rdx, 1          ; SizeInWords
                call    cs:wcsncpy_s
                xor     r8d, r8d
                lea     rcx, [rsp+248h+Destination] ; lpLibFileName
                call    sub_140003D50
                mov     rbx, rax
                test    rax, rax
                jz      short loc_14000493A
                xor     eax, eax
                jmp     short loc_140004940
; ---------------------------------------------------------------------------

loc_14000493A:                          ; CODE XREF: sub_1400048B4+80↑j
                call    cs:GetLastError

loc_140004940:                          ; CODE XREF: sub_1400048B4+84↑j
                mov     cs:dword_140008A5C, eax
                test    rbx, rbx
                jz      short loc_14000494F
                xor     eax, eax
                jmp     short loc_14000495A
; ---------------------------------------------------------------------------

loc_14000494F:                          ; CODE XREF: sub_1400048B4+95↑j
                lea     rcx, [rsp+248h+Destination] ; lpFileName
                call    cs:GetFileAttributesW

loc_14000495A:                          ; CODE XREF: sub_1400048B4+99↑j
                mov     cs:dword_140008A58, eax
                cmp     eax, 0FFFFFFFFh
                jz      short loc_140004971
                mov     cs:dword_140008A54, 0
                jmp     short loc_14000497D
; ---------------------------------------------------------------------------

loc_140004971:                          ; CODE XREF: sub_1400048B4+AF↑j
                call    cs:GetLastError
                mov     cs:dword_140008A54, eax

loc_14000497D:                          ; CODE XREF: sub_1400048B4+BB↑j
                mov     rax, rbx
                mov     rcx, [rsp+248h+var_18]
                xor     rcx, rsp        ; StackCookie
                call    __security_check_cookie
                add     rsp, 240h
                pop     rbx
                retn
; } // starts at 1400048B4
sub_1400048B4   endp

; ---------------------------------------------------------------------------
algn_140004999:                         ; DATA XREF: .pdata:00000001400094BC↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_14000499C   proc near               ; CODE XREF: sub_1400046A4+53↑p
                                        ; DATA XREF: .pdata:00000001400094C8↓o

phModule        = qword ptr  8

                push    rbx
                sub     rsp, 20h
                cmp     qword ptr [rcx+18h], 0
                mov     rbx, rcx
                jnz     loc_140004A43
                mov     rdx, [rcx+8]    ; lpModuleName
                lea     r8, [rsp+28h+phModule] ; phModule
                xor     ecx, ecx        ; dwFlags
                mov     [rsp+28h+phModule], 0
                call    cs:GetModuleHandleExW
                mov     rax, [rsp+28h+phModule]
                mov     [rbx+18h], rax
                test    rax, rax
                jnz     short loc_140004A43
                call    cs:GetLastError
                mov     rcx, [rbx+8]    ; wchar_t *
                mov     [rbx+20h], eax
                call    sub_1400047D8
                mov     [rbx+18h], rax
                mov     byte ptr [rbx+24h], 1
                test    rax, rax
                jnz     short loc_140004A43
                mov     eax, cs:dword_140008A5C
                mov     rcx, [rbx+8]    ; wchar_t *
                mov     [rbx+20h], eax
                mov     eax, cs:dword_140008A58
                mov     [rbx+28h], eax
                mov     eax, cs:dword_140008A54
                mov     [rbx+2Ch], eax
                call    sub_140004740
                mov     [rbx+18h], rax
                mov     byte ptr [rbx+30h], 1
                test    rax, rax
                jnz     short loc_140004A43
                mov     eax, cs:dword_140008A5C
                mov     [rbx+20h], eax
                mov     eax, cs:dword_140008A58
                mov     [rbx+34h], eax
                mov     eax, cs:dword_140008A54
                mov     [rbx+38h], eax

loc_140004A43:                          ; CODE XREF: sub_14000499C+E↑j
                                        ; sub_14000499C+3A↑j ...
                add     rsp, 20h
                pop     rbx
                retn
sub_14000499C   endp

; ---------------------------------------------------------------------------
algn_140004A49:                         ; DATA XREF: .pdata:00000001400094C8↓o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140004A50   proc near               ; DATA XREF: .rdata:00000001400056F4↓o
                                        ; .data:off_140008350↓o ...
                push    rbx
                sub     rsp, 20h
                mov     rbx, rdx
                cmp     ecx, 1
                jnz     short loc_140004A82
                mov     rcx, [rdx+18h]  ; String2
                call    sub_140004654
                test    al, al
                jz      short loc_140004A82
                mov     rcx, [rbx+18h]  ; String2
                call    sub_1400046A4
                test    rax, rax
                jnz     short loc_140004A84
                mov     ecx, 7
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------
                jmp     short loc_140004A84
; ---------------------------------------------------------------------------

loc_140004A82:                          ; CODE XREF: sub_140004A50+C↑j
                                        ; sub_140004A50+19↑j
                xor     eax, eax

loc_140004A84:                          ; CODE XREF: sub_140004A50+27↑j
                                        ; sub_140004A50+30↑j
                add     rsp, 20h
                pop     rbx
                retn
sub_140004A50   endp

; ---------------------------------------------------------------------------
algn_140004A8A:                         ; DATA XREF: .pdata:00000001400094D4↓o
                align 4

; =============== S U B R O U T I N E =======================================


sub_140004A8C   proc near               ; DATA XREF: .rdata:0000000140005360↓o
                                        ; .rdata:00000001400056F8↓o
                lea     rcx, sub_140002CC0 ; void (__cdecl *)()
                jmp     atexit
sub_140004A8C   endp

; ---------------------------------------------------------------------------
                align 200h
                dq 80h dup(?)
_text           ends

; Section 2. (virtual address 00005000)
; Virtual size                  : 0000234F (   9039.)
; Section size in file          : 00002400 (   9216.)
; Offset to raw data for section: 00004000
; Flags 40000040: Data Readable
; Alignment     : default
;
; Imports from ADVAPI32.dll
;
; ===========================================================================

; Segment type: Externs
; _idata
; LSTATUS (__stdcall *RegQueryValueExW)(HKEY hKey, LPCWSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
                extrn RegQueryValueExW:qword ; CODE XREF: WinMain+BC↑p
                                        ; WinMain+167↑p ...
; LSTATUS (__stdcall *RegOpenKeyExW)(HKEY hKey, LPCWSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult)
                extrn RegOpenKeyExW:qword ; CODE XREF: WinMain+85↑p
                                        ; WinMain+12B↑p ...
; LSTATUS (__stdcall *RegSetValueExW)(HKEY hKey, LPCWSTR lpValueName, DWORD Reserved, DWORD dwType, const BYTE *lpData, DWORD cbData)
                extrn RegSetValueExW:qword ; CODE XREF: sub_140003774+46↑p
                                        ; DATA XREF: sub_140003774+46↑r
; LSTATUS (__stdcall *RegCloseKey)(HKEY hKey)
                extrn RegCloseKey:qword ; CODE XREF: WinMain+C9↑p WinMain+174↑p ...
; LSTATUS (__stdcall *RegGetValueW)(HKEY hkey, LPCWSTR lpSubKey, LPCWSTR lpValue, DWORD dwFlags, LPDWORD pdwType, PVOID pvData, LPDWORD pcbData)
                extrn RegGetValueW:qword ; CODE XREF: sub_140004740+5A↑p
                                        ; sub_1400047D8+67↑p
                                        ; DATA XREF: ...

;
; Imports from KERNEL32.dll
;
; PRUNTIME_FUNCTION (__stdcall *RtlLookupFunctionEntry)(ULONG64 ControlPc, PULONG64 ImageBase, PUNWIND_HISTORY_TABLE HistoryTable)
                extrn RtlLookupFunctionEntry:qword
                                        ; CODE XREF: capture_current_context+25↑p
                                        ; capture_previous_context+25↑p ...
; HANDLE (__stdcall *CreateMutexW)(LPSECURITY_ATTRIBUTES lpMutexAttributes, BOOL bInitialOwner, LPCWSTR lpName)
                extrn CreateMutexW:qword ; CODE XREF: sub_1400035D0+18↑p
                                        ; sub_1400035D0+43↑p
                                        ; DATA XREF: ...
; DWORD (__stdcall *WaitForSingleObject)(HANDLE hHandle, DWORD dwMilliseconds)
                extrn WaitForSingleObject:qword ; CODE XREF: StartAddress+21↑p
                                        ; StartAddress+5F↑p ...
; DWORD (__stdcall *GetCurrentThreadId)()
                extrn GetCurrentThreadId:qword
                                        ; CODE XREF: __security_init_cookie+3A↑p
                                        ; sub_140003640+6B↑p
                                        ; DATA XREF: ...
; BOOL (__stdcall *ReleaseMutex)(HANDLE hMutex)
                extrn ReleaseMutex:qword ; CODE XREF: WinMain+C5D↑p
                                        ; StartAddress+D0↑p ...
; DWORD (__stdcall *SuspendThread)(HANDLE hThread)
                extrn SuspendThread:qword ; CODE XREF: sub_1400037E0+C0↑p
                                        ; DATA XREF: sub_1400037E0+C0↑r
; DWORD (__stdcall *ResumeThread)(HANDLE hThread)
                extrn ResumeThread:qword ; CODE XREF: sub_1400037E0+12E↑p
                                        ; DATA XREF: sub_1400037E0+12E↑r
; HANDLE (__stdcall *CreateEventW)(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCWSTR lpName)
                extrn CreateEventW:qword ; CODE XREF: WinMain+C2B↑p
                                        ; DATA XREF: WinMain+C2B↑r
; BOOL (__stdcall *CloseHandle)(HANDLE hObject)
                extrn CloseHandle:qword ; CODE XREF: sub_1400037E0+CE↑p
                                        ; sub_1400037E0+18B↑p
                                        ; DATA XREF: ...
; HANDLE (__stdcall *CreateThread)(LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId)
                extrn CreateThread:qword ; CODE XREF: sub_140003640+92↑p
                                        ; DATA XREF: sub_140003640+92↑r
; BOOL (__stdcall *GetThreadContext)(HANDLE hThread, LPCONTEXT lpContext)
                extrn GetThreadContext:qword ; CODE XREF: sub_1400037E0+101↑p
                                        ; DATA XREF: sub_1400037E0+101↑r
; HANDLE (__stdcall *OpenThread)(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwThreadId)
                extrn OpenThread:qword  ; CODE XREF: sub_1400037E0+2C↑p
                                        ; DATA XREF: sub_1400037E0+2C↑r
; UINT (__stdcall *GetSystemDirectoryW)(LPWSTR lpBuffer, UINT uSize)
                extrn GetSystemDirectoryW:qword ; CODE XREF: sub_140003B24+44↑p
                                        ; DATA XREF: sub_140003B24+44↑r
; DWORD (__stdcall *GetLastError)()
                extrn GetLastError:qword ; CODE XREF: WinMain:loc_140001CB0↑p
                                        ; sub_140002890+154↑p ...
; FARPROC (__stdcall *GetProcAddress)(HMODULE hModule, LPCSTR lpProcName)
                extrn GetProcAddress:qword ; CODE XREF: WinMain+26C↑p
                                        ; WinMain+CB6↑p ...
; HMODULE (__stdcall *GetModuleHandleW)(LPCWSTR lpModuleName)
                extrn GetModuleHandleW:qword ; CODE XREF: WinMain+CA6↑p
                                        ; __scrt_is_managed_app+6↑p ...
; BOOL (__stdcall *FreeLibrary)(HMODULE hLibModule)
                extrn FreeLibrary:qword ; CODE XREF: sub_140002890+1B7↑p
                                        ; sub_140003B24+1E5↑p ...
; HMODULE (__stdcall *LoadLibraryExW)(LPCWSTR lpLibFileName, HANDLE hFile, DWORD dwFlags)
                extrn LoadLibraryExW:qword ; CODE XREF: WinMain+247↑p
                                        ; WinMain+CD1↑p ...
; HMODULE (__stdcall *LoadLibraryExA)(LPCSTR lpLibFileName, HANDLE hFile, DWORD dwFlags)
                extrn LoadLibraryExA:qword ; CODE XREF: sub_140002890+146↑p
                                        ; sub_140003FB0+89↑p ...
; void (__stdcall *GetSystemTimeAsFileTime)(LPFILETIME lpSystemTimeAsFileTime)
                extrn GetSystemTimeAsFileTime:qword
                                        ; CODE XREF: __security_init_cookie+2C↑p
                                        ; DATA XREF: __security_init_cookie+2C↑r
; DWORD (__stdcall *GetFileAttributesW)(LPCWSTR lpFileName)
                extrn GetFileAttributesW:qword ; CODE XREF: sub_1400048B4+A0↑p
                                        ; DATA XREF: sub_1400048B4+A0↑r
; BOOL (__stdcall *GetModuleHandleExW)(DWORD dwFlags, LPCWSTR lpModuleName, HMODULE *phModule)
                extrn GetModuleHandleExW:qword ; CODE XREF: sub_14000499C+28↑p
                                        ; DATA XREF: sub_14000499C+28↑r
; void (__stdcall *RtlCaptureContext)(PCONTEXT ContextRecord)
                extrn RtlCaptureContext:qword
                                        ; CODE XREF: capture_current_context+D↑p
                                        ; capture_previous_context+B↑p ...
; LONG (__stdcall *UnhandledExceptionFilter)(struct _EXCEPTION_POINTERS *ExceptionInfo)
                extrn UnhandledExceptionFilter:qword
                                        ; CODE XREF: __raise_securityfailure+14↑p
                                        ; __scrt_fastfail+120↑p
                                        ; DATA XREF: ...
; LPTOP_LEVEL_EXCEPTION_FILTER (__stdcall *SetUnhandledExceptionFilter)(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
                extrn SetUnhandledExceptionFilter:qword
                                        ; CODE XREF: __raise_securityfailure+B↑p
                                        ; __scrt_fastfail+115↑p
                                        ; DATA XREF: ...
; HANDLE (__stdcall *GetCurrentProcess)()
                extrn GetCurrentProcess:qword
                                        ; CODE XREF: __raise_securityfailure+1A↑p
                                        ; DATA XREF: __raise_securityfailure+1A↑r
; BOOL (__stdcall *TerminateProcess)(HANDLE hProcess, UINT uExitCode)
                extrn TerminateProcess:qword
                                        ; DATA XREF: __raise_securityfailure+2D↑r
; BOOL (__stdcall *IsProcessorFeaturePresent)(DWORD ProcessorFeature)
                extrn IsProcessorFeaturePresent:qword
                                        ; CODE XREF: __report_gsfailure+E↑p
                                        ; __report_securityfailure+D↑p ...
; PEXCEPTION_ROUTINE (__stdcall *RtlVirtualUnwind)(ULONG HandlerType, ULONG64 ImageBase, ULONG64 ControlPc, PRUNTIME_FUNCTION FunctionEntry, PCONTEXT ContextRecord, PVOID *HandlerData, PULONG64 EstablisherFrame, PKNONVOLATILE_CONTEXT_POINTERS ContextPointers)
                extrn RtlVirtualUnwind:qword
                                        ; CODE XREF: capture_current_context+5C↑p
                                        ; capture_previous_context+5C↑p ...
; SIZE_T (__stdcall *VirtualQuery)(LPCVOID lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, SIZE_T dwLength)
                extrn VirtualQuery:qword ; CODE XREF: sub_14000262C+1E↑p
                                        ; DATA XREF: sub_14000262C+1E↑r
; void (__stdcall *InitializeSListHead)(PSLIST_HEADER ListHead)
                extrn InitializeSListHead:qword ; DATA XREF: sub_140001874+7↑r
; BOOL (__stdcall *IsDebuggerPresent)()
                extrn IsDebuggerPresent:qword ; CODE XREF: __scrt_fastfail+F8↑p
                                        ; DATA XREF: __scrt_fastfail+F8↑r
; void (__stdcall *GetStartupInfoW)(LPSTARTUPINFOW lpStartupInfo)
                extrn GetStartupInfoW:qword
                                        ; CODE XREF: __scrt_get_show_window_mode+1C↑p
                                        ; DATA XREF: __scrt_get_show_window_mode+1C↑r
; void (__stdcall *RaiseException)(DWORD dwExceptionCode, DWORD dwExceptionFlags, DWORD nNumberOfArguments, const ULONG_PTR *lpArguments)
                extrn RaiseException:qword ; CODE XREF: sub_140002890+A7↑p
                                        ; sub_140002890+19A↑p ...
; void (__stdcall *GetSystemInfo)(LPSYSTEM_INFO lpSystemInfo)
                extrn GetSystemInfo:qword ; CODE XREF: sub_14000262C+3A↑p
                                        ; DATA XREF: sub_14000262C+3A↑r
; BOOL (__stdcall *VirtualProtect)(LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect)
                extrn VirtualProtect:qword ; CODE XREF: sub_140002760+6F↑p
                                        ; DATA XREF: sub_140002760+6F↑r
; BOOL (__stdcall *QueryPerformanceCounter)(LARGE_INTEGER *lpPerformanceCount)
                extrn QueryPerformanceCounter:qword
                                        ; CODE XREF: __security_init_cookie+56↑p
                                        ; DATA XREF: __security_init_cookie+56↑r
; DWORD (__stdcall *GetCurrentProcessId)()
                extrn GetCurrentProcessId:qword
                                        ; CODE XREF: __security_init_cookie+46↑p
                                        ; DATA XREF: __security_init_cookie+46↑r

;
; Imports from VCRUNTIME140_1.dll
;
                extrn __imp___CxxFrameHandler4:qword
                                        ; DATA XREF: __CxxFrameHandler4↑r
                                        ; .c2r:000000014000B04C↓o

;
; Imports from VCRUNTIME140.dll
;
; void *(__cdecl *memmove)(void *, const void *Src, size_t Size)
                extrn __imp_memmove:qword ; DATA XREF: memmove↑r
                                        ; .c2r:000000014000B060↓o
; void *(__cdecl *memset)(void *, int Val, size_t Size)
                extrn __imp_memset:qword ; DATA XREF: memset↑r
                extrn __imp___current_exception_context:qword
                                        ; DATA XREF: __current_exception_context↑r
                extrn __imp___current_exception:qword
                                        ; DATA XREF: __current_exception↑r
; EXCEPTION_DISPOSITION (__cdecl *__C_specific_handler)(struct _EXCEPTION_RECORD *ExceptionRecord, void *EstablisherFrame, struct _CONTEXT *ContextRecord, struct _DISPATCHER_CONTEXT *DispatcherContext)
                extrn __imp___C_specific_handler:qword
                                        ; DATA XREF: __C_specific_handler↑r
; wchar_t *(__cdecl *wcsrchr)(const wchar_t *Str, wchar_t Ch)
                extrn wcsrchr:qword     ; CODE XREF: sub_1400048B4+42↑p
                                        ; DATA XREF: sub_1400048B4+42↑r
                extrn __std_exception_copy:qword ; CODE XREF: sub_140003228+24↑p
                                        ; sub_14000328C+24↑p
                                        ; DATA XREF: ...
                extrn __std_exception_destroy:qword
                                        ; CODE XREF: sub_1400032E0+1D↑p
                                        ; DATA XREF: .text:00000001400032CE↑r ...
; void (__stdcall __noreturn *_CxxThrowException)(void *pExceptionObject, _ThrowInfo *pThrowInfo)
                extrn __imp__CxxThrowException:qword
                                        ; DATA XREF: _CxxThrowException↑r
; void *(__cdecl *memcpy)(void *, const void *Src, size_t Size)
                extrn __imp_memcpy:qword ; DATA XREF: memcpy↑r

;
; Imports from MSVCP140.dll
;
; __int64 (__cdecl *Query_perf_counter)()
                extrn _Query_perf_counter:qword ; CODE XREF: sub_140001340+16↑p
                                        ; DATA XREF: sub_140001340+16↑r ...
; void (__cdecl *Thrd_sleep)(const xtime *)
                extrn _Thrd_sleep:qword ; CODE XREF: sub_140003F28+68↑p
                                        ; DATA XREF: sub_140003F28+68↑r
; __int64 (__cdecl *Xtime_get_ticks)()
                extrn _Xtime_get_ticks:qword ; CODE XREF: sub_140003E7C+10↑p
                                        ; DATA XREF: sub_140003E7C+10↑r
; __int64 (__cdecl *Query_perf_frequency)()
                extrn _Query_perf_frequency:qword ; CODE XREF: sub_140001340+D↑p
                                        ; DATA XREF: sub_140001340+D↑r
; void std::_Xlength_error(char const *)
                extrn ?_Xlength_error@std@@YAXPEBD@Z:qword
                                        ; CODE XREF: sub_140002DB4+40↑p
                                        ; sub_140002EC4+70↑p ...
; void std::_Xbad_alloc(void)
                extrn ?_Xbad_alloc@std@@YAXXZ:qword ; CODE XREF: sub_14000397C+F↑p
                                        ; DATA XREF: sub_14000397C+F↑r

;
; Imports from api-ms-win-crt-heap-l1-1-0.dll
;
; int (__cdecl *_set_new_mode)(int NewMode)
                extrn __imp__set_new_mode:qword ; DATA XREF: _set_new_mode↑r
                                        ; .c2r:000000014000B088↓o
; void (__cdecl *free)(void *Block)
                extrn free:qword        ; DATA XREF: sub_140002E5C+25↑r
; void *(__cdecl *malloc)(size_t Size)
                extrn malloc:qword      ; CODE XREF: sub_14000397C+4↑p
                                        ; DATA XREF: sub_14000397C+4↑r

;
; Imports from api-ms-win-crt-utility-l1-1-0.dll
;
; void (__cdecl *srand)(unsigned int Seed)
                extrn srand:qword       ; CODE XREF: sub_140003640+18↑p
                                        ; DATA XREF: sub_140003640+18↑r ...
; int (__cdecl *rand)()
                extrn rand:qword        ; CODE XREF: sub_140003640+1E↑p
                                        ; DATA XREF: sub_140003640+1E↑r

;
; Imports from api-ms-win-crt-stdio-l1-1-0.dll
;
; int *(__cdecl *__p__commode)()
                extrn __imp___p__commode:qword ; DATA XREF: __p__commode↑r
                                        ; .c2r:000000014000B0B0↓o
; errno_t (__cdecl *_set_fmode)(int Mode)
                extrn __imp__set_fmode:qword ; DATA XREF: _set_fmode↑r
; int (__cdecl *_stdio_common_vsnwprintf_s)(unsigned __int64 Options, wchar_t *Buffer, size_t BufferCount, size_t MaxCount, const wchar_t *Format, _locale_t Locale, va_list ArgList)
                extrn __stdio_common_vsnwprintf_s:qword
                                        ; CODE XREF: sub_1400012C0+4B↑p
                                        ; DATA XREF: sub_1400012C0+4B↑r

;
; Imports from api-ms-win-crt-time-l1-1-0.dll
;
; __time64_t (__cdecl *time64)(__time64_t *Time)
                extrn _time64:qword     ; CODE XREF: sub_140003640+F↑p
                                        ; DATA XREF: sub_140003640+F↑r ...

;
; Imports from api-ms-win-crt-runtime-l1-1-0.dll
;
; int (__cdecl *_crt_atexit)(_PVFV Function)
                extrn __imp__crt_atexit:qword ; DATA XREF: _crt_atexit↑r
                                        ; .c2r:000000014000B0D8↓o
; int (__cdecl *_initialize_onexit_table)(_onexit_table_t *Table)
                extrn __imp__initialize_onexit_table:qword
                                        ; DATA XREF: _initialize_onexit_table↑r
                extrn __imp_terminate:qword ; DATA XREF: terminate↑r
; void (__cdecl *_register_thread_local_exe_atexit_callback)(_tls_callback_type Callback)
                extrn __imp__register_thread_local_exe_atexit_callback:qword
                                        ; DATA XREF: _register_thread_local_exe_atexit_callback↑r
; void (__cdecl *_c_exit)()
                extrn __imp__c_exit:qword ; DATA XREF: _c_exit↑r
; void (__cdecl *_cexit)()
                extrn __imp__cexit:qword ; DATA XREF: _cexit↑r
; void (__cdecl __noreturn *invalid_parameter_noinfo_noreturn)()
                extrn _invalid_parameter_noinfo_noreturn:qword
                                        ; CODE XREF: sub_140002D60:loc_140002D9A↑p
                                        ; sub_140002E5C:loc_140002E88↑p
                                        ; DATA XREF: ...
; void (__cdecl __noreturn *_exit)(int Code)
                extrn __imp__exit:qword ; DATA XREF: _exit↑r
; int (__cdecl *_register_onexit_function)(_onexit_table_t *Table, _onexit_t Function)
                extrn __imp__register_onexit_function:qword
                                        ; DATA XREF: _register_onexit_function↑r
; void (__cdecl __noreturn *exit)(int Code)
                extrn __imp_exit:qword  ; DATA XREF: exit↑r
; int (__cdecl *_initterm_e)(_PIFV *First, _PIFV *Last)
                extrn __imp__initterm_e:qword ; DATA XREF: _initterm_e↑r
; void (__cdecl *_initterm)(_PVFV *First, _PVFV *Last)
                extrn __imp__initterm:qword ; DATA XREF: _initterm↑r
; char *(__cdecl *_get_narrow_winmain_command_line)()
                extrn __imp__get_narrow_winmain_command_line:qword
                                        ; DATA XREF: _get_narrow_winmain_command_line↑r
; int (__cdecl *_initialize_narrow_environment)()
                extrn __imp__initialize_narrow_environment:qword
                                        ; DATA XREF: _initialize_narrow_environment↑r
; errno_t (__cdecl *_configure_narrow_argv)(_crt_argv_mode mode)
                extrn __imp__configure_narrow_argv:qword
                                        ; DATA XREF: _configure_narrow_argv↑r
; void (__cdecl *_set_app_type)(_crt_app_type Type)
                extrn __imp__set_app_type:qword ; DATA XREF: _set_app_type↑r
; int (__cdecl *_seh_filter_exe)(unsigned int ExceptionNum, struct _EXCEPTION_POINTERS *ExceptionPtr)
                extrn __imp__seh_filter_exe:qword ; DATA XREF: _seh_filter_exe↑r

;
; Imports from api-ms-win-crt-string-l1-1-0.dll
;
; errno_t (__cdecl *wcsncat_s)(wchar_t *Destination, rsize_t SizeInWords, const wchar_t *Source, rsize_t MaxCount)
                extrn wcsncat_s:qword   ; CODE XREF: sub_140003B24+A9↑p
                                        ; sub_1400047D8+9E↑p
                                        ; DATA XREF: ...
; int (__cdecl *stricmp)(const char *String1, const char *String2)
                extrn _stricmp:qword    ; CODE XREF: sub_140004654+27↑p
                                        ; sub_1400046A4+2F↑p
                                        ; DATA XREF: ...
; errno_t (__cdecl *wcsncpy_s)(wchar_t *Destination, rsize_t SizeInWords, const wchar_t *Source, rsize_t MaxCount)
                extrn wcsncpy_s:qword   ; CODE XREF: sub_1400048B4+32↑p
                                        ; sub_1400048B4+67↑p
                                        ; DATA XREF: ...
; errno_t (__cdecl *strncpy_s)(char *Destination, rsize_t SizeInBytes, const char *Source, rsize_t MaxCount)
                extrn strncpy_s:qword   ; CODE XREF: sub_140003FB0+137↑p
                                        ; sub_140003FB0+181↑p
                                        ; DATA XREF: ...

;
; Imports from api-ms-win-crt-math-l1-1-0.dll
;
; void (__cdecl *__setusermatherr)(_UserMathErrorFunctionPointer UserMathErrorFunction)
                extrn __imp___setusermatherr:qword ; DATA XREF: __setusermatherr↑r
                                        ; .c2r:000000014000B100↓o

;
; Imports from api-ms-win-crt-locale-l1-1-0.dll
;
                extrn __imp___initialize_lconv_for_unsigned_char:qword
                                        ; DATA XREF: __initialize_lconv_for_unsigned_char↑r
                                        ; .c2r:000000014000B114↓o
; int (__cdecl *_configthreadlocale)(int Flag)
                extrn __imp__configthreadlocale:qword
                                        ; DATA XREF: _configthreadlocale↑r


; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
_rdata          segment para public 'DATA' use64
                assume cs:_rdata
                ;org 140005350h
; const _PVFV qword_140005350
qword_140005350 dq 0                    ; DATA XREF: __scrt_common_main_seh(void)+70↑o
                dq offset ?pre_cpp_initialization@@YAXXZ ; pre_cpp_initialization(void)
                dq offset sub_140004A8C
                dq offset sub_140001010
; const _PVFV qword_140005370
qword_140005370 dq 0                    ; DATA XREF: __scrt_common_main_seh(void):loc_1400014F5↑o
; const _PIFV First
First           dq 0                    ; DATA XREF: __scrt_common_main_seh(void)+4F↑o
                dq offset ?pre_c_initialization@@YAHXZ ; pre_c_initialization(void)
                dq offset ?post_pgo_initialization@@YAHXZ ; post_pgo_initialization(void)
                dq offset __initialize_lconv_for_unsigned_char
                dq offset sub_140001B50
; const _PIFV Last
Last            dq 0                    ; DATA XREF: __scrt_common_main_seh(void)+48↑o
                align 10h
; const wchar_t Format
Format:                                 ; DATA XREF: WinMain+37↑o WinMain+E2↑o ...
                text "UTF-16LE", 'Software\Microsoft\Office\%d.%d\Word\Boot',0
                align 8
; const WCHAR LibFileName
LibFileName:                            ; DATA XREF: WinMain+23A↑o WinMain+CC8↑o ...
                text "UTF-16LE", 'wwlib.dll',0
                align 20h
; const WCHAR aWwlibtdll
aWwlibtdll:                             ; DATA XREF: WinMain+211↑o
                text "UTF-16LE", 'WwlibtDll',0
                align 20h
; const wchar_t aSoftwareMicros_0
aSoftwareMicros_0:                      ; DATA XREF: WinMain+190↑o
                text "UTF-16LE", 'Software\Microsoft\Office\%d.%d\Word',0
                align 4
; const CHAR ProcName[]
ProcName        db 'FMain',0            ; DATA XREF: WinMain:loc_140001282↑o
                align 8
; const WCHAR aBootprofilerms
aBootprofilerms:                        ; DATA XREF: WinMain+15B↑o
                text "UTF-16LE", 'BootProfilerMsec',0
                align 20h
; const WCHAR ValueName
ValueName:                              ; DATA XREF: WinMain+B5↑o
                                        ; sub_140003774+29↑o
                text "UTF-16LE", 'BootProfilerResiliency',0
                align 10h
xmmword_1400054F0 xmmword 0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFh
                                        ; DATA XREF: __scrt_initialize_onexit_tables:loc_1400016EF↑r
_load_config_used dd 140h               ; DATA XREF: HEADER:00000001400001E0↑o
                                        ; Size
                dd 0                    ; Time stamp
                dw 2 dup(0)             ; Version: 0.0
                dd 0                    ; GlobalFlagsClear
                dd 0                    ; GlobalFlagsSet
                dd 0                    ; CriticalSectionDefaultTimeout
                dq 0                    ; DeCommitFreeBlockThreshold
                dq 0                    ; DeCommitTotalFreeThreshold
                dq 0                    ; LockPrefixTable
                dq 0                    ; MaximumAllocationSize
                dq 0                    ; VirtualMemoryThreshold
                dq 0                    ; ProcessAffinityMask
                dd 0                    ; ProcessHeapFlags
                dw 0                    ; CSDVersion
                dw 0                    ; Reserved1
                dq 0                    ; EditList
                dq offset __security_cookie ; SecurityCookie
                dq 0                    ; SEHandlerTable
                dq 0                    ; SEHandlerCount
                dq offset __guard_check_icall_fptr ; GuardCFCheckFunctionPointer
                dq offset __guard_dispatch_icall_fptr ; GuardCFDispatchFunctionPointer
                dq offset __guard_fids_table ; GuardCFFunctionTable
                dq 1Fh                  ; GuardCFFunctionCount
dword_140005590 dd 417500h              ; DATA XREF: sub_1400024E0+6↑r
                                        ; sub_1400027F0+4↑r
                                        ; GuardFlags
                dw 0                    ; CodeIntegrity.Flags
                dw 0                    ; CodeIntegrity.Catalog
                dd 0                    ; CodeIntegrity.CatalogOffset
                dd 0                    ; CodeIntegrity.Reserved
                dq 0                    ; GuardAddressTakenIatEntryTable
                dq 0                    ; GuardAddressTakenIatEntryCount
                dq 0                    ; GuardLongJumpTargetTable
                dq 0                    ; GuardLongJumpTargetCount
                dq 0                    ; DynamicValueRelocTable
                dq 0                    ; CHPEMetadataPointer
                dq 0                    ; GuardRFFailureRoutine
                dq 0                    ; GuardRFFailureRoutineFunctionPointer
                dd 0                    ; DynamicValueRelocTableOffset
                dw 0                    ; DynamicValueRelocTableSection
                dw 0                    ; Reserved2
                dq 0                    ; GuardRFVerifyStackPointerFunctionPointer
                dd 0                    ; HotPatchTableOffset
                dd 0                    ; Reserved3
                dq 0                    ; EnclaveConfigurationPointer
                dq offset __volatile_metadata ; VolatileMetadataPointer
                dq offset __guard_eh_cont_table ; GuardEHContinuationTable
                dq 2                    ; GuardEHContinuationCount
                dq offset __guard_xfg_check_icall_fptr ; GuardXFGCheckFunctionPointer
                dq offset __guard_xfg_dispatch_icall_fptr ; GuardXFGDispatchFunctionPointer
                dq offset __guard_xfg_table_dispatch_icall_fptr ; GuardXFGTableDispatchFunctionPointer
                dq offset __castguard_check_failure_os_handled_fptr ; CastGuardOsDeterminedFailureMode
                dq offset off_140005670
__guard_check_icall_fptr dq offset _guard_check_icall_nop
                                        ; DATA XREF: .rdata:0000000140005570↑o
__guard_xfg_check_icall_fptr dq offset _guard_check_icall_nop
                                        ; DATA XREF: .rdata:0000000140005618↑o
__guard_dispatch_icall_fptr dq offset _guard_dispatch_icall_nop
                                        ; DATA XREF: WinMain+290↑r
                                        ; __scrt_common_main_seh(void)+BD↑r ...
__guard_xfg_dispatch_icall_fptr dq offset _guard_xfg_dispatch_icall_nop
                                        ; DATA XREF: .rdata:0000000140005620↑o
__guard_xfg_table_dispatch_icall_fptr dq offset _guard_xfg_dispatch_icall_nop
                                        ; DATA XREF: .rdata:0000000140005628↑o
__castguard_check_failure_os_handled_fptr db    0
                                        ; DATA XREF: .rdata:0000000140005630↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_140005670   dq offset memcpy        ; DATA XREF: .rdata:0000000140005638↑o
__guard_eh_cont_table dd rva $LN18      ; DATA XREF: .rdata:0000000140005608↑o
                dd rva loc_140001F09
__guard_fids_table dd rva sub_140001000 ; DATA XREF: .rdata:0000000140005580↑o
                dd rva sub_140001010
                dd rva UserMathErrorFunction
                dd rva ?pre_c_initialization@@YAHXZ ; pre_c_initialization(void)
                dd rva ?post_pgo_initialization@@YAHXZ ; post_pgo_initialization(void)
                dd rva ?pre_cpp_initialization@@YAXXZ ; pre_cpp_initialization(void)
                dd rva start
                dd rva _guard_check_icall_nop
                dd rva sub_140001B50
                dd rva __initialize_lconv_for_unsigned_char
                dd rva sub_140001D40
                dd rva ?literal_character_lead@?$format_string_parser@_W@__crt_stdio_input@@QEBA_WXZ ; __crt_stdio_input::format_string_parser<wchar_t>::literal_character_lead(void)
                dd rva ?file_name@__crt_win32_buffer_debug_info@@QEBAPEBDXZ ; __crt_win32_buffer_debug_info::file_name(void)
                dd rva get_srw_lock
                dd rva sub_140001F40
                dd rva __report_gsfailure
                dd rva __scrt_unhandled_exception_filter
                dd rva sub_140002430
                dd rva sub_140002890
                dd rva memcpy
                dd rva sub_140002CC0
                dd rva sub_1400032E0
                dd rva StartAddress
                dd rva sub_140003B10
                dd rva sub_140003FB0
                dd rva sub_1400042A0
                dd rva sub_1400042D0
                dd rva sub_1400042F0
                dd rva sub_140004310
                dd rva sub_140004A50
                dd rva sub_140004A8C
__volatile_metadata db  18h             ; DATA XREF: .rdata:0000000140005600↑o
                db    0
                db    0
                db    0
                db    2
                db  80h
                db    2
                db  80h
                db  58h ; X
                db  5Ah ; Z
                db    0
                db    0
                db  60h ; `
                db    0
                db    0
                db    0
                db 0B8h
                db  5Ah ; Z
                db    0
                db    0
                db  38h ; 8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_140005718   dq offset sub_140004310 ; DATA XREF: sub_14000441C+CB↑o
                                        ; sub_14000455C+91↑o
                dq offset sub_1400042A0
                dq offset UserMathErrorFunction
                dq offset UserMathErrorFunction
                align 20h
unk_140005740   db    0                 ; DATA XREF: sub_140001948+A↑o
                                        ; sub_140001948+11↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset unk_140005778
off_140005770   dq offset sub_140001F40 ; DATA XREF: sub_140001F40+6↑o
                                        ; .data:off_1400082B0↓o ...
unk_140005778   db    1                 ; DATA XREF: .rdata:0000000140005768↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  30h ; 0
                db  83h
                db    0
                db    0
                db 0A0h
                db  57h ; W
                db    0
                db    0
                db  78h ; x
                db  57h ; W
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db 0B8h
                db  57h ; W
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0C8h
                db  57h ; W
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  30h ; 0
                db  83h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                db 0A0h
                db  57h ; W
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; const struct _EXCEPTION_POINTERS ExceptionInfo
ExceptionInfo   _EXCEPTION_POINTERS <offset dword_140008370, offset ContextRecord>
                                        ; DATA XREF: __report_gsfailure+C1↑o
                                        ; __report_securityfailure+8B↑o
; const WCHAR aKernel32Dll_1
aKernel32Dll_1:                         ; DATA XREF: sub_14000258C+20↑o
                text "UTF-16LE", 'KERNEL32.DLL',0
                align 20h
; const CHAR aAcquiresrwlock[]
aAcquiresrwlock db 'AcquireSRWLockExclusive',0
                                        ; DATA XREF: sub_14000258C:loc_1400025C6↑o
; const CHAR aReleasesrwlock[]
aReleasesrwlock db 'ReleaseSRWLockExclusive',0 ; DATA XREF: sub_14000258C+4F↑o
off_140005850   dq offset sub_1400032E0 ; DATA XREF: sub_140003228+C↑o
                                        ; sub_14000328C+C↑o ...
                dq offset sub_140003B10
; const CHAR aAdddlldirector[]
aAdddlldirector db 'AddDllDirectory',0  ; DATA XREF: WinMain+CAF↑o
                                        ; sub_140003D50+59↑o ...
; const WCHAR ModuleName
ModuleName:                             ; DATA XREF: WinMain+C9F↑o
                                        ; sub_140003D50+49↑o ...
                text "UTF-16LE", 'kernel32.dll',0
                align 10h
; const WCHAR aMso20win32clie_0
aMso20win32clie_0:                      ; DATA XREF: sub_1400043EC+4↑o
                                        ; .data:0000000140008138↓o
                text "UTF-16LE", 'mso20win32client.dll',0
                align 20h
aDelayloadretry:                        ; DATA XREF: sub_14000441C+FD↑o
                text "UTF-16LE", 'DelayloadRetry',0
                align 20h
aDelayloadretry_0:                      ; DATA XREF: sub_14000455C+C3↑o
                text "UTF-16LE", 'DelayloadRetryError',0
aMso20win32clie_1 db 'mso20win32client.dll',0
                                        ; DATA XREF: .data:0000000140008140↓o
                align 20h
aMso30win32clie db 'mso30win32client.dll',0 ; DATA XREF: .data:0000000140008180↓o
                align 8
aMso30win32clie_0:                      ; DATA XREF: .data:0000000140008178↓o
                text "UTF-16LE", 'mso30win32client.dll',0
                align 8
aMso40uiwin32cl db 'mso40uiwin32client.dll',0
                                        ; DATA XREF: .data:00000001400081C0↓o
                align 20h
aMso40uiwin32cl_0:                      ; DATA XREF: .data:00000001400081B8↓o
                text "UTF-16LE", 'mso40uiwin32client.dll',0
                align 10h
aMso50win32clie db 'mso50win32client.dll',0 ; DATA XREF: .data:0000000140008200↓o
                align 8
aMso50win32clie_0:                      ; DATA XREF: .data:00000001400081F8↓o
                text "UTF-16LE", 'mso50win32client.dll',0
                align 8
aMso98win32clie db 'mso98win32client.dll',0 ; DATA XREF: .data:0000000140008240↓o
                align 10h
aMso98win32clie_0:                      ; DATA XREF: .data:0000000140008238↓o
                text "UTF-16LE", 'mso98win32client.dll',0
                align 20h
aMsoDll         db 'mso.dll',0          ; DATA XREF: .data:0000000140008280↓o
aMsoDll_0:                              ; DATA XREF: .data:0000000140008278↓o
                text "UTF-16LE", 'mso.dll',0
                db  3Dh ; =
                db  16h
                db    0
                db    0
                db  53h ; S
                db  16h
                db    0
                db    0
                db  4Bh ; K
                db  17h
                db    0
                db    0
                db 0B7h
                db  1Ah
                db    0
                db    0
                db 0BCh
                db  1Ah
                db    0
                db    0
                db    6
                db  1Bh
                db    0
                db    0
                db 0DBh
                db  1Fh
                db    0
                db    0
                db  57h ; W
                db  20h
                db    0
                db    0
                db  6Ch ; l
                db  20h
                db    0
                db    0
                db 0CBh
                db  20h
                db    0
                db    0
                db 0D6h
                db  22h ; "
                db    0
                db    0
                db    8
                db  23h ; #
                db    0
                db    0
                db  1Ch
                db  25h ; %
                db    0
                db    0
                db  28h ; (
                db  25h ; %
                db    0
                db    0
                db  79h ; y
                db  25h ; %
                db    0
                db    0
                db  96h
                db  25h ; %
                db    0
                db    0
                db    0
                db  26h ; &
                db    0
                db    0
                db 0A5h
                db  26h ; &
                db    0
                db    0
                db  21h ; !
                db  28h ; (
                db    0
                db    0
                db  30h ; 0
                db  28h ; (
                db    0
                db    0
                db  73h ; s
                db  28h ; (
                db    0
                db    0
                db  3Ch ; <
                db  2Ah ; *
                db    0
                db    0
                db  2Fh ; /
                db  30h ; 0
                db    0
                db    0
                db  4Fh ; O
                db  31h ; 1
                db    0
                db    0
                db    0
                db  10h
                db    0
                db    0
                db  42h ; B
                db  0Bh
                db    0
                db    0
                db  50h ; P
                db  1Bh
                db    0
                db    0
                db  23h ; #
                db    0
                db    0
                db    0
                db    8
                db  1Ch
                db    0
                db    0
                db 0E9h
                db    1
                db    0
                db    0
                db  78h ; x
                db  1Eh
                db    0
                db    0
                db  0Eh
                db    6
                db    0
                db    0
                db 0E0h
                db  24h ; $
                db    0
                db    0
                db  96h
                db    6
                db    0
                db    0
                db  78h ; x
                db  2Bh ; +
                db    0
                db    0
                db    1
                db    1
                db    0
                db    0
                db  7Fh ; 
                db  2Ch ; ,
                db    0
                db    0
                db  19h
                db  1Eh
                db    0
                db    0
aUnknownExcepti db 'Unknown exception',0 ; DATA XREF: sub_140003B10+4↑o
                align 8
aBadArrayNewLen db 'bad array new length',0 ; DATA XREF: sub_140003A8C+7↑o
                align 20h
; const WCHAR Name
Name:                                   ; DATA XREF: sub_1400035D0+D↑o
                text "UTF-16LE", 'Local\BootProfiler',0
                align 8
; const WCHAR aLocalBootprofi_0
aLocalBootprofi_0:                      ; DATA XREF: sub_1400035D0+35↑o
                text "UTF-16LE", 'Local\BootProfilerCapture',0
                align 20h
aVectorTooLong  db 'vector too long',0  ; DATA XREF: sub_140002DB4+39↑o
                                        ; sub_140002EC4+69↑o ...
off_140005B90   dq offset sub_1400032E0 ; DATA XREF: sub_140003228+2A↑o
                                        ; sub_140003268+E↑o ...
                dq offset sub_140003B10
off_140005BA0   dq offset sub_1400042F0 ; DATA XREF: sub_14000441C+53↑o
                                        ; sub_14000455C:loc_14000459E↑o
                dq offset sub_1400042A0
                dq offset ?file_name@__crt_win32_buffer_debug_info@@QEBAPEBDXZ ; __crt_win32_buffer_debug_info::file_name(void)
                dq offset ?literal_character_lead@?$format_string_parser@_W@__crt_stdio_input@@QEBA_WXZ ; __crt_stdio_input::format_string_parser<wchar_t>::literal_character_lead(void)
                dq offset get_srw_lock
off_140005BC8   dq offset sub_1400042D0 ; DATA XREF: sub_14000441C+5F↑o
                dq offset sub_1400042A0
                dq offset ?file_name@__crt_win32_buffer_debug_info@@QEBAPEBDXZ ; __crt_win32_buffer_debug_info::file_name(void)
                dq offset sub_140001D40
                dq offset get_srw_lock
; const WCHAR aWwlibtDll
aWwlibtDll:                             ; DATA XREF: WinMain+C82↑o
                text "UTF-16LE", 'wwlibt.dll',0
                align 10h
aDc5ccacdA7ac4f:                        ; DATA XREF: sub_140003B24+122↑o
                text "UTF-16LE", '{DC5CCACD-A7AC-4FD3-9F70-9454B5DE5161}',0
                align 20h
; const wchar_t Source
Source:                                 ; DATA XREF: sub_140003B24+95↑o
                                        ; sub_140003B24+CD↑o
                text "UTF-16LE", 'msi.dll',0
; const CHAR aMsigetproductc[]
aMsigetproductc db 'MsiGetProductCodeW',0
                                        ; DATA XREF: sub_140003B24:loc_140003C09↑o
                align 8
; const CHAR aMsiprovidequal[]
aMsiprovidequal db 'MsiProvideQualifiedComponentExW',0
                                        ; DATA XREF: sub_140003B24+F8↑o
                align 10h
a5812c57153f044:                        ; DATA XREF: sub_140003B24+16C↑o
                                        ; sub_140003B24+1BB↑o
                text "UTF-16LE", '{5812C571-53F0-4467-BEFA-0A4F47A9437C}',0
unk_140005CFE   db    0                 ; DATA XREF: sub_140003FB0+11B↑o
                                        ; sub_140003FB0+163↑o
                db    0
aStringTooLong  db 'string too long',0  ; DATA XREF: sub_140004140+2F↑o
; const WCHAR aMso20win32serv
aMso20win32serv:                        ; DATA XREF: sub_1400043EC+16↑o
                text "UTF-16LE", 'mso20win32server.dll',0
                align 20h
aDllname:                               ; DATA XREF: sub_14000441C+66↑o
                                        ; sub_14000455C+55↑o
                text "UTF-16LE", 'DllName',0
aNumretries:                            ; DATA XREF: sub_14000441C+77↑o
                text "UTF-16LE", 'NumRetries',0
                align 8
aMicrosoftShare:                        ; DATA XREF: sub_1400047D8+7D↑o
                text "UTF-16LE", '\Microsoft Shared\Office16\',0
; const WCHAR Value
Value:                                  ; DATA XREF: sub_1400047D8+36↑o
                text "UTF-16LE", 'CommonFilesDir',0
                align 20h
; const WCHAR aSoftwareMicros_2
aSoftwareMicros_2:                      ; DATA XREF: sub_1400047D8+4A↑o
                text "UTF-16LE", 'Software\Microsoft\Windows\CurrentVersion',0
                align 20h
; const WCHAR SubKey
SubKey:                                 ; DATA XREF: sub_140004740+2D↑o
                text "UTF-16LE", 'Software\Microsoft\Office\16.0\Common\FilesPaths',0
                align 8
qword_140005E88 dq 40DFFFC000000000h    ; DATA XREF: sub_140003640+3C↑r
qword_140005E90 dq 43088E6D68B00000h    ; DATA XREF: sub_140003E7C+1C↑r
                align 20h
unk_140005EA0   db    0                 ; DATA XREF: sub_140002430+A↑o
                                        ; sub_140002430+11↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  83h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db  18h
                db    0
                db    0
                db    0
                db  68h ; h
                db  32h ; 2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  10h
                db    0
                db    0
                db    0
                db 0B0h
                db  82h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db  18h
                db    0
                db    0
                db    0
                db  28h ; (
                db  32h ; 2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0D8h
                db  82h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db  18h
                db    0
                db    0
                db    0
                db  8Ch
                db  32h ; 2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; const _ThrowInfo pThrowInfo
pThrowInfo      _ThrowInfo <0, 32C0h, 0, 5F40h> ; DATA XREF: sub_140003A8C+18↑o
                align 20h
                db    3
                db    0
                db    0
                db    0
                db 0A8h
                db  5Eh ; ^
                db    0
                db    0
                db 0D0h
                db  5Eh ; ^
                db    0
                db    0
                db 0F8h
                db  5Eh ; ^
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
;
; Export directory for winword.exe
;
dword_140005F5C dd 0                    ; DATA XREF: HEADER:0000000140000190↑o
                                        ; Characteristics
                dd 667BA6D9h            ; TimeDateStamp: Wed Jun 26 05:27:53 2024
                dw 0                    ; MajorVersion
                dw 0                    ; MinorVersion
                dd rva aWinwordExe      ; Name
                dd 1                    ; Base
                dd 1                    ; NumberOfFunctions
                dd 1                    ; NumberOfNames
                dd rva off_140005F84    ; AddressOfFunctions
                dd rva off_140005F88    ; AddressOfNames
                dd rva word_140005F90   ; AddressOfNameOrdinals
;
; Export Address Table for winword.exe
;
off_140005F84   dd rva DllGetLCID       ; DATA XREF: .rdata:0000000140005F78↑o
                                        ; "MSO.DllGetLCID"
;
; Export Names Table for winword.exe
;
off_140005F88   dd rva aDllgetlcid      ; DATA XREF: .rdata:0000000140005F7C↑o
                                        ; "DllGetLCID"
                align 10h
;
; Export Ordinals Table for winword.exe
;
word_140005F90  dw 0                    ; DATA XREF: .rdata:0000000140005F80↑o
aWinwordExe     db 'winword.exe',0      ; DATA XREF: .rdata:0000000140005F68↑o
aDllgetlcid     db 'DllGetLCID',0       ; DATA XREF: .rdata:off_140005F88↑o
; Exported entry   1. DllGetLCID
                public DllGetLCID
DllGetLCID      db 'MSO.DllGetLCID',0   ; DATA XREF: .rdata:off_140005F84↑o
Mso20Win32Client_dll_import_table dd 1  ; DATA XREF: HEADER:00000001400001F8↑o
                                        ; sub_140001DD9+33↑o
                                        ; Attributes
                dd rva aMso20win32clie  ; "Mso20Win32Client.dll"
                dd rva Mso20Win32Client_dll_handle ; Module handle
                dd rva Mso20Win32Client_16175 ; Delayed Import Address Table
                dd rva Mso20Win32Client_dll_dint ; Delayed Import Name Table
                dd 0                    ; Bound Delayed Import Address Table
                dd 0                    ; Unload Delayed Import Table
                dd 0                    ; Time stamp
                align 40h
aMso20win32clie db 'Mso20Win32Client.dll',0 ; DATA XREF: .rdata:0000000140005FBC↑o
                align 8
Mso20Win32Client_dll_dint dq 8000000000003F2Fh
                                        ; DATA XREF: .rdata:0000000140005FC8↑o
                                        ; Mso20Win32Client.dll delayed import name table
                dq 800000000000D000h
                dq 800000000000B532h
                dq 0
                db 0B8h
                db  62h ; b
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0A8h
                db  62h ; b
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db 0E8h
                db  62h ; b
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  98h
                db  62h ; b
                db    0
                db    0
                db  30h ; 0
                db  50h ; P
                db    0
                db    0
                db  20h
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  84h
                db  62h ; b
                db    0
                db    0
                db  68h ; h
                db  51h ; Q
                db    0
                db    0
                db  30h ; 0
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  70h ; p
                db  62h ; b
                db    0
                db    0
                db  78h ; x
                db  51h ; Q
                db    0
                db    0
                db  88h
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  60h ; `
                db  62h ; b
                db    0
                db    0
                db 0D0h
                db  51h ; Q
                db    0
                db    0
                db 0C0h
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db  62h ; b
                db    0
                db    0
                db    8
                db  52h ; R
                db    0
                db    0
                db 0E0h
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ch
                db  62h ; b
                db    0
                db    0
                db  28h ; (
                db  52h ; R
                db    0
                db    0
                db 0F8h
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FCh
                db  61h ; a
                db    0
                db    0
                db  40h ; @
                db  52h ; R
                db    0
                db    0
                db  18h
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0DCh
                db  61h ; a
                db    0
                db    0
                db  60h ; `
                db  52h ; R
                db    0
                db    0
                db  28h ; (
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0B8h
                db  61h ; a
                db    0
                db    0
                db  70h ; p
                db  52h ; R
                db    0
                db    0
                db 0B8h
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  94h
                db  61h ; a
                db    0
                db    0
                db    0
                db  53h ; S
                db    0
                db    0
                db 0E0h
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  74h ; t
                db  61h ; a
                db    0
                db    0
                db  28h ; (
                db  53h ; S
                db    0
                db    0
                db 0F0h
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  50h ; P
                db  61h ; a
                db    0
                db    0
                db  38h ; 8
                db  53h ; S
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aApiMsWinCrtLoc db 'api-ms-win-crt-locale-l1-1-0.dll',0
                                        ; DATA XREF: .c2r:000000014000B110↓o
                align 4
aApiMsWinCrtMat db 'api-ms-win-crt-math-l1-1-0.dll',0
                                        ; DATA XREF: .c2r:000000014000B0FC↓o
                align 4
aApiMsWinCrtStr db 'api-ms-win-crt-string-l1-1-0.dll',0
                                        ; DATA XREF: .c2r:000000014000B0E8↓o
                align 8
aApiMsWinCrtRun db 'api-ms-win-crt-runtime-l1-1-0.dll',0
                                        ; DATA XREF: .c2r:000000014000B0D4↓o
                align 4
aApiMsWinCrtTim db 'api-ms-win-crt-time-l1-1-0.dll',0
                                        ; DATA XREF: .c2r:000000014000B0C0↓o
                align 4
aApiMsWinCrtStd db 'api-ms-win-crt-stdio-l1-1-0.dll',0
                                        ; DATA XREF: .c2r:000000014000B0AC↓o
aApiMsWinCrtUti db 'api-ms-win-crt-utility-l1-1-0.dll',0
                                        ; DATA XREF: .c2r:000000014000B098↓o
                align 20h
aApiMsWinCrtHea db 'api-ms-win-crt-heap-l1-1-0.dll',0
                                        ; DATA XREF: .c2r:000000014000B084↓o
                align 20h
aMsvcp140Dll    db 'MSVCP140.dll',0     ; DATA XREF: .c2r:000000014000B070↓o
                align 10h
aVcruntime140Dl db 'VCRUNTIME140.dll',0 ; DATA XREF: .c2r:000000014000B05C↓o
                align 4
aVcruntime1401D db 'VCRUNTIME140_1.dll',0 ; DATA XREF: .c2r:000000014000B048↓o
                align 8
aKernel32Dll    db 'KERNEL32.dll',0     ; DATA XREF: .c2r:000000014000B034↓o
                align 8
aAdvapi32Dll    db 'ADVAPI32.dll',0     ; DATA XREF: .c2r:000000014000B020↓o
                align 8
;
; Import names for ADVAPI32.dll
;
off_1400062B8   dq rva word_140006608   ; DATA XREF: .c2r:__IMPORT_DESCRIPTOR_ADVAPI32↓o
                dq rva word_14000661C
                dq rva word_14000662C
                dq rva word_14000663E
                dq rva word_14000664C
                dq 0
;
; Import names for KERNEL32.dll
;
off_1400062E8   dq rva word_14000665C   ; DATA XREF: .c2r:__IMPORT_DESCRIPTOR_KERNEL32↓o
                dq rva word_140006676
                dq rva word_140006686
                dq rva word_14000669C
                dq rva word_1400066B2
                dq rva word_1400066C2
                dq rva word_1400066D2
                dq rva word_1400066E2
                dq rva word_1400066F2
                dq rva word_140006700
                dq rva word_140006710
                dq rva word_140006724
                dq rva word_140006732
                dq rva word_140006748
                dq rva word_140006758
                dq rva word_14000676A
                dq rva word_14000677E
                dq rva word_14000678C
                dq rva word_14000679E
                dq rva word_1400067B0
                dq rva word_1400067CA
                dq rva word_1400067E0
                dq rva word_1400067F6
                dq rva word_14000680A
                dq rva word_140006826
                dq rva word_140006844
                dq rva word_140006858
                dq rva word_14000686C
                dq rva word_140006888
                dq rva word_14000689C
                dq rva word_1400068AC
                dq rva word_1400068C2
                dq rva word_1400068D6
                dq rva word_1400068E8
                dq rva word_1400068FA
                dq rva word_14000690A
                dq rva word_14000691C
                dq rva word_140006936
                dq 0
;
; Import names for VCRUNTIME140_1.dll
;
off_140006420   dq rva word_14000694C   ; DATA XREF: .c2r:__IMPORT_DESCRIPTOR_VCRUNTIME140_1↓o
                dq 0
;
; Import names for VCRUNTIME140.dll
;
off_140006430   dq rva word_140006962   ; DATA XREF: .c2r:__IMPORT_DESCRIPTOR_VCRUNTIME140↓o
                dq rva word_14000696C
                dq rva word_140006976
                dq rva word_140006994
                dq rva word_1400069AA
                dq rva word_1400069C2
                dq rva word_1400069CC
                dq rva word_1400069E4
                dq rva word_1400069FE
                dq rva word_140006A14
                dq 0
;
; Import names for MSVCP140.dll
;
off_140006488   dq rva word_140006A1E   ; DATA XREF: .c2r:__IMPORT_DESCRIPTOR_MSVCP140↓o
                dq rva word_140006A34
                dq rva word_140006A42
                dq rva word_140006A56
                dq rva word_140006A6E
                dq rva word_140006A90
                dq 0
;
; Import names for api-ms-win-crt-heap-l1-1-0.dll
;
off_1400064C0   dq rva word_140006AAA   ; DATA XREF: .c2r:000000014000B078↓o
                dq rva word_140006ABA
                dq rva word_140006AC2
                dq 0
;
; Import names for api-ms-win-crt-utility-l1-1-0.dll
;
off_1400064E0   dq rva word_140006ACC   ; DATA XREF: .c2r:000000014000B08C↓o
                dq rva word_140006AD4
                dq 0
;
; Import names for api-ms-win-crt-stdio-l1-1-0.dll
;
off_1400064F8   dq rva word_140006ADC   ; DATA XREF: .c2r:000000014000B0A0↓o
                dq rva word_140006AEC
                dq rva word_140006AFA
                dq 0
;
; Import names for api-ms-win-crt-time-l1-1-0.dll
;
off_140006518   dq rva word_140006B18   ; DATA XREF: .c2r:000000014000B0B4↓o
                dq 0
;
; Import names for api-ms-win-crt-runtime-l1-1-0.dll
;
off_140006528   dq rva word_140006B22   ; DATA XREF: .c2r:000000014000B0C8↓o
                dq rva word_140006B30
                dq rva word_140006B4C
                dq rva word_140006B58
                dq rva word_140006B86
                dq rva word_140006B90
                dq rva word_140006B9A
                dq rva word_140006BC0
                dq rva word_140006BC8
                dq rva word_140006BE4
                dq rva word_140006BEC
                dq rva word_140006BFA
                dq rva word_140006C06
                dq rva word_140006C2A
                dq rva word_140006C4C
                dq rva word_140006C66
                dq rva word_140006C76
                dq 0
;
; Import names for api-ms-win-crt-string-l1-1-0.dll
;
off_1400065B8   dq rva word_140006C88   ; DATA XREF: .c2r:000000014000B0DC↓o
                dq rva word_140006C94
                dq rva word_140006CA0
                dq rva word_140006CAC
                dq 0
;
; Import names for api-ms-win-crt-math-l1-1-0.dll
;
off_1400065E0   dq rva word_140006CB8   ; DATA XREF: .c2r:000000014000B0F0↓o
                dq 0
;
; Import names for api-ms-win-crt-locale-l1-1-0.dll
;
off_1400065F0   dq rva word_140006CCC   ; DATA XREF: .c2r:000000014000B104↓o
                dq rva word_140006CF4
                dq 0
word_140006608  dw 28Fh                 ; DATA XREF: .rdata:off_1400062B8↑o
                db 'RegQueryValueExW',0
                align 4
word_14000661C  dw 282h                 ; DATA XREF: .rdata:00000001400062C0↑o
                db 'RegOpenKeyExW',0
word_14000662C  dw 29Fh                 ; DATA XREF: .rdata:00000001400062C8↑o
                db 'RegSetValueExW',0
                align 2
word_14000663E  dw 251h                 ; DATA XREF: .rdata:00000001400062D0↑o
                db 'RegCloseKey',0
word_14000664C  dw 277h                 ; DATA XREF: .rdata:00000001400062D8↑o
                db 'RegGetValueW',0
                align 4
word_14000665C  dw 4FDh                 ; DATA XREF: .rdata:off_1400062E8↑o
                db 'RtlLookupFunctionEntry',0
                align 2
word_140006676  dw 0EAh                 ; DATA XREF: .rdata:00000001400062F0↑o
                db 'CreateMutexW',0
                align 2
word_140006686  dw 610h                 ; DATA XREF: .rdata:00000001400062F8↑o
                db 'WaitForSingleObject',0
word_14000669C  dw 237h                 ; DATA XREF: .rdata:0000000140006300↑o
                db 'GetCurrentThreadId',0
                align 2
word_1400066B2  dw 4D5h                 ; DATA XREF: .rdata:0000000140006308↑o
                db 'ReleaseMutex',0
                align 2
word_1400066C2  dw 5BDh                 ; DATA XREF: .rdata:0000000140006310↑o
                db 'SuspendThread',0
word_1400066D2  dw 4F3h                 ; DATA XREF: .rdata:0000000140006318↑o
                db 'ResumeThread',0
                align 2
word_1400066E2  dw 0CEh                 ; DATA XREF: .rdata:0000000140006320↑o
                db 'CreateEventW',0
                align 2
word_1400066F2  dw 94h                  ; DATA XREF: .rdata:0000000140006328↑o
                db 'CloseHandle',0
word_140006700  dw 103h                 ; DATA XREF: .rdata:0000000140006330↑o
                db 'CreateThread',0
                align 10h
word_140006710  dw 31Ah                 ; DATA XREF: .rdata:0000000140006338↑o
                db 'GetThreadContext',0
                align 4
word_140006724  dw 435h                 ; DATA XREF: .rdata:0000000140006340↑o
                db 'OpenThread',0
                align 2
word_140006732  dw 301h                 ; DATA XREF: .rdata:0000000140006348↑o
                db 'GetSystemDirectoryW',0
word_140006748  dw 27Dh                 ; DATA XREF: .rdata:0000000140006350↑o
                db 'GetLastError',0
                align 8
word_140006758  dw 2CDh                 ; DATA XREF: .rdata:0000000140006358↑o
                db 'GetProcAddress',0
                align 2
word_14000676A  dw 295h                 ; DATA XREF: .rdata:0000000140006360↑o
                db 'GetModuleHandleW',0
                align 2
word_14000677E  dw 1C5h                 ; DATA XREF: .rdata:0000000140006368↑o
                db 'FreeLibrary',0
word_14000678C  dw 3E6h                 ; DATA XREF: .rdata:0000000140006370↑o
                db 'LoadLibraryExW',0
                align 2
word_14000679E  dw 3E5h                 ; DATA XREF: .rdata:0000000140006378↑o
                db 'LoadLibraryExA',0
                align 10h
word_1400067B0  dw 30Ah                 ; DATA XREF: .rdata:0000000140006380↑o
                db 'GetSystemTimeAsFileTime',0
word_1400067CA  dw 261h                 ; DATA XREF: .rdata:0000000140006388↑o
                db 'GetFileAttributesW',0
                align 20h
word_1400067E0  dw 294h                 ; DATA XREF: .rdata:0000000140006390↑o
                db 'GetModuleHandleExW',0
                align 2
word_1400067F6  dw 4F5h                 ; DATA XREF: .rdata:0000000140006398↑o
                db 'RtlCaptureContext',0
word_14000680A  dw 5E6h                 ; DATA XREF: .rdata:00000001400063A0↑o
                db 'UnhandledExceptionFilter',0
                align 2
word_140006826  dw 5A4h                 ; DATA XREF: .rdata:00000001400063A8↑o
                db 'SetUnhandledExceptionFilter',0
word_140006844  dw 232h                 ; DATA XREF: .rdata:00000001400063B0↑o
                db 'GetCurrentProcess',0
word_140006858  dw 5C4h                 ; DATA XREF: .rdata:00000001400063B8↑o
                db 'TerminateProcess',0
                align 4
word_14000686C  dw 3A8h                 ; DATA XREF: .rdata:00000001400063C0↑o
                db 'IsProcessorFeaturePresent',0
word_140006888  dw 504h                 ; DATA XREF: .rdata:00000001400063C8↑o
                db 'RtlVirtualUnwind',0
                align 4
word_14000689C  dw 607h                 ; DATA XREF: .rdata:00000001400063D0↑o
                db 'VirtualQuery',0
                align 4
word_1400068AC  dw 38Ah                 ; DATA XREF: .rdata:00000001400063D8↑o
                db 'InitializeSListHead',0
word_1400068C2  dw 3A0h                 ; DATA XREF: .rdata:00000001400063E0↑o
                db 'IsDebuggerPresent',0
word_1400068D6  dw 2F1h                 ; DATA XREF: .rdata:00000001400063E8↑o
                db 'GetStartupInfoW',0
word_1400068E8  dw 487h                 ; DATA XREF: .rdata:00000001400063F0↑o
                db 'RaiseException',0
                align 2
word_1400068FA  dw 304h                 ; DATA XREF: .rdata:00000001400063F8↑o
                db 'GetSystemInfo',0
word_14000690A  dw 605h                 ; DATA XREF: .rdata:0000000140006400↑o
                db 'VirtualProtect',0
                align 4
word_14000691C  dw 470h                 ; DATA XREF: .rdata:0000000140006408↑o
                db 'QueryPerformanceCounter',0
word_140006936  dw 233h                 ; DATA XREF: .rdata:0000000140006410↑o
                db 'GetCurrentProcessId',0
word_14000694C  dw 0                    ; DATA XREF: .rdata:off_140006420↑o
                db '__CxxFrameHandler4',0
                align 2
word_140006962  dw 3Dh                  ; DATA XREF: .rdata:off_140006430↑o
                db 'memmove',0
word_14000696C  dw 3Eh                  ; DATA XREF: .rdata:0000000140006438↑o
                db 'memset',0
                align 2
word_140006976  dw 1Ch                  ; DATA XREF: .rdata:0000000140006440↑o
                db '__current_exception_context',0
word_140006994  dw 1Bh                  ; DATA XREF: .rdata:0000000140006448↑o
                db '__current_exception',0
word_1400069AA  dw 8                    ; DATA XREF: .rdata:0000000140006450↑o
                db '__C_specific_handler',0
                align 2
word_1400069C2  dw 45h                  ; DATA XREF: .rdata:0000000140006458↑o
                db 'wcsrchr',0
word_1400069CC  dw 21h                  ; DATA XREF: .rdata:0000000140006460↑o
                db '__std_exception_copy',0
                align 4
word_1400069E4  dw 22h                  ; DATA XREF: .rdata:0000000140006468↑o
                db '__std_exception_destroy',0
word_1400069FE  dw 1                    ; DATA XREF: .rdata:0000000140006470↑o
                db '_CxxThrowException',0
                align 4
word_140006A14  dw 3Ch                  ; DATA XREF: .rdata:0000000140006478↑o
                db 'memcpy',0
                align 2
word_140006A1E  dw 590h                 ; DATA XREF: .rdata:off_140006488↑o
                db '_Query_perf_counter',0
word_140006A34  dw 5B6h                 ; DATA XREF: .rdata:0000000140006490↑o
                db '_Thrd_sleep',0
word_140006A42  dw 5CCh                 ; DATA XREF: .rdata:0000000140006498↑o
                db '_Xtime_get_ticks',0
                align 2
word_140006A56  dw 591h                 ; DATA XREF: .rdata:00000001400064A0↑o
                db '_Query_perf_frequency',0
word_140006A6E  dw 28Eh                 ; DATA XREF: .rdata:00000001400064A8↑o
                db '?_Xlength_error@std@@YAXPEBD@Z',0
                align 10h
word_140006A90  dw 28Bh                 ; DATA XREF: .rdata:00000001400064B0↑o
                db '?_Xbad_alloc@std@@YAXXZ',0
word_140006AAA  dw 16h                  ; DATA XREF: .rdata:off_1400064C0↑o
                db '_set_new_mode',0
word_140006ABA  dw 18h                  ; DATA XREF: .rdata:00000001400064C8↑o
                db 'free',0
                align 2
word_140006AC2  dw 19h                  ; DATA XREF: .rdata:00000001400064D0↑o
                db 'malloc',0
                align 4
word_140006ACC  dw 1Dh                  ; DATA XREF: .rdata:off_1400064E0↑o
                db 'srand',0
word_140006AD4  dw 1Bh                  ; DATA XREF: .rdata:00000001400064E8↑o
                db 'rand',0
                align 4
word_140006ADC  dw 1                    ; DATA XREF: .rdata:off_1400064F8↑o
                db '__p__commode',0
                align 4
word_140006AEC  dw 54h                  ; DATA XREF: .rdata:0000000140006500↑o
                db '_set_fmode',0
                align 2
word_140006AFA  dw 0Ch                  ; DATA XREF: .rdata:0000000140006508↑o
                db '__stdio_common_vsnwprintf_s',0
word_140006B18  dw 30h                  ; DATA XREF: .rdata:off_140006518↑o
                db '_time64',0
word_140006B22  dw 1Eh                  ; DATA XREF: .rdata:off_140006528↑o
                db '_crt_atexit',0
word_140006B30  dw 34h                  ; DATA XREF: .rdata:0000000140006530↑o
                db '_initialize_onexit_table',0
                align 4
word_140006B4C  dw 67h                  ; DATA XREF: .rdata:0000000140006538↑o
                db 'terminate',0
word_140006B58  dw 3Dh                  ; DATA XREF: .rdata:0000000140006540↑o
                db '_register_thread_local_exe_atexit_callback',0
                align 2
word_140006B86  dw 15h                  ; DATA XREF: .rdata:0000000140006548↑o
                db '_c_exit',0
word_140006B90  dw 16h                  ; DATA XREF: .rdata:0000000140006550↑o
                db '_cexit',0
                align 2
word_140006B9A  dw 39h                  ; DATA XREF: .rdata:0000000140006558↑o
                db '_invalid_parameter_noinfo_noreturn',0
                align 20h
word_140006BC0  dw 23h                  ; DATA XREF: .rdata:0000000140006560↑o
                db '_exit',0
word_140006BC8  dw 3Ch                  ; DATA XREF: .rdata:0000000140006568↑o
                db '_register_onexit_function',0
word_140006BE4  dw 55h                  ; DATA XREF: .rdata:0000000140006570↑o
                db 'exit',0
                align 4
word_140006BEC  dw 37h                  ; DATA XREF: .rdata:0000000140006578↑o
                db '_initterm_e',0
word_140006BFA  dw 36h                  ; DATA XREF: .rdata:0000000140006580↑o
                db '_initterm',0
word_140006C06  dw 2Bh                  ; DATA XREF: .rdata:0000000140006588↑o
                db '_get_narrow_winmain_command_line',0
                align 2
word_140006C2A  dw 33h                  ; DATA XREF: .rdata:0000000140006590↑o
                db '_initialize_narrow_environment',0
                align 4
word_140006C4C  dw 18h                  ; DATA XREF: .rdata:0000000140006598↑o
                db '_configure_narrow_argv',0
                align 2
word_140006C66  dw 42h                  ; DATA XREF: .rdata:00000001400065A0↑o
                db '_set_app_type',0
word_140006C76  dw 40h                  ; DATA XREF: .rdata:00000001400065A8↑o
                db '_seh_filter_exe',0
word_140006C88  dw 0A5h                 ; DATA XREF: .rdata:off_1400065B8↑o
                db 'wcsncat_s',0
word_140006C94  dw 2Ah                  ; DATA XREF: .rdata:00000001400065C0↑o
                db '_stricmp',0
                align 20h
word_140006CA0  dw 0A8h                 ; DATA XREF: .rdata:00000001400065C8↑o
                db 'wcsncpy_s',0
word_140006CAC  dw 90h                  ; DATA XREF: .rdata:00000001400065D0↑o
                db 'strncpy_s',0
word_140006CB8  dw 9                    ; DATA XREF: .rdata:off_1400065E0↑o
                db '__setusermatherr',0
                align 4
word_140006CCC  dw 5                    ; DATA XREF: .rdata:off_1400065F0↑o
                db '__initialize_lconv_for_unsigned_char',0
                align 4
word_140006CF4  dw 8                    ; DATA XREF: .rdata:00000001400065F8↑o
                db '_configthreadlocale',0
                align 4
; Debug Directory entries
dword_140006D0C dd 0                    ; DATA XREF: HEADER:00000001400001C0↑o
                                        ; Characteristics
                dd 667BA6D9h            ; TimeDateStamp: Wed Jun 26 05:27:53 2024
                dw 0                    ; MajorVersion
                dw 0                    ; MinorVersion
                dd 2                    ; Type: IMAGE_DEBUG_TYPE_CODEVIEW
                dd 118h                 ; SizeOfData
                dd rva asc_140006D44    ; AddressOfRawData
                dd 5D44h                ; PointerToRawData
                dd 0                    ; Characteristics
                dd 667BA6D9h            ; TimeDateStamp: Wed Jun 26 05:27:53 2024
                dw 240h                 ; MajorVersion
                dw 8170h                ; MinorVersion
                dd 0Ah                  ; Type: IMAGE_DEBUG_TYPE_RESERVED10
                dd 4                    ; SizeOfData
                dd rva unk_140006E5C    ; AddressOfRawData
                dd 5E5Ch                ; PointerToRawData
; Debug information (IMAGE_DEBUG_TYPE_CODEVIEW)
asc_140006D44   db 'RSDS'               ; DATA XREF: .rdata:0000000140006D20↑o
                                        ; CV signature
                GUID <3FA512F2h, 54FBh, 455Bh, <0AAh, 17h, 5Fh, 7Fh, 93h, 6Ch, 0DDh, \ ; GUID
                      0D8h>>
                dd 2                    ; Age
                text "UTF-8", 'D:\dbs\el\omr\Target\x64\ship\postc2r\x-none\winword.p' ; PdbFileName
                text "UTF-8", 'db',0,'00000000000000000000000000000000000000000000000'
                text "UTF-8", '000000000000000000000000000000000000000000000000000000'
                text "UTF-8", '000000000000000000000000000000000000000000000000000000'
                text "UTF-8", '0000000000000000000000000000000000000000000',0
; Debug information (IMAGE_DEBUG_TYPE_RESERVED10)
unk_140006E5C   db  70h ; p             ; DATA XREF: .rdata:0000000140006D3C↑o
                db  81h
                db    3
                db 0BBh
stru_140006E60  UNWIND_INFO_HDR <19h, 29h, 8, 0>
                                        ; DATA XREF: .rdata:0000000140006E8C↓o
                                        ; .rdata:0000000140006E9C↓o ...
                UNWIND_CODE <18h, 1, 0> ; UWOP_ALLOC_LARGE
                dw 4Fh
                UNWIND_CODE <9, 0, -1>  ; UWOP_PUSH_NONVOL
                UNWIND_CODE <7, 0, -2>  ; UWOP_PUSH_NONVOL
                UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
                dd rva __GSHandlerCheck
                dd rva asc_140000260    ; ".data"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
stru_140006E84  UNWIND_INFO_HDR <21h, 8, 2, 0>
                                        ; DATA XREF: .pdata:000000014000900C↓o
                UNWIND_CODE <8, 4, -4>  ; UWOP_SAVE_NONVOL
                dw 4Eh
                RUNTIME_FUNCTION <rva WinMain, rva loc_14000104C, rva stru_140006E60>
stru_140006E98  UNWIND_INFO_HDR <21h, 0, 0, 0>
                                        ; DATA XREF: .pdata:0000000140009018↓o
                RUNTIME_FUNCTION <rva WinMain, rva loc_14000104C, rva stru_140006E60>
stru_140006EA8  UNWIND_INFO_HDR <1, 14h, 6, 0>
                                        ; DATA XREF: .pdata:0000000140009024↓o
                UNWIND_CODE <14h, 2, -7> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <10h, 0, -2> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <0Eh, 0, 7> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <0Dh, 0, 6> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <0Ch, 0, 5> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <0Bh, 0, 3> ; UWOP_PUSH_NONVOL
stru_140006EB8  UNWIND_INFO_HDR <1, 0Ah, 4, 0>
                                        ; DATA XREF: .rdata:0000000140007030↓o
                                        ; .pdata:0000000140009030↓o ...
                UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
                dw 6
                UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_140006EC4  UNWIND_INFO_HDR <1, 6, 2, 0>
                                        ; DATA XREF: .pdata:000000014000903C↓o
                                        ; .pdata:0000000140009090↓o ...
                UNWIND_CODE <6, 2, 3>   ; UWOP_ALLOC_SMALL
                UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
stru_140006ECC  UNWIND_INFO_HDR <1, 4, 1, 0>
                                        ; DATA XREF: .pdata:0000000140009048↓o
                                        ; .pdata:0000000140009054↓o ...
                UNWIND_CODE <4, 2, 4>   ; UWOP_ALLOC_SMALL
                align 4
stru_140006ED4  UNWIND_INFO_HDR <9, 0Ah, 4, 0>
                                        ; DATA XREF: .pdata:0000000140009060↓o
                UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
                dw 8
                UNWIND_CODE <0Ah, 2, 5> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
                dd rva __C_specific_handler
                dd 2
                C_SCOPE_TABLE <rva loc_1400014B0, rva $LN18, rva loc_140002C7F, \
                               rva $LN18>
                C_SCOPE_TABLE <rva loc_1400015E7, rva loc_1400015F9, \
                               rva loc_140002C7F, rva $LN18>
stru_140006F08  UNWIND_INFO_HDR <1, 0Dh, 4, 0>
                                        ; DATA XREF: .pdata:00000001400090C0↓o
                UNWIND_CODE <0Dh, 4, 3> ; UWOP_SAVE_NONVOL
                dw 0Ah
                UNWIND_CODE <0Dh, 2, 5> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
stru_140006F14  UNWIND_INFO_HDR <1, 7, 2, 0>
                                        ; DATA XREF: .pdata:00000001400090D8↓o
                UNWIND_CODE <7, 1, 0>   ; UWOP_ALLOC_LARGE
                dw 13h
stru_140006F1C  UNWIND_INFO_HDR <1, 0Fh, 6, 0>
                                        ; DATA XREF: .pdata:00000001400090F0↓o
                UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
                dw 6
                UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
                dw 5
                UNWIND_CODE <0Fh, 2, 1> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_140006F2C  UNWIND_INFO_HDR <1, 0, 0, 0>
                                        ; DATA XREF: .pdata:0000000140009108↓o
                                        ; .pdata:0000000140009114↓o ...
stru_140006F30  UNWIND_INFO_HDR <21h, 0, 2, 0>
                                        ; DATA XREF: .pdata:000000014000912C↓o
                UNWIND_CODE <0, 4, -4>  ; UWOP_SAVE_NONVOL
                dw 4Eh
                RUNTIME_FUNCTION <rva WinMain, rva loc_14000104C, rva stru_140006E60>
stru_140006F44  UNWIND_INFO_HDR <21h, 0, 0, 0>
                                        ; DATA XREF: .pdata:0000000140009138↓o
                RUNTIME_FUNCTION <rva WinMain, rva loc_14000104C, rva stru_140006E60>
stru_140006F54  UNWIND_INFO_HDR <1, 18h, 1, 0>
                                        ; DATA XREF: .pdata:0000000140009150↓o
                UNWIND_CODE <18h, 2, -4> ; UWOP_ALLOC_SMALL
                align 4
stru_140006F5C  UNWIND_INFO_HDR <9, 4, 1, 0>
                                        ; DATA XREF: .pdata:000000014000915C↓o
                UNWIND_CODE <4, 2, 2>   ; UWOP_ALLOC_SMALL
                align 4
                dd rva __C_specific_handler
                dd 1
                C_SCOPE_TABLE <rva loc_140001E7F, rva loc_140001F09, \
                               rva loc_140002C9C, rva loc_140001F09>
stru_140006F7C  UNWIND_INFO_HDR <1, 9, 1, 0>
                                        ; DATA XREF: .pdata:000000014000918C↓o
                UNWIND_CODE <9, 2, 6>   ; UWOP_ALLOC_SMALL
                align 4
stru_140006F84  UNWIND_INFO_HDR <1, 8, 1, 0>
                                        ; DATA XREF: .pdata:00000001400091A4↓o
                UNWIND_CODE <8, 2, 4>   ; UWOP_ALLOC_SMALL
                align 4
stru_140006F8C  UNWIND_INFO_HDR <1, 0Ah, 4, 0>
                                        ; DATA XREF: .pdata:00000001400091B0↓o
                UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
                dw 0Dh
                UNWIND_CODE <0Ah, 2, 7> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_140006F98  UNWIND_INFO_HDR <1, 8, 4, 0>
                                        ; DATA XREF: .pdata:00000001400091BC↓o
                UNWIND_CODE <8, 2, 7>   ; UWOP_ALLOC_SMALL
                UNWIND_CODE <4, 0, 7>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <3, 0, 6>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
stru_140006FA4  UNWIND_INFO_HDR <1, 15h, 5, 0>
                                        ; DATA XREF: .pdata:00000001400091C8↓o
                UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
                dw 0BAh
                UNWIND_CODE <15h, 1, 0> ; UWOP_ALLOC_LARGE
                dw 0B8h
                UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
                align 4
stru_140006FB4  UNWIND_INFO_HDR <1, 0Dh, 4, 0>
                                        ; DATA XREF: .pdata:0000000140009210↓o
                UNWIND_CODE <0Dh, 4, 3> ; UWOP_SAVE_NONVOL
                dw 12h
                UNWIND_CODE <0Dh, 2, -1> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_140006FC0  UNWIND_INFO_HDR <1, 0Fh, 6, 0>
                                        ; DATA XREF: .pdata:000000014000921C↓o
                UNWIND_CODE <0Fh, 4, 7> ; UWOP_SAVE_NONVOL
                dw 3
                UNWIND_CODE <0Ah, 4, 6> ; UWOP_SAVE_NONVOL
                dw 2
                UNWIND_CODE <5, 4, 3>   ; UWOP_SAVE_NONVOL
                dw 1
stru_140006FD0  UNWIND_INFO_HDR <1, 10h, 6, 0>
                                        ; DATA XREF: .pdata:0000000140009228↓o
                UNWIND_CODE <10h, 4, 6> ; UWOP_SAVE_NONVOL
                dw 7
                UNWIND_CODE <10h, 4, 3> ; UWOP_SAVE_NONVOL
                dw 6
                UNWIND_CODE <10h, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
stru_140006FE0  UNWIND_INFO_HDR <1, 1Fh, 0Ch, 0>
                                        ; DATA XREF: .pdata:0000000140009240↓o
                UNWIND_CODE <1Fh, 4, 7> ; UWOP_SAVE_NONVOL
                dw 17h
                UNWIND_CODE <1Fh, 4, 6> ; UWOP_SAVE_NONVOL
                dw 16h
                UNWIND_CODE <1Fh, 4, 3> ; UWOP_SAVE_NONVOL
                dw 15h
                UNWIND_CODE <1Fh, 2, -3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <18h, 0, -1> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <16h, 0, -2> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <14h, 0, -3> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <12h, 0, -4> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <10h, 0, 5> ; UWOP_PUSH_NONVOL
stru_140006FFC  UNWIND_INFO_HDR <1, 2, 1, 0>
                                        ; DATA XREF: .pdata:0000000140009258↓o
                UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
                align 4
stru_140007004  UNWIND_INFO_HDR <1, 19h, 0Ah, 0>
                                        ; DATA XREF: .pdata:0000000140009264↓o
                UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
                dw 9
                UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
                dw 8
                UNWIND_CODE <19h, 4, 5> ; UWOP_SAVE_NONVOL
                dw 7
                UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
                dw 6
                UNWIND_CODE <19h, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <15h, 0, -2> ; UWOP_PUSH_NONVOL
stru_14000701C  UNWIND_INFO_HDR <1, 6, 2, 0>
                                        ; DATA XREF: .pdata:0000000140009270↓o
                UNWIND_CODE <6, 2, 3>   ; UWOP_ALLOC_SMALL
                UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
stru_140007024  UNWIND_INFO_HDR <1, 2, 1, 0>
                                        ; DATA XREF: .pdata:000000014000927C↓o
                UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
                align 4
stru_14000702C  UNWIND_INFO_HDR <21h, 0, 0, 0>
                                        ; DATA XREF: .pdata:0000000140009288↓o
                RUNTIME_FUNCTION <rva sub_140001340, rva algn_140001381, \
                                  rva stru_140006EB8>
stru_14000703C  UNWIND_INFO_HDR <1, 1Eh, 8, 0>
                                        ; DATA XREF: .rdata:0000000140007058↓o
                                        ; .rdata:0000000140007068↓o ...
                UNWIND_CODE <1Eh, 4, -2> ; UWOP_SAVE_NONVOL
                dw 9
                UNWIND_CODE <1Eh, 4, 6> ; UWOP_SAVE_NONVOL
                dw 8
                UNWIND_CODE <1Eh, 4, 3> ; UWOP_SAVE_NONVOL
                dw 7
                UNWIND_CODE <1Eh, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <1Ah, 0, -1> ; UWOP_PUSH_NONVOL
stru_140007050  UNWIND_INFO_HDR <21h, 5, 2, 0>
                                        ; DATA XREF: .pdata:00000001400092AC↓o
                UNWIND_CODE <5, 4, 7>   ; UWOP_SAVE_NONVOL
                dw 6
                RUNTIME_FUNCTION <rva sub_140002DB4, rva loc_140002E02, \
                                  rva stru_14000703C>
stru_140007064  UNWIND_INFO_HDR <21h, 0, 0, 0>
                                        ; DATA XREF: .pdata:00000001400092B8↓o
                RUNTIME_FUNCTION <rva sub_140002DB4, rva loc_140002E02, \
                                  rva stru_14000703C>
stru_140007074  UNWIND_INFO_HDR <1, 0Fh, 4, 0>
                                        ; DATA XREF: .pdata:00000001400092D0↓o
                UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
                dw 6
                UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_140007080  UNWIND_INFO_HDR <19h, 14h, 8, 0>
                                        ; DATA XREF: .pdata:00000001400092DC↓o
                UNWIND_CODE <14h, 2, 5> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <10h, 0, -1> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <0Eh, 0, -2> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <0Ch, 0, -3> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <0Ah, 0, -4> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <6, 0, 3>   ; UWOP_PUSH_NONVOL
                dd rva __CxxFrameHandler4
                dd rva byte_1400072BC
stru_14000709C  UNWIND_INFO_HDR <1, 0Ah, 2, 0>
                                        ; DATA XREF: .pdata:00000001400092E8↓o
                                        ; .pdata:0000000140009300↓o
                UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
stru_1400070A4  UNWIND_INFO_HDR <19h, 18h, 8, 0>
                                        ; DATA XREF: .pdata:00000001400092F4↓o
                UNWIND_CODE <18h, 4, 6> ; UWOP_SAVE_NONVOL
                dw 0Bh
                UNWIND_CODE <18h, 4, 3> ; UWOP_SAVE_NONVOL
                dw 8
                UNWIND_CODE <18h, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <14h, 0, -1> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <12h, 0, -2> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
                dd rva __CxxFrameHandler4
                dd rva byte_1400072E8
stru_1400070C0  UNWIND_INFO_HDR <19h, 14h, 8, 0>
                                        ; DATA XREF: .pdata:0000000140009354↓o
                UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
                dw 0Ch
                UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
                dw 0Bh
                UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
                dw 0Ah
                UNWIND_CODE <14h, 2, 7> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
                dd rva __CxxFrameHandler4
                dd rva byte_140007314
stru_1400070DC  UNWIND_INFO_HDR <19h, 25h, 9, 0>
                                        ; DATA XREF: .pdata:0000000140009360↓o
                UNWIND_CODE <13h, 4, 3> ; UWOP_SAVE_NONVOL
                dw 33h
                UNWIND_CODE <13h, 1, 0> ; UWOP_ALLOC_LARGE
                dw 2Ah
                UNWIND_CODE <0Ch, 0, -1> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <0Ah, 0, -2> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
                align 4
                dd rva __GSHandlerCheck
                dd rva dword_140000140
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
stru_140007104  UNWIND_INFO_HDR <1, 0Ah, 2, 0>
                                        ; DATA XREF: .pdata:0000000140009378↓o
                                        ; .pdata:0000000140009390↓o
                UNWIND_CODE <0Ah, 2, 5> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <6, 0, 3>   ; UWOP_PUSH_NONVOL
stru_14000710C  UNWIND_INFO_HDR <19h, 1Bh, 3, 0>
                                        ; DATA XREF: .pdata:0000000140009384↓o
                UNWIND_CODE <9, 1, 0>   ; UWOP_ALLOC_LARGE
                dw 4Ah
                UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
                align 4
                dd rva __GSHandlerCheck
                dd rva dword_140000240
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
stru_140007128  UNWIND_INFO_HDR <19h, 21h, 7, 0>
                                        ; DATA XREF: .pdata:000000014000939C↓o
                UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
                dw 0A8h
                UNWIND_CODE <0Fh, 1, 0> ; UWOP_ALLOC_LARGE
                dw 0A2h
                UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
                align 4
                dd rva __GSHandlerCheck_EH4
                dd rva byte_140007320
                db    3
                db    5
                db    0
                db    0
stru_140007148  UNWIND_INFO_HDR <1, 14h, 8, 0>
                                        ; DATA XREF: .pdata:00000001400093B4↓o
                                        ; .pdata:0000000140009498↓o
                UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
                dw 8
                UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
                dw 7
                UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
                dw 6
                UNWIND_CODE <14h, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_14000715C  UNWIND_INFO_HDR <1, 15h, 8, 0>
                                        ; DATA XREF: .pdata:00000001400093C0↓o
                UNWIND_CODE <15h, 4, 7> ; UWOP_SAVE_NONVOL
                dw 8
                UNWIND_CODE <15h, 4, 6> ; UWOP_SAVE_NONVOL
                dw 7
                UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
                dw 6
                UNWIND_CODE <15h, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <11h, 0, -2> ; UWOP_PUSH_NONVOL
stru_140007170  UNWIND_INFO_HDR <1, 4, 1, 0>
                                        ; DATA XREF: .pdata:00000001400093CC↓o
                UNWIND_CODE <4, 2, -8>  ; UWOP_ALLOC_SMALL
                align 4
stru_140007178  UNWIND_INFO_HDR <19h, 29h, 9, 0>
                                        ; DATA XREF: .pdata:00000001400093E4↓o
                UNWIND_CODE <17h, 4, 6> ; UWOP_SAVE_NONVOL
                dw 0A0h
                UNWIND_CODE <17h, 4, 5> ; UWOP_SAVE_NONVOL
                dw 9Fh
                UNWIND_CODE <17h, 4, 3> ; UWOP_SAVE_NONVOL
                dw 9Eh
                UNWIND_CODE <17h, 1, 0> ; UWOP_ALLOC_LARGE
                dw 9Ch
                UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
                align 4
                dd rva __GSHandlerCheck_EH4
                dd rva byte_14000732C
                db 0D3h
                db    4
                db    0
                db    0
stru_14000719C  UNWIND_INFO_HDR <1, 0Fh, 6, 0>
                                        ; DATA XREF: .pdata:00000001400093F0↓o
                                        ; .pdata:0000000140009450↓o ...
                UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
                dw 7
                UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
                dw 6
                UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_1400071AC  UNWIND_INFO_HDR <1, 0Ah, 4, 0>
                                        ; DATA XREF: .pdata:00000001400093FC↓o
                UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
                dw 7
                UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_1400071B8  UNWIND_INFO_HDR <19h, 19h, 4, 0>
                                        ; DATA XREF: .pdata:0000000140009414↓o
                UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
                dw 0Ch
                UNWIND_CODE <0Ah, 2, -7> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
                dd rva __GSHandlerCheck
                dd rva byte_140000040
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
stru_1400071D4  UNWIND_INFO_HDR <19h, 10h, 8, 0>
                                        ; DATA XREF: .pdata:0000000140009420↓o
                UNWIND_CODE <10h, 4, 3> ; UWOP_SAVE_NONVOL
                dw 0Ah
                UNWIND_CODE <10h, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <0Ch, 0, -1> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <0Ah, 0, -2> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
                UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
                dd rva __CxxFrameHandler4
                dd rva byte_140007338
stru_1400071F0  UNWIND_INFO_HDR <1, 98h, 0Ch, 0>
                                        ; DATA XREF: .pdata:000000014000942C↓o
                UNWIND_CODE <98h, 4, 6> ; UWOP_SAVE_NONVOL
                dw 9
                UNWIND_CODE <4Bh, 4, -4> ; UWOP_SAVE_NONVOL
                dw 0Ah
                UNWIND_CODE <42h, 4, 5> ; UWOP_SAVE_NONVOL
                dw 8
                UNWIND_CODE <0Eh, 4, 3> ; UWOP_SAVE_NONVOL
                dw 0Bh
                UNWIND_CODE <0Eh, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <0Ah, 0, -1> ; UWOP_PUSH_NONVOL
                UNWIND_CODE <8, 0, -2>  ; UWOP_PUSH_NONVOL
                UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_14000720C  UNWIND_INFO_HDR <19h, 0Fh, 6, 0>
                                        ; DATA XREF: .pdata:000000014000945C↓o
                UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
                dw 7
                UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
                dw 6
                UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
                UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
                dd rva __CxxFrameHandler4
                dd rva byte_140007344
stru_140007224  UNWIND_INFO_HDR <19h, 1Fh, 5, 0>
                                        ; DATA XREF: .pdata:0000000140009474↓o
                UNWIND_CODE <0Dh, 4, 3> ; UWOP_SAVE_NONVOL
                dw 1Ah
                UNWIND_CODE <0Dh, 1, 0> ; UWOP_ALLOC_LARGE
                dw 18h
                UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
                align 4
                dd rva __GSHandlerCheck
                dd rva byte_140000040+70h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
stru_140007244  UNWIND_INFO_HDR <19h, 1Bh, 3, 0>
                                        ; DATA XREF: .pdata:0000000140009480↓o
                UNWIND_CODE <9, 1, 0>   ; UWOP_ALLOC_LARGE
                dw 14h
                UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
                align 4
                dd rva __GSHandlerCheck
                dd rva byte_140000040+50h
                align 20h
stru_140007260  UNWIND_INFO_HDR <19h, 1Bh, 3, 0>
                                        ; DATA XREF: .pdata:00000001400094A4↓o
                UNWIND_CODE <9, 1, 0>   ; UWOP_ALLOC_LARGE
                dw 4Eh
                UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
                align 4
                dd rva __GSHandlerCheck
                dd rva asc_140000260    ; ".data"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
stru_14000727C  UNWIND_INFO_HDR <19h, 24h, 7, 0>
                                        ; DATA XREF: .pdata:00000001400094B0↓o
                UNWIND_CODE <12h, 4, 6> ; UWOP_SAVE_NONVOL
                dw 52h
                UNWIND_CODE <12h, 4, 3> ; UWOP_SAVE_NONVOL
                dw 51h
                UNWIND_CODE <12h, 1, 0> ; UWOP_ALLOC_LARGE
                dw 4Eh
                UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
                align 4
                dd rva __GSHandlerCheck
                dd rva asc_140000260    ; ".data"
                align 20h
stru_1400072A0  UNWIND_INFO_HDR <19h, 1Bh, 3, 0>
                                        ; DATA XREF: .pdata:00000001400094BC↓o
                UNWIND_CODE <9, 1, 0>   ; UWOP_ALLOC_LARGE
                dw 48h
                UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
                align 4
                dd rva __GSHandlerCheck
                dd rva word_140000230
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
byte_1400072BC  db 38h                  ; DATA XREF: .rdata:0000000140007098↑o
                                        ; FuncInfo4
                dd rva byte_1400072CC   ; unwind map
                dd rva byte_1400072D8   ; try block map
                dd rva byte_1400072E0   ; ip2state map
                db    0
                db    0
                db    0
byte_1400072CC  db 4                    ; DATA XREF: .rdata:00000001400072BD↑o
                                        ; num unwind entries: 2
                db 8                    ; funclet type: 0
                db 10h                  ; funclet type: 0
                db    0
byte_1400072D0  db 2                    ; DATA XREF: .rdata:00000001400072DC↓o
                                        ; num_handlers: 1
                db 9
                db 80h                  ; adjectives bitfield
                dd rva loc_14000302F    ; catch code
                db    0
byte_1400072D8  db 2                    ; DATA XREF: .rdata:00000001400072C1↑o
                                        ; num_tryblocks: 1
                db 0                    ; lowest state index of try
                db 0                    ; highest state index of try
                db 2                    ; highest state index of any associated catch
                dd rva byte_1400072D0   ; list of handlers
byte_1400072E0  db 6                    ; DATA XREF: .rdata:00000001400072C5↑o
                                        ; num_ip2state entries: 3
                db 0                    ; ea 0x140002EC4
                db 0                    ; state -1
                db 0A1h, 3              ; ea 0x140002FAC
                db 2                    ; state 0
                db 0BEh                 ; ea 0x14000300B
                db 0                    ; state -1
byte_1400072E8  db 38h                  ; DATA XREF: .rdata:00000001400070BC↑o
                                        ; FuncInfo4
                dd rva byte_1400072F8   ; unwind map
                dd rva byte_140007304   ; try block map
                dd rva byte_14000730C   ; ip2state map
                db    0
                db    0
                db    0
byte_1400072F8  db 4                    ; DATA XREF: .rdata:00000001400072E9↑o
                                        ; num unwind entries: 2
                db 8                    ; funclet type: 0
                db 10h                  ; funclet type: 0
                db    0
byte_1400072FC  db 2                    ; DATA XREF: .rdata:0000000140007308↓o
                                        ; num_handlers: 1
                db 9
                db 80h                  ; adjectives bitfield
                dd rva loc_14000314F    ; catch code
                db    0
byte_140007304  db 2                    ; DATA XREF: .rdata:00000001400072ED↑o
                                        ; num_tryblocks: 1
                db 0                    ; lowest state index of try
                db 0                    ; highest state index of try
                db 2                    ; highest state index of any associated catch
                dd rva byte_1400072FC   ; list of handlers
byte_14000730C  db 4                    ; DATA XREF: .rdata:00000001400072F1↑o
                                        ; num_ip2state entries: 2
                db 0                    ; ea 0x14000306C
                db 0                    ; state -1
                db 81h, 2               ; ea 0x14000310C
                db 2                    ; state 0
                db    0
                db    0
byte_140007314  db 60h                  ; DATA XREF: .rdata:00000001400070D8↑o
                                        ; FuncInfo4
                dd rva byte_14000731C   ; ip2state map
                db    0
                db    0
                db    0
byte_14000731C  db 2                    ; DATA XREF: .rdata:0000000140007315↑o
                                        ; num_ip2state entries: 1
                db 0                    ; ea 0x140003320
                db 0                    ; state -1
                db    0
byte_140007320  db 60h                  ; DATA XREF: .rdata:0000000140007140↑o
                                        ; FuncInfo4
                dd rva byte_140007328   ; ip2state map
                db    0
                db    0
                db    0
byte_140007328  db 2                    ; DATA XREF: .rdata:0000000140007321↑o
                                        ; num_ip2state entries: 1
                db 0                    ; ea 0x1400037E0
                db 0                    ; state -1
                db    0
byte_14000732C  db 60h                  ; DATA XREF: .rdata:0000000140007194↑o
                                        ; FuncInfo4
                dd rva byte_140007334   ; ip2state map
                db    0
                db    0
                db    0
byte_140007334  db 2                    ; DATA XREF: .rdata:000000014000732D↑o
                                        ; num_ip2state entries: 1
                db 0                    ; ea 0x140003B24
                db 0                    ; state -1
                db    0
byte_140007338  db 60h                  ; DATA XREF: .rdata:00000001400071EC↑o
                                        ; FuncInfo4
                dd rva byte_140007340   ; ip2state map
                db    0
                db    0
                db    0
byte_140007340  db 2                    ; DATA XREF: .rdata:0000000140007339↑o
                                        ; num_ip2state entries: 1
                db 0                    ; ea 0x140003FB0
                db 0                    ; state -1
                db    0
byte_140007344  db 60h                  ; DATA XREF: .rdata:0000000140007220↑o
                                        ; FuncInfo4
                dd rva byte_14000734C   ; ip2state map
                db    0
                db    0
                db    0
byte_14000734C  db 2                    ; DATA XREF: .rdata:0000000140007345↑o
                                        ; num_ip2state entries: 1
                db 0                    ; ea 0x14000435C
                db 0                    ; state -1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                align 1000h
_rdata          ends

; Section 3. (virtual address 00008000)
; Virtual size                  : 00000A60 (   2656.)
; Section size in file          : 00000400 (   1024.)
; Offset to raw data for section: 00006400
; Flags C0000040: Data Readable Writable
; Alignment     : default
; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
_data           segment para public 'DATA' use64
                assume cs:_data
                ;org 140008000h
dword_140008000 dd 1                    ; DATA XREF: HEADER:000000014000026C↑o
                                        ; __scrt_is_user_matherr_present+2↑r
                align 40h
; uintptr_t _security_cookie
__security_cookie dq 2B992DDFA232h      ; DATA XREF: WinMain+18↑r
                                        ; __security_init_cookie+D↑r ...
                align 40h
qword_140008080 dq 0FFFFD466D2205DCDh   ; DATA XREF: __security_init_cookie+9F↑w
                                        ; __report_gsfailure+B5↑r
dword_140008088 dd 1                    ; DATA XREF: __isa_available_init:loc_140001A72↑w
                                        ; __isa_available_init+109↑w ...
dword_14000808C dd 2                    ; DATA XREF: __isa_available_init+F8↑w
                                        ; __isa_available_init+115↑w ...
qword_140008090 dq 80000h               ; DATA XREF: __isa_available_init+66↑w
qword_140008098 dq 2000000h             ; DATA XREF: __isa_available_init+59↑w
dword_1400080A0 dd 1                    ; DATA XREF: __scrt_is_ucrt_dll_in_use+2↑r
                align 8
dword_1400080A8 dd 0                    ; DATA XREF: __scrt_common_main_seh(void)+2B↑r
                                        ; __scrt_common_main_seh(void)+3E↑w ...
                align 10h
qword_1400080B0 dq 0                    ; DATA XREF: __scrt_acquire_startup_lock+23↑w
                                        ; __scrt_release_startup_lock+17↑w
byte_1400080B8  db 0                    ; DATA XREF: __scrt_initialize_onexit_tables+6↑r
                                        ; __scrt_initialize_onexit_tables:loc_140001719↑w
                align 20h
; _onexit_table_t Table
Table           _onexit_table_t <0>     ; DATA XREF: __scrt_initialize_onexit_tables+23↑o
                                        ; __scrt_initialize_onexit_tables+53↑w ...
; _onexit_table_t stru_1400080D8
stru_1400080D8  _onexit_table_t <0>     ; DATA XREF: __scrt_initialize_onexit_tables+33↑o
                                        ; __scrt_initialize_onexit_tables+62↑w
unk_1400080F0   db    0                 ; DATA XREF: sub_140001874↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_140008100   db    0                 ; DATA XREF: sub_1400018B0↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
dword_140008108 dd 0                    ; DATA XREF: __isa_available_init:loc_140001A24↑r
                                        ; __isa_available_init+AB↑w ...
                align 10h
unk_140008110   db    0                 ; DATA XREF: sub_1400018E8↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_140008118   db    0                 ; DATA XREF: sub_1400018E0↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_140008120   db    0                 ; DATA XREF: sub_140001330↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
qword_140008128 dq 0                    ; DATA XREF: sub_140001010↑o
                                        ; WinMain+27B↑r
unk_140008130   db    0                 ; DATA XREF: sub_140004654+12↑o
                                        ; sub_1400046A4+14↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aMso20win32clie_0 ; "mso20win32client.dll"
                dq offset aMso20win32clie_1 ; "mso20win32client.dll"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aMso30win32clie_0 ; "mso30win32client.dll"
                dq offset aMso30win32clie ; "mso30win32client.dll"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aMso40uiwin32cl_0 ; "mso40uiwin32client.dll"
                dq offset aMso40uiwin32cl ; "mso40uiwin32client.dll"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    3
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aMso50win32clie_0 ; "mso50win32client.dll"
                dq offset aMso50win32clie ; "mso50win32client.dll"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    4
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aMso98win32clie_0 ; "mso98win32client.dll"
                dq offset aMso98win32clie ; "mso98win32client.dll"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    5
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset aMsoDll_0     ; "mso.dll"
                dq offset aMsoDll       ; "mso.dll"
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_1400082B0   dq offset off_140005770 ; DATA XREF: sub_140004654+19↑o
                                        ; sub_1400046A4+21↑o
                align 20h
aAvbadAllocStd  db '.?AVbad_alloc@std@@',0
                align 8
                dq offset off_140005770
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  2Eh ; .
                db  3Fh ; ?
                db  41h ; A
                db  56h ; V
                db  65h ; e
                db  78h ; x
                db  63h ; c
                db  65h ; e
                db  70h ; p
                db  74h ; t
                db  69h ; i
                db  6Fh ; o
                db  6Eh ; n
                db  40h ; @
                db  73h ; s
                db  74h ; t
                db  64h ; d
                db  40h ; @
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                dq offset off_140005770
                align 10h
aAvbadArrayNewL db '.?AVbad_array_new_length@std@@',0
                align 10h
                dq offset off_140005770
                align 20h
aAvtypeInfo     db '.?AVtype_info@@',0
off_140008350   dq offset sub_140004A50 ; DATA XREF: sub_140002890:loc_14000297D↑r
                                        ; sub_140002890+113↑r ...
off_140008358   dq offset sub_140003FB0 ; DATA XREF: sub_140002890+15D↑r
                                        ; sub_140002890+23B↑r
Mso20Win32Client_dll_handle dq 0        ; DATA XREF: .rdata:0000000140005FC0↑o
byte_140008368  db 0                    ; DATA XREF: __scrt_initialize_crt+8↑w
                                        ; __scrt_uninitialize_crt+6↑r
                align 10h
dword_140008370 dd 0                    ; DATA XREF: __report_gsfailure+61↑w
                                        ; __report_securityfailure+55↑w ...
dword_140008374 dd 0                    ; DATA XREF: __report_gsfailure+6B↑w
                                        ; __report_securityfailure+5F↑w
                align 20h
qword_140008380 dq 0                    ; DATA XREF: __report_gsfailure+4E↑w
                                        ; __report_securityfailure+4E↑w
dword_140008388 dd 0                    ; DATA XREF: __report_gsfailure+75↑w
                                        ; __report_securityfailure+69↑w
                align 10h
unk_140008390   db    0                 ; DATA XREF: __report_gsfailure+88↑o
                                        ; __report_securityfailure+7C↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
; struct _CONTEXT ContextRecord
ContextRecord   _CONTEXT <?>            ; DATA XREF: __report_gsfailure:loc_140001FCF↑o
                                        ; __report_securityfailure:loc_1400020BF↑o ...
dword_1400088E0 dd ?                    ; DATA XREF: sub_140002224↑w
                align 8
qword_1400088E8 dq ?                    ; DATA XREF: sub_14000258C+A↑r
                                        ; sub_14000258C+74↑w
qword_1400088F0 dq ?                    ; DATA XREF: sub_1400024E0+24↑r
                                        ; sub_14000258C+56↑w ...
qword_1400088F8 dq ?                    ; DATA XREF: sub_1400024E0+7F↑r
                                        ; sub_14000258C+6B↑w ...
qword_140008900 dq ?                    ; DATA XREF: sub_1400024E0+2B↑o
                                        ; sub_1400024E0:loc_14000251C↑r ...
dword_140008908 dd ?                    ; DATA XREF: sub_1400024E0:loc_140002533↑r
                                        ; sub_1400024E0+5B↑w ...
; DWORD flNewProtect
flNewProtect    dd ?                    ; DATA XREF: sub_1400024E0+65↑o
                                        ; sub_1400027F0+54↑r
dword_140008910 dd ?                    ; DATA XREF: sub_140002760:loc_140002792↑r
                                        ; sub_140002760+43↑w
                align 20h
; HANDLE hMutex
hMutex          dq ?                    ; DATA XREF: WinMain+BFE↑o
                                        ; WinMain:loc_140001C6D↑r ...
; HANDLE hHandle
hHandle         dq ?                    ; DATA XREF: WinMain+C31↑w
                                        ; StartAddress+1A↑r ...
; HANDLE qword_140008930
qword_140008930 dq ?                    ; DATA XREF: StartAddress+58↑r
                                        ; StartAddress:loc_1400033E9↑r
dword_140008938 dd ?                    ; DATA XREF: StartAddress+50↑w
                align 20h
unk_140008940   db    ? ;               ; DATA XREF: StartAddress+B8↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
qword_140008948 dq ?                    ; DATA XREF: StartAddress+6D↑r
                                        ; StartAddress+AB↑w
qword_140008950 dq ?                    ; DATA XREF: StartAddress+79↑r
dword_140008958 dd ?                    ; DATA XREF: WinMain+C1F↑w
                align 20h
dword_140008960 dd ?                    ; DATA XREF: sub_140003640+71↑o
                                        ; sub_140003640+84↑w
dword_140008964 dd ?                    ; DATA XREF: sub_140003640+4D↑w
dword_140008968 dd ?                    ; DATA XREF: sub_140003640+5C↑w
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
qword_140008978 dq ?                    ; DATA XREF: sub_140003FB0:loc_140003FD5↑r
dword_140008980 dd ?                    ; DATA XREF: sub_140003FB0+1C↑w
dword_140008984 dd ?                    ; DATA XREF: sub_140003FB0+15A↑w
dword_140008988 dd ?                    ; DATA XREF: sub_140003FB0+112↑w
; char byte_14000898C[100]
byte_14000898C  db 64h dup(?)           ; DATA XREF: sub_140003FB0+17A↑o
; char Destination[100]
Destination     db 64h dup(?)           ; DATA XREF: sub_140003FB0+130↑o
dword_140008A54 dd ?                    ; DATA XREF: sub_1400048B4+B1↑w
                                        ; sub_1400048B4+C3↑w ...
dword_140008A58 dd ?                    ; DATA XREF: sub_1400048B4:loc_14000495A↑w
                                        ; sub_14000499C+68↑r ...
dword_140008A5C dd ?                    ; DATA XREF: sub_1400048B4:loc_140004940↑w
                                        ; sub_14000499C+5B↑r ...
                align 800h
_data           ends

; Section 4. (virtual address 00009000)
; Virtual size                  : 000004E0 (   1248.)
; Section size in file          : 00000600 (   1536.)
; Offset to raw data for section: 00006800
; Flags 40000040: Data Readable
; Alignment     : default
; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
_pdata          segment para public 'DATA' use64
                assume cs:_pdata
                ;org 140009000h
ExceptionDir    RUNTIME_FUNCTION <rva WinMain, rva loc_14000104C, rva stru_140006E60>
                                        ; DATA XREF: HEADER:00000001400001A8↑o
                                        ; HEADER:0000000140000294↑o
                RUNTIME_FUNCTION <rva loc_14000104C, rva loc_140001210, \
                                  rva stru_140006E84>
                RUNTIME_FUNCTION <rva loc_140001210, rva algn_1400012BE, \
                                  rva stru_140006E98>
                RUNTIME_FUNCTION <rva sub_1400012C0, rva algn_140001326, \
                                  rva stru_140006EA8>
                RUNTIME_FUNCTION <rva sub_140001340, rva algn_140001381, \
                                  rva stru_140006EB8>
                RUNTIME_FUNCTION <rva ?pre_c_initialization@@YAHXZ, \ ; pre_c_initialization(void)
                                  rva algn_140001456, rva stru_140006EC4>
                RUNTIME_FUNCTION <rva ?post_pgo_initialization@@YAHXZ, \ ; post_pgo_initialization(void)
                                  rva ?pre_cpp_initialization@@YAXXZ, \ ; pre_cpp_initialization(void)
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva ?pre_cpp_initialization@@YAXXZ, \ ; pre_cpp_initialization(void)
                                  rva algn_140001489, rva stru_140006ECC>
                RUNTIME_FUNCTION <rva ?__scrt_common_main_seh@@YAHXZ, \ ; __scrt_common_main_seh(void)
                                  rva algn_140001601, rva stru_140006ED4>
                RUNTIME_FUNCTION <rva start, rva algn_140001622, rva stru_140006ECC>
                RUNTIME_FUNCTION <rva __scrt_acquire_startup_lock, rva algn_14000166A,\
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva __scrt_initialize_crt, rva algn_1400016A6, \
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva __scrt_initialize_onexit_tables, \
                                  rva algn_140001733, rva stru_140006EC4>
                RUNTIME_FUNCTION <rva __scrt_release_startup_lock, rva algn_140001758,\
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva _onexit, rva algn_14000179A, rva stru_140006EC4>
                RUNTIME_FUNCTION <rva atexit, rva algn_1400017B7, rva stru_140006ECC>
                RUNTIME_FUNCTION <rva __security_init_cookie, \ ; charNode::raw_length(void)
                                  rva ?raw_length@charNode@@UEBAHXZ, \
                                  rva stru_140006F08>
                RUNTIME_FUNCTION <rva __scrt_initialize_default_local_stdio_options, \
                                  rva algn_1400018D3, rva stru_140006ECC>
                RUNTIME_FUNCTION <rva __scrt_get_show_window_mode, rva algn_14000192A,\
                                  rva stru_140006F14>
                RUNTIME_FUNCTION <rva sub_140001948, rva __isa_available_init, \
                                  rva stru_140006EB8>
                RUNTIME_FUNCTION <rva __isa_available_init, \
                                  rva __scrt_is_ucrt_dll_in_use, rva stru_140006F1C>
                RUNTIME_FUNCTION <rva sub_140001B50, rva _set_app_type, \
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva _guard_dispatch_icall_nop, rva algn_140001BD3, \
                                  rva stru_140006F2C>
                RUNTIME_FUNCTION <rva __security_check_cookie, rva algn_140001BFF, \
                                  rva stru_140006F2C>
                RUNTIME_FUNCTION <rva _guard_xfg_dispatch_icall_nop, \
                                  rva algn_140001C07, rva stru_140006F2C>
                RUNTIME_FUNCTION <rva loc_140001C08, rva loc_140001C89, \
                                  rva stru_140006F30>
                RUNTIME_FUNCTION <rva loc_140001C89, rva algn_140001D34, \
                                  rva stru_140006F44>
                RUNTIME_FUNCTION <rva sub_140001D80, rva sub_140001DD9, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva sub_140001DD9, rva loc_140001E51, \
                                  rva stru_140006F54>
                RUNTIME_FUNCTION <rva __scrt_is_nonwritable_in_current_image, \
                                  rva __scrt_uninitialize_crt, rva stru_140006F5C>
                RUNTIME_FUNCTION <rva __scrt_uninitialize_crt, rva algn_140001F39, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva sub_140001F40, rva algn_140001F6B, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva __raise_securityfailure, rva byte_140001FA0, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva __report_gsfailure, rva algn_140002085, \
                                  rva stru_140006F7C>
                RUNTIME_FUNCTION <rva sub_140002088, rva algn_14000209F, \
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva __report_securityfailure, rva algn_14000213F, \
                                  rva stru_140006F84>
                RUNTIME_FUNCTION <rva capture_current_context, rva algn_1400021AD, \
                                  rva stru_140006F8C>
                RUNTIME_FUNCTION <rva capture_previous_context, rva algn_140002221, \
                                  rva stru_140006F98>
                RUNTIME_FUNCTION <rva __scrt_fastfail, rva __scrt_is_managed_app, \
                                  rva stru_140006FA4>
                RUNTIME_FUNCTION <rva __scrt_is_managed_app, rva algn_1400023C5, \
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva __scrt_unhandled_exception_filter, \
                                  rva algn_14000242B, rva stru_140006EB8>
                RUNTIME_FUNCTION <rva sub_140002430, rva sub_14000246C, \
                                  rva stru_140006EB8>
                RUNTIME_FUNCTION <rva sub_1400024E0, rva algn_14000258A, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva sub_14000258C, rva algn_14000262A, \
                                  rva stru_140006EB8>
                RUNTIME_FUNCTION <rva sub_14000262C, rva sub_1400026C4, \
                                  rva stru_140006FB4>
                RUNTIME_FUNCTION <rva sub_1400026C4, rva algn_14000275E, \
                                  rva stru_140006FC0>
                RUNTIME_FUNCTION <rva sub_140002760, rva algn_1400027EE, \
                                  rva stru_140006FD0>
                RUNTIME_FUNCTION <rva sub_1400027F0, rva algn_140002883, \
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva sub_140002890, rva algn_140002B68, \
                                  rva stru_140006FE0>
                RUNTIME_FUNCTION <rva __GSHandlerCheck, rva algn_140002B95, \
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva __GSHandlerCheckCommon, rva algn_140002BF3, \
                                  rva stru_140006FFC>
                RUNTIME_FUNCTION <rva __GSHandlerCheck_EH4, rva _CxxThrowException, \
                                  rva stru_140007004>
                RUNTIME_FUNCTION <rva loc_140002C7F, rva loc_140002C9C, \
                                  rva stru_14000701C>
                RUNTIME_FUNCTION <rva loc_140002C9C, rva algn_140002CB3, \
                                  rva stru_140007024>
                RUNTIME_FUNCTION <rva loc_140002CCC, rva algn_140002D55, \
                                  rva stru_14000702C>
                RUNTIME_FUNCTION <rva sub_140002D60, rva sub_140002DB4, \
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva sub_140002DB4, rva loc_140002E02, \
                                  rva stru_14000703C>
                RUNTIME_FUNCTION <rva loc_140002E02, rva locret_140002E58, \
                                  rva stru_140007050>
                RUNTIME_FUNCTION <rva locret_140002E58, rva algn_140002E59, \
                                  rva stru_140007064>
                RUNTIME_FUNCTION <rva sub_140002E5C, rva algn_140002E8F, \
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva sub_140002E90, rva algn_140002EC1, \
                                  rva stru_140007074>
                RUNTIME_FUNCTION <rva sub_140002EC4, rva loc_14000302F, \
                                  rva stru_140007080>
                RUNTIME_FUNCTION <rva loc_14000302F, rva algn_14000306B, \
                                  rva stru_14000709C>
                RUNTIME_FUNCTION <rva sub_14000306C, rva byte_14000314E, \
                                  rva stru_1400070A4>
                RUNTIME_FUNCTION <rva loc_14000314F, rva byte_140003177, \
                                  rva stru_14000709C>
                RUNTIME_FUNCTION <rva sub_14000317C, rva algn_1400031E1, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva sub_1400031F0, rva algn_140003227, \
                                  rva stru_140006EB8>
                RUNTIME_FUNCTION <rva sub_140003228, rva algn_140003265, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva sub_140003268, rva algn_140003289, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva sub_14000328C, rva algn_1400032BF, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva sub_1400032E0, rva algn_14000331F, \
                                  rva stru_140006EB8>
                RUNTIME_FUNCTION <rva StartAddress, rva sub_14000345C, \
                                  rva stru_1400070C0>
                RUNTIME_FUNCTION <rva sub_14000345C, rva algn_1400035CD, \
                                  rva stru_1400070DC>
                RUNTIME_FUNCTION <rva sub_1400035D0, rva algn_14000363D, \
                                  rva stru_140006EB8>
                RUNTIME_FUNCTION <rva sub_140003640, rva sub_1400036E4, \
                                  rva stru_140007104>
                RUNTIME_FUNCTION <rva sub_1400036E4, rva algn_140003772, \
                                  rva stru_14000710C>
                RUNTIME_FUNCTION <rva sub_140003774, rva algn_1400037D8, \
                                  rva stru_140007104>
                RUNTIME_FUNCTION <rva sub_1400037E0, rva algn_140003979, \
                                  rva stru_140007128>
                RUNTIME_FUNCTION <rva sub_14000397C, rva algn_140003997, \
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva sub_140003998, rva algn_1400039FE, \
                                  rva stru_140007148>
                RUNTIME_FUNCTION <rva sub_140003A00, rva sub_140003A8C, \
                                  rva stru_14000715C>
                RUNTIME_FUNCTION <rva sub_140003A8C, rva algn_140003AC2, \
                                  rva stru_140007170>
                RUNTIME_FUNCTION <rva sub_140003AD0, rva algn_140003B04, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva sub_140003B24, rva algn_140003D4E, \
                                  rva stru_140007178>
                RUNTIME_FUNCTION <rva sub_140003D50, rva sub_140003DE4, \
                                  rva stru_14000719C>
                RUNTIME_FUNCTION <rva sub_140003DF4, rva sub_140003E7C, \
                                  rva stru_1400071AC>
                RUNTIME_FUNCTION <rva sub_140003E7C, rva algn_140003F27, \
                                  rva stru_140006EB8>
                RUNTIME_FUNCTION <rva sub_140003F28, rva sub_140003FB0, \
                                  rva stru_1400071B8>
                RUNTIME_FUNCTION <rva sub_140003FB0, rva algn_14000413D, \
                                  rva stru_1400071D4>
                RUNTIME_FUNCTION <rva sub_140004140, rva algn_14000425A, \
                                  rva stru_1400071F0>
                RUNTIME_FUNCTION <rva sub_14000425C, rva algn_140004296, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva sub_1400042A0, rva algn_1400042C2, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva sub_140004310, rva algn_14000435B, \
                                  rva stru_14000719C>
                RUNTIME_FUNCTION <rva sub_14000435C, rva algn_1400043EB, \
                                  rva stru_14000720C>
                RUNTIME_FUNCTION <rva sub_1400043EC, rva algn_14000441B, \
                                  rva stru_140006ECC>
                RUNTIME_FUNCTION <rva sub_14000441C, rva algn_140004559, \
                                  rva stru_140007224>
                RUNTIME_FUNCTION <rva sub_14000455C, rva sub_140004654, \
                                  rva stru_140007244>
                RUNTIME_FUNCTION <rva sub_140004654, rva sub_1400046A4, \
                                  rva stru_14000719C>
                RUNTIME_FUNCTION <rva sub_1400046A4, rva sub_140004740, \
                                  rva stru_140007148>
                RUNTIME_FUNCTION <rva sub_140004740, rva algn_1400047D5, \
                                  rva stru_140007260>
                RUNTIME_FUNCTION <rva sub_1400047D8, rva algn_1400048B2, \
                                  rva stru_14000727C>
                RUNTIME_FUNCTION <rva sub_1400048B4, rva algn_140004999, \
                                  rva stru_1400072A0>
                RUNTIME_FUNCTION <rva sub_14000499C, rva algn_140004A49, \
                                  rva stru_140006EC4>
                RUNTIME_FUNCTION <rva sub_140004A50, rva algn_140004A8A, \
                                  rva stru_140006EC4>
                align 1000h
_pdata          ends

; Section 5. (virtual address 0000A000)
; Virtual size                  : 00000020 (     32.)
; Section size in file          : 00000200 (    512.)
; Offset to raw data for section: 00006E00
; Flags C0000040: Data Readable Writable
; Alignment     : default
;
; Delayed imports from Mso20Win32Client.dll
;
; ===========================================================================

; Segment type: Externs
; _idata
                extrn Mso20Win32Client_16175:qword ; CODE XREF: sub_14000441C+A5↑p
                                        ; sub_14000455C+75↑p
                                        ; DATA XREF: ...
                                        ; Import by ordinal 16175
                extrn Mso20Win32Client_53248:qword ; CODE XREF: sub_1400032E0+2B↑p
                                        ; sub_1400042A0+13↑p
                                        ; DATA XREF: ...
                                        ; Import by ordinal 53248
                extrn Mso20Win32Client_46386:qword
                                        ; CODE XREF: sub_14000441C+109↑p
                                        ; sub_14000455C+CF↑p
                                        ; DATA XREF: ...
                                        ; Import by ordinal 46386
; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
_didat          segment para public 'DATA' use64
                assume cs:_didat
                ;org 14000A018h
                align 1000h
_didat          ends

; Section 6. (virtual address 0000B000)
; Virtual size                  : 00000164 (    356.)
; Section size in file          : 00000200 (    512.)
; Offset to raw data for section: 00007000
; Flags C0000000: Readable Writable
; Alignment     : default
; ===========================================================================

; Segment type: Regular
; Segment permissions: Read/Write
_c2r            segment para public '' use64
                assume cs:_c2r
                ;org 14000B000h
                assume es:FLAT, ss:FLAT, ds:FLAT, fs:nothing, gs:nothing
__IMPORT_DESCRIPTOR_AppVIsvSubsystems64 dd rva qword_14000B144
                                        ; DATA XREF: HEADER:0000000140000198↑o
                                        ; HEADER:00000001400002E4↑o
                                        ; Import Name Table
                dd 0                    ; Time stamp
                dd 0FFFFFFFFh           ; Forwarder Chain
                dd rva aAppvisvsubsyst  ; DLL Name
                dd rva AppVIsvSubsystems64_1 ; Import Address Table
__IMPORT_DESCRIPTOR_ADVAPI32 dd rva off_1400062B8 ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aAdvapi32Dll     ; DLL Name
                dd rva RegQueryValueExW ; Import Address Table
__IMPORT_DESCRIPTOR_KERNEL32 dd rva off_1400062E8 ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aKernel32Dll     ; DLL Name
                dd rva RtlLookupFunctionEntry ; Import Address Table
__IMPORT_DESCRIPTOR_VCRUNTIME140_1 dd rva off_140006420 ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aVcruntime1401D  ; DLL Name
                dd rva __imp___CxxFrameHandler4 ; Import Address Table
__IMPORT_DESCRIPTOR_VCRUNTIME140 dd rva off_140006430 ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aVcruntime140Dl  ; DLL Name
                dd rva __imp_memmove    ; Import Address Table
__IMPORT_DESCRIPTOR_MSVCP140 dd rva off_140006488 ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aMsvcp140Dll     ; DLL Name
                dd rva _Query_perf_counter ; Import Address Table
                dd rva off_1400064C0    ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aApiMsWinCrtHea  ; DLL Name
                dd rva __imp__set_new_mode ; Import Address Table
                dd rva off_1400064E0    ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aApiMsWinCrtUti  ; DLL Name
                dd rva srand            ; Import Address Table
                dd rva off_1400064F8    ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aApiMsWinCrtStd  ; DLL Name
                dd rva __imp___p__commode ; Import Address Table
                dd rva off_140006518    ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aApiMsWinCrtTim  ; DLL Name
                dd rva _time64          ; Import Address Table
                dd rva off_140006528    ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aApiMsWinCrtRun  ; DLL Name
                dd rva __imp__crt_atexit ; Import Address Table
                dd rva off_1400065B8    ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aApiMsWinCrtStr  ; DLL Name
                dd rva wcsncat_s        ; Import Address Table
                dd rva off_1400065E0    ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aApiMsWinCrtMat  ; DLL Name
                dd rva __imp___setusermatherr ; Import Address Table
                dd rva off_1400065F0    ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aApiMsWinCrtLoc  ; DLL Name
                dd rva __imp___initialize_lconv_for_unsigned_char ; Import Address Table
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aAppvisvsubsyst db 'AppVIsvSubsystems64.dll',0
                                        ; DATA XREF: .c2r:000000014000B00C↑o
;
; Import names for AppVIsvSubsystems64.dll
;
qword_14000B144 dq 8000000000000001h    ; DATA XREF: .c2r:__IMPORT_DESCRIPTOR_AppVIsvSubsystems64↑o
                dq 0
;
; Imports from AppVIsvSubsystems64.dll
;
AppVIsvSubsystems64_1 dq ?              ; DATA XREF: .c2r:000000014000B010↑o
                                        ; Import by ordinal 1
                align 1000h
_c2r            ends


                end start
